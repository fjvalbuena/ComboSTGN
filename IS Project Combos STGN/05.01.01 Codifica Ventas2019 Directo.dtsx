<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/14/2016 4:17:04 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SVIDBLUKMZ03"
  DTS:CreatorName="SVIDBLUKMZ03\Administrator"
  DTS:DTSID="{D574C183-75B2-4E02-B9AD-84B1171B4E16}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1300.371"
  DTS:LocaleID="1033"
  DTS:ObjectName="05 01 01 Codifica Ventas2019 Directo"
  DTS:PackageType="5"
  DTS:VersionBuild="700"
  DTS:VersionGUID="{6839B341-9347-4AA5-B409-4F3B6C15FD44}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[BO01w.dstr.rootdts]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
      DTS:ObjectName="BO01w.dstr.rootdts">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=192.168.5.23\B2C;User ID=ASSUser;Initial Catalog=lkrdstr;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Distribucion-{8AC49E29-38EE-46C8-A6EC-469687C42F0A}SVIDBLUKMZ03.lkrdstr.rootdts;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAfEBfL6Z+60iO2tnUvCZ+IwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAD0xs5V+4qPMuPJc0pY+7rt614kG5O6jgsWGmgRYR7WWwAAAAAOgAAAAAIAACAAAACbnOKH5OckYPJeysexaqptp0IHNU/HXgffWDPmIAFw/SAAAACvVFLOG20TFS/3NcTlDILat39x7hZRDQYqm9E6E9hpEEAAAAD0LoctdtopEf1o+hRMphFlP4iSNP3Nfo4hQwNQ/VXFyBJwcOVvu2ALw+qH4QmQj22pzEckqMEZYI0YhQnUQaMK</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[BO01w.HBAVNN.rootdts]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{CBAD08F2-9E93-4369-8FA1-5624E7CC3FEB}"
      DTS:ObjectName="BO01w.HBAVNN.rootdts">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=192.168.5.23\B2C;User ID=ASSUser;Initial Catalog=HBAVENNAL;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Distribucion-{8AC49E29-38EE-46C8-A6EC-469687C42F0A}SVIDBLUKMZ03.lkrdstr.rootdts;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAfEBfL6Z+60iO2tnUvCZ+IwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAADdahSkh1g3YaLGwhbUyMfx2Ed4xdYM6u/Z97HE9a+2mQAAAAAOgAAAAAIAACAAAAAB7DvxzU73Sm4GrRS5krA/TStH1gJPmTw4Qt335FJ4ziAAAADRXk3Yyhj3ZYDgbcAMboJgP//ZZYriTq0VGrXtPTkQYkAAAADDNuo7sQR8fVvu6DYFPBEQ7OcOlibmlklTI0secIUb6lc8Y07P7i4l6zlT00at36AxPbMBzmSVafWzeyPvnDz6</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[BO01w.lukerFin.rootdts]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9FDF82CD-DAD8-42D1-8ABD-94517736CB97}"
      DTS:ObjectName="BO01w.lukerFin.rootdts">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=192.168.5.23\B2C;User ID=ASSUser;Initial Catalog=lkrdstr;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Distribucion-{8AC49E29-38EE-46C8-A6EC-469687C42F0A}SVIDBLUKMZ03.lkrdstr.rootdts;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAfEBfL6Z+60iO2tnUvCZ+IwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAABnaQmppJ70Pv0fXerw+5vww6nQyxNIYL8RQ10BUm3NiAAAAAAOgAAAAAIAACAAAABEsY6+mxt6kwoKCp1gO1lK5Sb0RpXGRWhgnAU+lulSLSAAAACA1f7s50OO+giYbvWj8cuY5vQLhrdFtO1jXhH9sqivRUAAAADKUMAptVBiUn16Y+2wMlnKNlstFQ1qRc7gC1/BEDCPrSBqoGGESP7T/x3IwwrLxTFNxjwaFxFnoCfu0e0l0zJD</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\00 1 1 Drivers totales y Porcentajes con destino"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FFBB6F8C-CD7A-4AAF-87AD-47C408604549}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="00 1 1 Drivers totales y Porcentajes con destino"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[driverDetallePorcentajeN]    Script Date: 03/31/2016 16:28:29 ******/&#xA;IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[driverDetallePorcentajeN]') AND type in (N'U'))&#xA;DROP TABLE [dbo].[driverDetallePorcentajeN]&#xA;GO&#xA;&#xA;USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[driverDetallePorcentajeN]    Script Date: 03/31/2016 16:28:30 ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;&#xA;SET ANSI_PADDING ON&#xA;GO&#xA;&#xA;CREATE TABLE [dbo].[driverDetallePorcentajeN](&#xA;&#x9;[ano] [int] NOT NULL,&#xA;&#x9;[idVersion] [varchar](15) NOT NULL,&#xA;&#x9;[llaveDriver] [varchar](11) NOT NULL,&#xA;&#x9;[idNegocio] [varchar](20) NOT NULL,&#xA;&#x9;[SalesOrganization] [varchar](4) NOT NULL,&#xA;&#x9;[SalesOffice] [varchar](2) NOT NULL,&#xA;&#x9;[DistributionChannel] [varchar](2) NOT NULL,&#xA;&#x9;[CustomerGroup] [varchar](2) NOT NULL,&#xA;&#x9;[Aliado] [nvarchar](40) NOT NULL,&#xA;&#x9;[Categoria] [nvarchar](40) NOT NULL,&#xA;&#x9;[ProductHierarchy] [varchar](18) NOT NULL,&#xA;&#x9;[pagador] [varchar](12) NOT NULL,&#xA;&#x9;[Marca] [nvarchar](40) NOT NULL,&#xA;&#x9;[baseDriver] [varchar](10) NOT NULL,&#xA;&#x9;[ene] [float] NOT NULL,&#xA;&#x9;[feb] [float] NOT NULL,&#xA;&#x9;[mar] [float] NOT NULL,&#xA;&#x9;[abr] [float] NOT NULL,&#xA;&#x9;[may] [float] NOT NULL,&#xA;&#x9;[jun] [float] NOT NULL,&#xA;&#x9;[jul] [float] NOT NULL,&#xA;&#x9;[ago] [float] NOT NULL,&#xA;&#x9;[sep] [float] NOT NULL,&#xA;&#x9;[oct] [float] NOT NULL,&#xA;&#x9;[nov] [float] NOT NULL,&#xA;&#x9;[dic] [float] NOT NULL,&#xA;&#x9;[idDestino] [varchar](20) NOT NULL,&#xA; CONSTRAINT [PK_driverDetallePorcentajeN] PRIMARY KEY CLUSTERED &#xA;(&#xA;&#x9;[ano] ASC,&#xA;&#x9;[idVersion] ASC,&#xA;&#x9;[llaveDriver] ASC,&#xA;&#x9;[idNegocio] ASC,&#xA;&#x9;[SalesOrganization] ASC,&#xA;&#x9;[SalesOffice] ASC,&#xA;&#x9;[DistributionChannel] ASC,&#xA;&#x9;[CustomerGroup] ASC,&#xA;&#x9;[Aliado] ASC,&#xA;&#x9;[Categoria] ASC,&#xA;&#x9;[ProductHierarchy] ASC,&#xA;&#x9;[pagador] ASC,&#xA;&#x9;[Marca] ASC,&#xA;&#x9;[baseDriver] ASC,&#xA;&#x9;[idDestino] ASC&#xA;)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]&#xA;) ON [PRIMARY]&#xA;&#xA;GO&#xA;&#xA;SET ANSI_PADDING OFF&#xA;GO&#xA;&#xA;&#xA;USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[driverTotalesN]    Script Date: 03/31/2016 16:27:40 ******/&#xA;IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[driverTotalesN]') AND type in (N'U'))&#xA;DROP TABLE [dbo].[driverTotalesN]&#xA;GO&#xA;&#xA;USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[driverTotalesN]    Script Date: 03/31/2016 16:27:40 ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;&#xA;SET ANSI_PADDING ON&#xA;GO&#xA;&#xA;CREATE TABLE [dbo].[driverTotalesN](&#xA;&#x9;[ano] [int] NOT NULL,&#xA;&#x9;[idVersion] [varchar](15) NOT NULL,&#xA;&#x9;[llaveDriver] [varchar](11) NOT NULL,&#xA;&#x9;[idNegocio] [varchar](20) NOT NULL,&#xA;&#x9;[SalesOrganization] [varchar](4) NOT NULL,&#xA;&#x9;[SalesOffice] [varchar](2) NOT NULL,&#xA;&#x9;[DistributionChannel] [varchar](2) NOT NULL,&#xA;&#x9;[CustomerGroup] [varchar](2) NOT NULL,&#xA;&#x9;[Aliado] [nvarchar](40) NOT NULL,&#xA;&#x9;[Categoria] [nvarchar](40) NOT NULL,&#xA;&#x9;[pagador] [varchar](12) NOT NULL,&#xA;&#x9;[Marca] [nvarchar](40) NOT NULL,&#xA;&#x9;[ProductHierarchy] [varchar](18) NOT NULL,&#xA;&#x9;[baseDriver] [varchar](10) NOT NULL,&#xA;&#x9;[eneT] [float] NOT NULL,&#xA;&#x9;[febT] [float] NOT NULL,&#xA;&#x9;[marT] [float] NOT NULL,&#xA;&#x9;[abrT] [float] NOT NULL,&#xA;&#x9;[mayT] [float] NOT NULL,&#xA;&#x9;[junT] [float] NOT NULL,&#xA;&#x9;[julT] [float] NOT NULL,&#xA;&#x9;[agoT] [float] NOT NULL,&#xA;&#x9;[sepT] [float] NOT NULL,&#xA;&#x9;[octT] [float] NOT NULL,&#xA;&#x9;[novT] [float] NOT NULL,&#xA;&#x9;[dicT] [float] NOT NULL,&#xA;&#x9;[idDestino] [varchar](20) NOT NULL,&#xA; CONSTRAINT [PK_driverTotalesN] PRIMARY KEY CLUSTERED &#xA;(&#xA;    [ano],&#xA;&#x9;[idVersion],&#xA;&#x9;[llaveDriver] ASC,&#xA;&#x9;[idNegocio] ASC,&#xA;&#x9;[SalesOrganization] ASC,&#xA;&#x9;[SalesOffice] ASC,&#xA;&#x9;[DistributionChannel] ASC,&#xA;&#x9;[CustomerGroup] ASC,&#xA;&#x9;[Aliado] ASC,&#xA;&#x9;[Categoria] ASC,&#xA;&#x9;[pagador] ASC,&#xA;&#x9;[Marca] ASC,&#xA;&#x9;[ProductHierarchy] ASC,&#xA;&#x9;[baseDriver] ASC,&#xA;&#x9;[idDestino] ASC&#xA;)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]&#xA;) ON [PRIMARY]&#xA;&#xA;GO&#xA;&#xA;SET ANSI_PADDING OFF&#xA;GO&#xA;&#xA;&#xA;&#xA;&#xA;DECLARE @x_ano  nvarchar(7), @x_versionPto nvarchar(20),@x_mes  nvarchar(7), @x_versionPry nvarchar(20), @x_versionPr1 nvarchar(20)&#xA;DECLARE @sqlCommand varchar(3777), @sqlCommand2 varchar(3777)&#xA;, @x_patron nvarchar(11), @x_patronNeg nvarchar(20), @x_patronDest nvarchar(20), @x_andNeg nvarchar(120)&#xA;, @x_space  nvarchar(7) ,@x_00  nvarchar(7), @x_lin0   nvarchar(7)&#xA;declare @_xidNegoc&#x9; Char(1),@_xSalesOr&#x9; Char(1),@_xSalesOf&#x9; Char(1),@_xDistrib&#x9; Char(1),@_xCustome&#x9; Char(1),@_xAliado&#x9; Char(1),@_xCategor&#x9; Char(1),@_xProduct&#x9; Char(1),@_xpagador&#x9; Char(1),@_xDestino&#x9; Char(1)&#xA;,@_xMarca&#x9; Char(1)&#xA;,@_xInProd nvarchar(120)&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;select  @x_space=''''''&#xA;select  @x_00='''00'''&#xA;&#xA;DELETE FROM [lkrdstr].[dbo].[direcProductHierarchyTmp]&#xA;insert into [lkrdstr].[dbo].[direcProductHierarchyTmp]&#xA;SELECT DISTINCT driverDetalleValoresN.ProductHierarchy&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE (driverDetalleValoresN.idDestino='') &#xA;AND (driverDetalleValoresN.baseDriver In ('SalidAlmV','valventa')) &#xA;AND (driverDetalleValoresN.ano=@x_ano)&#xA;&#xA;/**&#xA;SELECT DISTINCT datosFiN.ProductHierarchy&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (len(ProductHierarchy)=18)&#xA;**/&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT DISTINCT datosFiN.idAsignacionDirecta&#xA;, case left(datosFiN.idAsignacionDirecta,1) when '0' then '' else datosFiN.idNegocio end as 'idNegocio'&#xA;, datosFiN.idDestino&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.ano=@x_ano)&#xA;Union select '00100010000','',''&#xA;Union select '00100001000','',''&#xA;&#xA;Union select '10010010000','V.Comercial',''&#xA;Union select '10110010000','V.Comercial',''&#xA;Union select '10010001000','V.Comercial',''&#xA;Union select '10110001000','V.Comercial',''&#xA;Union select '10100001000','V.Comercial',''&#xA;Union select '10100010000','V.Comercial',''&#xA;&#xA;Union select '10010010000','F.SERVICE',''&#xA;Union select '10110010000','F.SERVICE',''&#xA;Union select '10010001000','F.SERVICE',''&#xA;Union select '10110001000','F.SERVICE',''&#xA;Union select '10100001000','F.SERVICE',''&#xA;Union select '10100010000','F.SERVICE',''&#xA;            &#xA;Union select '10010010000','V.GLOBAL',''&#xA;Union select '10110010000','V.GLOBAL',''&#xA;Union select '10010001000','V.GLOBAL',''&#xA;Union select '10110001000','V.GLOBAL',''&#xA;Union select '10100001000','V.GLOBAL',''&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @x_patron,@x_patronNeg,@x_patronDest&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN &#xA;&#xA;&#x9;Select&#x9;@_xidNegoc&#x9;= substring(@x_patron,1,1)&#xA;&#x9;Select&#x9;@_xSalesOr&#x9;= substring(@x_patron,2,1)&#xA;&#x9;Select&#x9;@_xSalesOf&#x9;= substring(@x_patron,3,1)&#xA;&#x9;Select&#x9;@_xDistrib&#x9;= substring(@x_patron,4,1)&#xA;&#x9;Select&#x9;@_xCustome&#x9;= substring(@x_patron,5,1)&#xA;&#x9;Select&#x9;@_xAliado&#x9;= substring(@x_patron,6,1)&#xA;&#x9;Select&#x9;@_xCategor&#x9;= substring(@x_patron,7,1)&#x9;&#xA;&#x9;Select&#x9;@_xProduct&#x9;= substring(@x_patron,8,1)&#x9;&#xA;&#x9;Select&#x9;@_xpagador&#x9;= substring(@x_patron,9,1)&#xA;&#x9;Select&#x9;@_xDestino&#x9;= case substring(@x_patron,10,1) when '1' then ' and&#x9;driverDetalleValoresN.idDestino &lt;&gt;'+@x_space else ' and&#x9;driverDetalleValoresN.idDestino ='+@x_space end&#xA;&#x9;Select&#x9;@_xMarca&#x9;= substring(@x_patron,11,1)&#xA;&#x9;    &#xA;    Select  @x_andNeg       = case  @x_patronNeg when '' then '' else  ' and driverDetalleValoresN.idNegocio='+''''+(@x_patronNeg)+'''' +' ' end&#xA;    if left(@x_patron,1)='0' Select  @x_andNeg       =''&#xA;    &#xA;    if @_xProduct = '1' &#xA;       select  @_xInProd= ' and driverDetalleValoresN.ProductHierarchy in ( SELECT ProductHierarchy FROM lkrdstr.dbo.direcProductHierarchyTmp ) '&#xA;    else&#xA;       Select @_xInProd= ''&#xA;    &#xA;        select  @sqlCommand =  ' insert into  [lkrdstr].[dbo].[driverTotalesN]  '+' &#xA;  &#x9;&#x9;SELECT driverDetalleValoresN.ano, driverDetalleValoresN.idVersion&#xA;  &#x9;&#x9;,'+''''+(@x_patron)+'''' +'&#xA;&#x9;    , '+Case @_xidNegoc when '1' then ' driverDetalleValoresN.idNegocio' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xSalesOr when '1' then ' driverDetalleValoresN.SalesOrganization' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xSalesOf when '1' then ' driverDetalleValoresN.SalesOffice' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xDistrib when '1' then ' driverDetalleValoresN.DistributionChannel' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xCustome when '1' then ' driverDetalleValoresN.CustomerGroup' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xAliado  when '1' then ' driverDetalleValoresN.Aliado' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xCategor when '1' then ' driverDetalleValoresN.Categoria' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xpagador when '1' then ' driverDetalleValoresN.pagador' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xMarca&#x9;when '1' then ' driverDetalleValoresN.Marca' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xProduct&#x9;when '1' then ' driverDetalleValoresN.ProductHierarchy' else @x_space end +'&#xA;&#x9;&#x9;, driverDetalleValoresN.baseDriver&#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.ene) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.feb) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.mar) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.abr) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.may) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.jun) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.jul) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.ago) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.sep) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.oct) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.nov) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.dic) &#xA;&#x9;&#x9;, driverDetalleValoresN.idDestino&#xA;&#x9;&#x9;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;&#x9;&#x9;where driverDetalleValoresN.ano =  '+@x_ano+' &#xA;&#x9;&#x9;'+@_xDestino+'&#xA;&#x9;&#x9;and driverDetalleValoresN.idDestino='+''''+(@x_patronDest)+'''' +'&#xA;                '+(@x_andNeg)+'&#xA;                '+(@_xInProd)+'&#xA;&#x9;&#x9;GROUP BY driverDetalleValoresN.ano , driverDetalleValoresN.idVersion&#xA;&#x9;&#x9; '+Case @_xidNegoc when '1' then ', driverDetalleValoresN.idNegocio' else '' end +'&#xA;&#x9;&#x9; '+Case @_xSalesOr when '1' then ', driverDetalleValoresN.SalesOrganization' else '' end +'&#xA;&#x9;&#x9; '+Case @_xSalesOf when '1' then ', driverDetalleValoresN.SalesOffice' else '' end +'&#xA;&#x9;&#x9; '+Case @_xDistrib when '1' then ', driverDetalleValoresN.DistributionChannel' else '' end +'&#xA;&#x9;&#x9; '+Case @_xCustome when '1' then ', driverDetalleValoresN.CustomerGroup' else '' end +'&#xA;&#x9;&#x9; '+Case @_xAliado  when '1' then ', driverDetalleValoresN.Aliado' else '' end +'&#xA;&#x9;&#x9; '+Case @_xCategor when '1' then ', driverDetalleValoresN.Categoria' else '' end +'&#xA;&#x9;&#x9; '+Case @_xpagador when '1' then ', driverDetalleValoresN.pagador' else '' end +'&#xA;&#x9;&#x9; '+Case @_xMarca   when '1' then ', driverDetalleValoresN.Marca' else '' end +'&#xA;&#x9;&#x9; '+Case @_xProduct when '1' then ', driverDetalleValoresN.ProductHierarchy' else '' end +'&#xA;&#x9;&#x9;, driverDetalleValoresN.baseDriver&#xA;&#x9;&#x9;, driverDetalleValoresN.idDestino&#xA;'&#xA;&#xA;&#x9;select  @sqlCommand2 = '&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;insert into lkrdstr.dbo.driverDetallePorcentajeN&#xA;&#x9;&#x9;SELECT&#x9;&#x9;&#xA;&#x9;&#x9;  driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverTotalesN.llaveDriver&#x9;&#x9;&#xA;&#x9;    , '+Case @_xidNegoc when '1' then ' driverDetalleValoresN.idNegocio' else @x_space end +'&#xA;&#x9;&#x9;, driverDetalleValoresN.SalesOrganization &#xA;&#x9;&#x9;, driverDetalleValoresN.SalesOffice &#xA;&#x9;&#x9;, driverDetalleValoresN.DistributionChannel&#xA;&#x9;&#x9;, driverDetalleValoresN.CustomerGroup&#xA;&#x9;&#x9;, driverDetalleValoresN.Aliado &#xA;&#x9;&#x9;, driverDetalleValoresN.Categoria &#xA;&#x9;&#x9;, driverDetalleValoresN.ProductHierarchy&#x9;&#x9;&#xA;&#x9;&#x9;, driverDetalleValoresN.pagador &#xA;&#x9;&#x9;, driverDetalleValoresN.Marca&#x9;&#x9;&#xA;&#x9;&#x9;, driverDetalleValoresN.baseDriver&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;, sum( case driverTotalesN.eneT when 0 then 0  else&#x9;driverDetalleValoresN.ene / driverTotalesN.eneT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.febT when 0 then 0  else&#x9;driverDetalleValoresN.feb / driverTotalesN.febT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.marT when 0 then 0  else&#x9;driverDetalleValoresN.mar / driverTotalesN.marT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.abrT when 0 then 0  else&#x9;driverDetalleValoresN.abr / driverTotalesN.abrT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.mayT when 0 then 0  else&#x9;driverDetalleValoresN.may / driverTotalesN.mayT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.junT when 0 then 0  else&#x9;driverDetalleValoresN.jun / driverTotalesN.junT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.julT when 0 then 0  else&#x9;driverDetalleValoresN.jul / driverTotalesN.julT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.agoT when 0 then 0  else&#x9;driverDetalleValoresN.ago / driverTotalesN.agoT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.sepT when 0 then 0  else&#x9;driverDetalleValoresN.sep / driverTotalesN.sepT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.octT when 0 then 0  else&#x9;driverDetalleValoresN.oct / driverTotalesN.octT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.novT when 0 then 0  else&#x9;driverDetalleValoresN.nov / driverTotalesN.novT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.dicT when 0 then 0  else&#x9;driverDetalleValoresN.dic / driverTotalesN.dicT end )&#xA;&#x9;&#x9;, driverTotalesN.idDestino&#xA;&#x9;&#x9;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;&#x9;&#x9;   , lkrdstr.dbo.driverTotalesN driverTotalesN&#xA;&#x9;&#x9;WHERE driverTotalesN.ano = driverDetalleValoresN.ano &#xA;&#x9;&#x9;AND driverTotalesN.baseDriver = driverDetalleValoresN.baseDriver &#xA;&#x9;&#x9;AND driverTotalesN.idDestino = driverDetalleValoresN.idDestino &#xA;&#x9;&#x9;AND driverTotalesN.idVersion = driverDetalleValoresN.idVersion &#xA;&#x9;&#x9;'+@_xDestino+'&#x9;&#x9;&#xA;&#x9;&#x9;AND (driverDetalleValoresN.ano='+@x_ano+')&#xA;&#x9;&#x9;and driverTotalesN.llaveDriver='+''''+(@x_patron)+'''' +'&#xA;&#x9;&#x9; '+Case @_xidNegoc when '1' then 'AND driverTotalesN.idNegocio = driverDetalleValoresN.idNegocio' else '' end +'&#xA;&#x9;&#x9; '+Case @_xSalesOr when '1' then 'AND driverDetalleValoresN.SalesOrganization = driverTotalesN.SalesOrganization ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xSalesOf when '1' then 'AND driverTotalesN.SalesOffice = driverDetalleValoresN.SalesOffice ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xDistrib when '1' then 'AND driverTotalesN.DistributionChannel = driverDetalleValoresN.DistributionChannel ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xCustome when '1' then 'AND driverTotalesN.CustomerGroup = driverDetalleValoresN.CustomerGroup ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xAliado  when '1' then 'AND driverDetalleValoresN.Aliado = driverTotalesN.Aliado ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xCategor when '1' then 'AND driverTotalesN.Categoria = driverDetalleValoresN.Categoria ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xpagador when '1' then 'AND driverDetalleValoresN.pagador = driverTotalesN.pagador ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xMarca   when '1' then 'AND driverDetalleValoresN.Marca = driverTotalesN.Marca ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xProduct when '1' then 'AND driverDetalleValoresN.ProductHierarchy = driverTotalesN.ProductHierarchy ' else '' end +'&#xA;&#x9;&#x9;and driverDetalleValoresN.idDestino='+''''+(@x_patronDest)+'''' +'&#xA;                '+(@x_andNeg)+'&#xA;                &#xA;        group by&#xA;&#x9;&#x9;  driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverTotalesN.llaveDriver&#x9;&#x9;&#xA;&#x9;      '+Case @_xidNegoc when '1' then ', driverDetalleValoresN.idNegocio' else '' end +'&#xA;&#x9;&#x9;, driverDetalleValoresN.SalesOrganization &#xA;&#x9;&#x9;, driverDetalleValoresN.SalesOffice &#xA;&#x9;&#x9;, driverDetalleValoresN.DistributionChannel&#xA;&#x9;&#x9;, driverDetalleValoresN.CustomerGroup&#xA;&#x9;&#x9;, driverDetalleValoresN.Aliado &#xA;&#x9;&#x9;, driverDetalleValoresN.Categoria &#xA;&#x9;&#x9;, driverDetalleValoresN.ProductHierarchy&#x9;&#x9;&#xA;&#x9;&#x9;, driverDetalleValoresN.pagador &#xA;&#x9;&#x9;, driverDetalleValoresN.Marca&#x9;&#x9;&#xA;&#x9;&#x9;, driverDetalleValoresN.baseDriver&#xA;&#x9;    , driverTotalesN.idDestino&#xA;'&#x9;&#xA;    Exec (@sqlCommand)&#xA;    Exec (@sqlCommand2)&#xA;   &#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @x_patron,@x_patronNeg,@x_patronDest&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\00 1 2 pos inv"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5B740903-994B-47A0-A306-EFACE4A83031}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="00 1 2 pos inv"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @x_ano  nvarchar(7), @x_versionPto nvarchar(20),@x_mes  nvarchar(7), @x_versionPry nvarchar(20), @x_versionPr1 nvarchar(20)&#xA;DECLARE @sqlCommand varchar(3300), @sqlCommand2 varchar(3300), @x_patron nvarchar(11),@x_space  nvarchar(7) ,@x_00  nvarchar(7), @x_lin0   nvarchar(7)&#xA;declare @_xidNegoc&#x9; Char(1),@_xSalesOr&#x9; Char(1),@_xSalesOf&#x9; Char(1),@_xDistrib&#x9; Char(1),@_xCustome&#x9; Char(1),@_xAliado&#x9; Char(1),@_xCategor&#x9; Char(1),@_xProduct&#x9; Char(1),@_xpagador&#x9; Char(1)&#xA;,@_xMarca Char(1)&#xA;&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;delete lkrdstr.dbo.driverDetalleValoresN where ano=@x_ano and baseDriver in ('InvPromKv','KilosMvCAV') &#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;-- ppto&#xA;SELECT driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio, driverDetallePorcentajeN.SalesOrganization, driverDetallePorcentajeN.SalesOffice, driverDetallePorcentajeN.DistributionChannel, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado, driverDetallePorcentajeN.Categoria, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, 'InvPromKv '&#xA;, driverDetallePorcentajeN.ene* posicionesAgenciaCategoria.ene&#xA;, driverDetallePorcentajeN.feb* posicionesAgenciaCategoria.feb&#xA;, driverDetallePorcentajeN.mar* posicionesAgenciaCategoria.mar&#xA;, driverDetallePorcentajeN.abr* posicionesAgenciaCategoria.abr&#xA;, driverDetallePorcentajeN.may* posicionesAgenciaCategoria.may&#xA;, driverDetallePorcentajeN.jun* posicionesAgenciaCategoria.jun&#xA;, driverDetallePorcentajeN.jul* posicionesAgenciaCategoria.jul&#xA;, driverDetallePorcentajeN.ago* posicionesAgenciaCategoria.ago&#xA;, driverDetallePorcentajeN.sep* posicionesAgenciaCategoria.sep&#xA;, driverDetallePorcentajeN.oct* posicionesAgenciaCategoria.oct&#xA;, driverDetallePorcentajeN.nov* posicionesAgenciaCategoria.nov&#xA;, driverDetallePorcentajeN.dic* posicionesAgenciaCategoria.dic&#xA;, driverDetallePorcentajeN.idDestino&#xA;FROM lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN&#xA;   , lkrdstr.dbo.posicionesAgenciaCategoria posicionesAgenciaCategoria&#xA;WHERE posicionesAgenciaCategoria.Categoria = driverDetallePorcentajeN.Categoria &#xA;AND driverDetallePorcentajeN.SalesOffice = posicionesAgenciaCategoria.idAgencia &#xA;and driverDetallePorcentajeN.idVersion='Version1'&#xA;AND ((driverDetallePorcentajeN.llaveDriver= '00100010000') &#xA;AND (driverDetallePorcentajeN.baseDriver='SalidAlmP') &#xA;AND (driverDetallePorcentajeN.idVersion=   posicionesAgenciaCategoria.idVersion  )&#xA;)&#xA;and posicionesAgenciaCategoria.ano = driverDetallePorcentajeN.ano&#xA;&#xA;-- real&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio, driverDetallePorcentajeN.SalesOrganization, driverDetallePorcentajeN.SalesOffice, driverDetallePorcentajeN.DistributionChannel, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado, driverDetallePorcentajeN.Categoria, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, 'InvPromKv '&#xA;, driverDetallePorcentajeN.ene* posicionesAgenciaCategoria.ene&#xA;, driverDetallePorcentajeN.feb* posicionesAgenciaCategoria.feb&#xA;, driverDetallePorcentajeN.mar* posicionesAgenciaCategoria.mar&#xA;, driverDetallePorcentajeN.abr* posicionesAgenciaCategoria.abr&#xA;, driverDetallePorcentajeN.may* posicionesAgenciaCategoria.may&#xA;, driverDetallePorcentajeN.jun* posicionesAgenciaCategoria.jun&#xA;, driverDetallePorcentajeN.jul* posicionesAgenciaCategoria.jul&#xA;, driverDetallePorcentajeN.ago* posicionesAgenciaCategoria.ago&#xA;, driverDetallePorcentajeN.sep* posicionesAgenciaCategoria.sep&#xA;, driverDetallePorcentajeN.oct* posicionesAgenciaCategoria.oct&#xA;, driverDetallePorcentajeN.nov* posicionesAgenciaCategoria.nov&#xA;, driverDetallePorcentajeN.dic* posicionesAgenciaCategoria.dic&#xA;, driverDetallePorcentajeN.idDestino&#xA;FROM lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN&#xA;   , lkrdstr.dbo.posicionesAgenciaCategoria posicionesAgenciaCategoria&#xA;WHERE posicionesAgenciaCategoria.Categoria = driverDetallePorcentajeN.Categoria AND driverDetallePorcentajeN.SalesOffice = posicionesAgenciaCategoria.idAgencia &#xA;and driverDetallePorcentajeN.idVersion='Real'&#xA;AND ((driverDetallePorcentajeN.llaveDriver= '00100010000') &#xA;AND (driverDetallePorcentajeN.baseDriver='SalidAlmP') &#xA;AND (driverDetallePorcentajeN.idVersion=   posicionesAgenciaCategoria.idVersion  )&#xA;)&#xA;and posicionesAgenciaCategoria.ano = driverDetallePorcentajeN.ano&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio, xlsLogisticaPrimariaODCat.ORIGEN&#xA;, driverDetallePorcentajeN.SalesOffice, driverDetallePorcentajeN.DistributionChannel, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado&#xA;, driverDetallePorcentajeN.Categoria, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, 'KilosMvCAV'&#xA;, driverDetallePorcentajeN.ene* xlsLogisticaPrimariaODCat.ene&#xA;, driverDetallePorcentajeN.feb* xlsLogisticaPrimariaODCat.feb&#xA;, driverDetallePorcentajeN.mar* xlsLogisticaPrimariaODCat.mar&#xA;, driverDetallePorcentajeN.abr* xlsLogisticaPrimariaODCat.abr&#xA;, driverDetallePorcentajeN.may* xlsLogisticaPrimariaODCat.may&#xA;, driverDetallePorcentajeN.jun* xlsLogisticaPrimariaODCat.jun&#xA;, driverDetallePorcentajeN.jul* xlsLogisticaPrimariaODCat.jul&#xA;, driverDetallePorcentajeN.ago* xlsLogisticaPrimariaODCat.ago&#xA;, driverDetallePorcentajeN.sep* xlsLogisticaPrimariaODCat.sep&#xA;, driverDetallePorcentajeN.oct* xlsLogisticaPrimariaODCat.oct&#xA;, driverDetallePorcentajeN.nov* xlsLogisticaPrimariaODCat.nov&#xA;, driverDetallePorcentajeN.dic* xlsLogisticaPrimariaODCat.dic&#xA;, driverDetallePorcentajeN.idDestino&#xA;FROM lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN&#xA;, lkrdstr.dbo.xlsLogisticaPrimariaODLin xlsLogisticaPrimariaODCat&#xA;WHERE xlsLogisticaPrimariaODCat.ano = driverDetallePorcentajeN.ano &#xA;AND xlsLogisticaPrimariaODCat.Linea = driverDetallePorcentajeN.ProductHierarchy &#xA;AND driverDetallePorcentajeN.SalesOffice = xlsLogisticaPrimariaODCat.idOficina &#xA;AND ((driverDetallePorcentajeN.idDestino='') &#xA;AND (driverDetallePorcentajeN.baseDriver='SalidAlmV') &#xA;AND (driverDetallePorcentajeN.idNegocio='v.comercial') &#xA;AND (driverDetallePorcentajeN.llaveDriver='10100001000'))&#xA;AND (driverDetallePorcentajeN.idVersion='Real')&#xA;AND (driverDetallePorcentajeN.SalesOrganization='1010')&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio, driverDetallePorcentajeN.SalesOrganization&#xA;, driverDetallePorcentajeN.SalesOffice, driverDetallePorcentajeN.DistributionChannel, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado&#xA;, driverDetallePorcentajeN.Categoria, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, 'KilosMvCAV'&#xA;, driverDetallePorcentajeN.ene* xlsLogisticaPrimariaODCat.ene&#xA;, driverDetallePorcentajeN.feb* xlsLogisticaPrimariaODCat.feb&#xA;, driverDetallePorcentajeN.mar* xlsLogisticaPrimariaODCat.mar&#xA;, driverDetallePorcentajeN.abr* xlsLogisticaPrimariaODCat.abr&#xA;, driverDetallePorcentajeN.may* xlsLogisticaPrimariaODCat.may&#xA;, driverDetallePorcentajeN.jun* xlsLogisticaPrimariaODCat.jun&#xA;, driverDetallePorcentajeN.jul* xlsLogisticaPrimariaODCat.jul&#xA;, driverDetallePorcentajeN.ago* xlsLogisticaPrimariaODCat.ago&#xA;, driverDetallePorcentajeN.sep* xlsLogisticaPrimariaODCat.sep&#xA;, driverDetallePorcentajeN.oct* xlsLogisticaPrimariaODCat.oct&#xA;, driverDetallePorcentajeN.nov* xlsLogisticaPrimariaODCat.nov&#xA;, driverDetallePorcentajeN.dic* xlsLogisticaPrimariaODCat.dic&#xA;, driverDetallePorcentajeN.idDestino&#xA;FROM lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN&#xA;, lkrdstr.dbo.xlsLogisticaPrimariaDLin xlsLogisticaPrimariaODCat&#xA;WHERE xlsLogisticaPrimariaODCat.ano = driverDetallePorcentajeN.ano &#xA;AND xlsLogisticaPrimariaODCat.Linea = driverDetallePorcentajeN.ProductHierarchy &#xA;AND driverDetallePorcentajeN.SalesOffice = xlsLogisticaPrimariaODCat.idOficina &#xA;AND ((driverDetallePorcentajeN.idDestino='') &#xA;AND (driverDetallePorcentajeN.baseDriver='SalidAlmV') &#xA;AND (driverDetallePorcentajeN.idNegocio='v.comercial') &#xA;AND (driverDetallePorcentajeN.llaveDriver='10100001000'))&#xA;AND (driverDetallePorcentajeN.idVersion='Real')&#xA;AND (driverDetallePorcentajeN.SalesOrganization='1010')&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio, ORIGEN&#xA;, driverDetallePorcentajeN.SalesOffice, driverDetallePorcentajeN.DistributionChannel, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado&#xA;, driverDetallePorcentajeN.Categoria, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, 'KilosMvCAV'&#xA;, driverDetallePorcentajeN.ene* xlsLogisticaPrimariaODCat.ene&#xA;, driverDetallePorcentajeN.feb* xlsLogisticaPrimariaODCat.feb&#xA;, driverDetallePorcentajeN.mar* xlsLogisticaPrimariaODCat.mar&#xA;, driverDetallePorcentajeN.abr* xlsLogisticaPrimariaODCat.abr&#xA;, driverDetallePorcentajeN.may* xlsLogisticaPrimariaODCat.may&#xA;, driverDetallePorcentajeN.jun* xlsLogisticaPrimariaODCat.jun&#xA;, driverDetallePorcentajeN.jul* xlsLogisticaPrimariaODCat.jul&#xA;, driverDetallePorcentajeN.ago* xlsLogisticaPrimariaODCat.ago&#xA;, driverDetallePorcentajeN.sep* xlsLogisticaPrimariaODCat.sep&#xA;, driverDetallePorcentajeN.oct* xlsLogisticaPrimariaODCat.oct&#xA;, driverDetallePorcentajeN.nov* xlsLogisticaPrimariaODCat.nov&#xA;, driverDetallePorcentajeN.dic* xlsLogisticaPrimariaODCat.dic&#xA;, driverDetallePorcentajeN.idDestino&#xA;FROM lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN&#xA;, lkrdstr.dbo.xlsLogisticaPrimariaODCatPpto xlsLogisticaPrimariaODCat&#xA;WHERE xlsLogisticaPrimariaODCat.ano = driverDetallePorcentajeN.ano &#xA;AND xlsLogisticaPrimariaODCat.Categoria = driverDetallePorcentajeN.Categoria &#xA;AND driverDetallePorcentajeN.SalesOffice = xlsLogisticaPrimariaODCat.idOficina &#xA;AND ((driverDetallePorcentajeN.idDestino='') &#xA;AND (driverDetallePorcentajeN.baseDriver='SalidAlmV') &#xA;AND (driverDetallePorcentajeN.idNegocio in ('v.comercial','F.SERVICE')) &#xA;AND (driverDetallePorcentajeN.llaveDriver='10100010000'))&#xA;AND (driverDetallePorcentajeN.idVersion='Version1'   )&#xA;AND (driverDetallePorcentajeN.SalesOrganization='1010')&#xA;&#xA;update driverDetalleValoresN set&#xA;driverDetalleValoresN.idNegocio= customerGroup.nptNegocio&#xA;FROM lkrdstr.dbo.customerGroup customerGroup, lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE customerGroup.distriChannel = driverDetalleValoresN.DistributionChannel AND ((driverDetalleValoresN.idNegocio=''))&#xA;&#xA;--- InvPromKv sinF.Service&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverDetalleValoresN.idNegocio, driverDetalleValoresN.SalesOrganization, driverDetalleValoresN.SalesOffice&#xA;, driverDetalleValoresN.DistributionChannel, driverDetalleValoresN.CustomerGroup, driverDetalleValoresN.Aliado, driverDetalleValoresN.Categoria, driverDetalleValoresN.ProductHierarchy&#xA;, driverDetalleValoresN.pagador, driverDetalleValoresN.Marca, driverDetalleValoresN.baseDriver, driverDetalleValoresN.ene, driverDetalleValoresN.feb, driverDetalleValoresN.mar&#xA;, driverDetalleValoresN.abr, driverDetalleValoresN.may, driverDetalleValoresN.jun, driverDetalleValoresN.jul, driverDetalleValoresN.ago, driverDetalleValoresN.sep, driverDetalleValoresN.oct&#xA;, driverDetalleValoresN.nov, driverDetalleValoresN.dic, 'sinF.Service'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE (driverDetalleValoresN.ano=@x_ano) AND (driverDetalleValoresN.baseDriver='InvPromKv ') &#xA;AND (driverDetalleValoresN.idNegocio&lt;&gt;'F.SERVICE')&#xA;AND (driverDetalleValoresN.CustomerGroup&lt;&gt;'41')&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\00 1 3 tabCuCom"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{762B9E8B-F352-4643-BD62-E3472B383D13}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="00 1 3 tabCuCom"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol &#xA;WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;delete lkrdstr.dbo.driverDetalleValoresN where SalesOrganization like 'tbc%'&#xA;-- Ag:00 Can:00&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio&#xA;, 'tbc0'&#xA;, driverDetallePorcentajeN.SalesOffice, driverDetallePorcentajeN.DistributionChannel&#xA;, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado, driverDetallePorcentajeN.Categoria&#xA;, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, 'tabCuCom'&#xA;, sum(driverDetallePorcentajeN.ene* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.feb* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.mar* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.abr* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.may* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.jun* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.jul* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.ago* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.sep* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.oct* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.nov* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.dic* xlsTabCuComNuevo.porcTabCuCom)&#xA;, driverDetallePorcentajeN.idDestino&#xA;FROM lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN, lkrdstr.dbo.xlsTabCuComNuevo xlsTabCuComNuevo&#xA;WHERE xlsTabCuComNuevo.ano = driverDetallePorcentajeN.ano &#xA;AND driverDetallePorcentajeN.Categoria = xlsTabCuComNuevo.idCategoria &#xA;AND ((driverDetallePorcentajeN.idDestino='') &#xA;AND (driverDetallePorcentajeN.baseDriver='valVenta') &#xA;AND (driverDetallePorcentajeN.llaveDriver='10000010000') &#xA;AND (driverDetallePorcentajeN.idNegocio in ('V.Comercial','F.SERVICE')) &#xA;AND (driverDetallePorcentajeN.SalesOrganization='1010')&#xA;AND (xlsTabCuComNuevo.idAgencia='') &#xA;AND (xlsTabCuComNuevo.idCanal=''))&#xA;group by&#xA;driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio&#xA;, driverDetallePorcentajeN.SalesOffice, driverDetallePorcentajeN.DistributionChannel&#xA;, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado, driverDetallePorcentajeN.Categoria&#xA;, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, driverDetallePorcentajeN.idDestino&#xA;--1 tbc1 Ag:00 Can:xx&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio&#xA;, 'tbc1'&#xA;, driverDetallePorcentajeN.SalesOffice&#xA;, driverDetallePorcentajeN.DistributionChannel, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado, driverDetallePorcentajeN.Categoria&#xA;, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, 'tabCuCom'&#xA;, sum(driverDetallePorcentajeN.ene* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.feb* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.mar* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.abr* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.may* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.jun* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.jul* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.ago* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.sep* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.oct* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.nov* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.dic* xlsTabCuComNuevo.porcTabCuCom)&#xA;, driverDetallePorcentajeN.idDestino&#xA;FROM lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN, lkrdstr.dbo.xlsTabCuComNuevo xlsTabCuComNuevo&#xA;WHERE xlsTabCuComNuevo.ano = driverDetallePorcentajeN.ano &#xA;AND driverDetallePorcentajeN.DistributionChannel = xlsTabCuComNuevo.idCanal &#xA;AND xlsTabCuComNuevo.idCategoria = driverDetallePorcentajeN.Categoria &#xA;AND ((driverDetallePorcentajeN.ano=@x_ano ) &#xA;AND (driverDetallePorcentajeN.idDestino='') &#xA;AND (driverDetallePorcentajeN.idNegocio in ('V.Comercial','F.SERVICE')) &#xA;AND (driverDetallePorcentajeN.SalesOrganization='1010')&#xA;AND (driverDetallePorcentajeN.llaveDriver='10010010000') &#xA;AND (driverDetallePorcentajeN.baseDriver='valVenta') &#xA;AND (xlsTabCuComNuevo.idCanal&lt;&gt;'')&#xA;AND (xlsTabCuComNuevo.idAgencia=''))&#xA;group by&#xA;driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio&#xA;, driverDetallePorcentajeN.SalesOffice&#xA;, driverDetallePorcentajeN.DistributionChannel, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado, driverDetallePorcentajeN.Categoria&#xA;, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, driverDetallePorcentajeN.idDestino&#xA;&#xA;--tbc2 Ag:xx Can:00&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio&#xA;, 'tbc2'&#xA;, driverDetallePorcentajeN.SalesOffice&#xA;, driverDetallePorcentajeN.DistributionChannel, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado, driverDetallePorcentajeN.Categoria&#xA;, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, 'tabCuCom'&#xA;, sum(driverDetallePorcentajeN.ene* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.feb* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.mar* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.abr* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.may* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.jun* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.jul* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.ago* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.sep* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.oct* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.nov* xlsTabCuComNuevo.porcTabCuCom)&#xA;, sum(driverDetallePorcentajeN.dic* xlsTabCuComNuevo.porcTabCuCom)&#xA;,  driverDetallePorcentajeN.idDestino&#xA;FROM lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN, lkrdstr.dbo.xlsTabCuComNuevo xlsTabCuComNuevo&#xA;WHERE xlsTabCuComNuevo.ano = driverDetallePorcentajeN.ano &#xA;AND xlsTabCuComNuevo.idCategoria = driverDetallePorcentajeN.Categoria &#xA;AND xlsTabCuComNuevo.idAgencia = driverDetallePorcentajeN.SalesOffice &#xA;AND ((driverDetallePorcentajeN.ano=@x_ano ) &#xA;AND (driverDetallePorcentajeN.idDestino='') &#xA;AND (driverDetallePorcentajeN.idNegocio in ('V.Comercial','F.SERVICE')) &#xA;AND (driverDetallePorcentajeN.SalesOrganization='1010')&#xA;AND (driverDetallePorcentajeN.llaveDriver='10100010000') &#xA;AND (driverDetallePorcentajeN.baseDriver='valVenta') &#xA;AND (xlsTabCuComNuevo.idAgencia&lt;&gt;'') &#xA;AND (xlsTabCuComNuevo.idCanal='') &#xA;AND (driverDetallePorcentajeN.DistributionChannel&lt;&gt;'14') &#xA;)&#xA;group by&#xA; driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio&#xA;, driverDetallePorcentajeN.SalesOffice&#xA;, driverDetallePorcentajeN.DistributionChannel, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado, driverDetallePorcentajeN.Categoria&#xA;, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;,  driverDetallePorcentajeN.idDestino&#xA;&#xA;&#xA;--tbc3 Ag:xx Can:xx&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio&#xA;, 'tbc3'&#xA;, driverDetallePorcentajeN.SalesOffice&#xA;, driverDetallePorcentajeN.DistributionChannel, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado, driverDetallePorcentajeN.Categoria&#xA;, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, 'tabCuCom'&#xA;, driverDetallePorcentajeN.ene* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.feb* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.mar* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.abr* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.may* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.jun* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.jul* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.ago* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.sep* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.oct* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.nov* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.dic* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.idDestino&#xA;FROM lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN, lkrdstr.dbo.xlsTabCuComNuevo xlsTabCuComNuevo&#xA;WHERE xlsTabCuComNuevo.ano = driverDetallePorcentajeN.ano &#xA;AND xlsTabCuComNuevo.idCategoria = driverDetallePorcentajeN.Categoria &#xA;AND driverDetallePorcentajeN.SalesOffice = xlsTabCuComNuevo.idAgencia &#xA;AND driverDetallePorcentajeN.DistributionChannel = xlsTabCuComNuevo.idCanal &#xA;AND ((driverDetallePorcentajeN.ano=@x_ano ) AND (driverDetallePorcentajeN.idDestino='') &#xA;AND (driverDetallePorcentajeN.idNegocio in ('V.Comercial','F.SERVICE')) &#xA;AND (driverDetallePorcentajeN.SalesOrganization='1010')&#xA;AND (driverDetallePorcentajeN.llaveDriver='10110010000') &#xA;AND (driverDetallePorcentajeN.baseDriver='valVenta'))&#xA;&#xA;-- Ag:00 Can:00 Pagador&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.idNegocio&#xA;, 'tbc4'&#xA;, driverDetallePorcentajeN.SalesOffice, driverDetallePorcentajeN.DistributionChannel&#xA;, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado, driverDetallePorcentajeN.Categoria&#xA;, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador&#xA;, driverDetallePorcentajeN.Marca&#xA;, 'tabCuCom'&#xA;, driverDetallePorcentajeN.ene* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.feb* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.mar* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.abr* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.may* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.jun* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.jul* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.ago* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.sep* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.oct* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.nov* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.dic* xlsTabCuComNuevo.porcTabCuCom&#xA;, driverDetallePorcentajeN.idDestino&#xA;FROM lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN, lkrdstr.dbo.xlsTabCuComNuevo xlsTabCuComNuevo&#xA;WHERE xlsTabCuComNuevo.ano = driverDetallePorcentajeN.ano &#xA;AND driverDetallePorcentajeN.Categoria = xlsTabCuComNuevo.idCategoria &#xA;AND ((driverDetallePorcentajeN.idDestino='') &#xA;AND (driverDetallePorcentajeN.baseDriver='valVenta') &#xA;AND (driverDetallePorcentajeN.llaveDriver='10000010100') &#xA;AND (driverDetallePorcentajeN.idNegocio in ('V.Comercial','F.SERVICE')) &#xA;AND (driverDetallePorcentajeN.SalesOrganization='1010')&#xA;AND (xlsTabCuComNuevo.idAgencia='') &#xA;AND (xlsTabCuComNuevo.idCanal='14'))&#xA;&#xA;go&#xA;DECLARE @x_ano  nvarchar(7), @x_versionPto nvarchar(20),@x_mes  nvarchar(7), @x_versionPry nvarchar(20), @x_versionPr1 nvarchar(20)&#xA;DECLARE @sqlCommand varchar(3300), @sqlCommand2 varchar(3300), @x_patron nvarchar(11),@x_space  nvarchar(7) ,@x_00  nvarchar(7), @x_lin0   nvarchar(7)&#xA;declare @_xidNegoc&#x9; Char(1),@_xSalesOr&#x9; Char(1),@_xSalesOf&#x9; Char(1),@_xDistrib&#x9; Char(1),@_xCustome&#x9; Char(1),@_xAliado&#x9; Char(1),@_xCategor&#x9; Char(1),@_xProduct&#x9; Char(1),@_xpagador&#x9; Char(1)&#xA;,@_xMarca Char(1)&#xA;&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;delete from  lkrdstr.dbo.driverDetalleValoresN where idDestino &lt;&gt;''  AND (driverDetalleValoresN.baseDriver='tabCuCom')&#xA;&#xA;&#xA;--- Mayoristas del 11&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverDetalleValoresN.idNegocio&#xA;, driverDetalleValoresN.SalesOrganization&#xA;, driverDetalleValoresN.SalesOffice, driverDetalleValoresN.DistributionChannel, driverDetalleValoresN.CustomerGroup, driverDetalleValoresN.Aliado, driverDetalleValoresN.Categoria, driverDetalleValoresN.ProductHierarchy, driverDetalleValoresN.pagador&#xA;, driverDetalleValoresN.Marca&#xA;, driverDetalleValoresN.baseDriver, driverDetalleValoresN.ene, driverDetalleValoresN.feb, driverDetalleValoresN.mar, driverDetalleValoresN.abr, driverDetalleValoresN.may, driverDetalleValoresN.jun, driverDetalleValoresN.jul, driverDetalleValoresN.ago, driverDetalleValoresN.sep, driverDetalleValoresN.oct, driverDetalleValoresN.nov, driverDetalleValoresN.dic&#xA;, 'MAYO'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE (driverDetalleValoresN.idDestino=' ') AND (driverDetalleValoresN.CustomerGroup In ('05','45','46'))&#xA;and driverDetalleValoresN.ano=@x_ano&#xA;AND (driverDetalleValoresN.baseDriver='tabCuCom')&#xA;&#xA;--- Distribuidores Agentes comer&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverDetalleValoresN.idNegocio&#xA;, driverDetalleValoresN.SalesOrganization&#xA;, driverDetalleValoresN.SalesOffice, driverDetalleValoresN.DistributionChannel, driverDetalleValoresN.CustomerGroup, driverDetalleValoresN.Aliado, driverDetalleValoresN.Categoria, driverDetalleValoresN.ProductHierarchy, driverDetalleValoresN.pagador&#xA;, driverDetalleValoresN.Marca&#xA;, driverDetalleValoresN.baseDriver, driverDetalleValoresN.ene, driverDetalleValoresN.feb, driverDetalleValoresN.mar, driverDetalleValoresN.abr, driverDetalleValoresN.may, driverDetalleValoresN.jun, driverDetalleValoresN.jul, driverDetalleValoresN.ago, driverDetalleValoresN.sep, driverDetalleValoresN.oct, driverDetalleValoresN.nov, driverDetalleValoresN.dic&#xA;, 'DSAG'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE (driverDetalleValoresN.idDestino=' ') AND (driverDetalleValoresN.CustomerGroup In ('08','09'))&#xA;and driverDetalleValoresN.ano=@x_ano&#xA;AND (driverDetalleValoresN.baseDriver='tabCuCom')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\00 2 Drivers totales y Porcentajes con destino 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8205C7DB-520A-4C6B-BBA3-1D4470D313D2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="00 2 Drivers totales y Porcentajes con destino 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[driverDetallePorcentajeN]    Script Date: 03/31/2016 16:28:29 ******/&#xA;IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[driverDetallePorcentajeN]') AND type in (N'U'))&#xA;DROP TABLE [dbo].[driverDetallePorcentajeN]&#xA;GO&#xA;&#xA;USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[driverDetallePorcentajeN]    Script Date: 03/31/2016 16:28:30 ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;&#xA;SET ANSI_PADDING ON&#xA;GO&#xA;&#xA;CREATE TABLE [dbo].[driverDetallePorcentajeN](&#xA;&#x9;[ano] [int] NOT NULL,&#xA;&#x9;[idVersion] [varchar](15) NOT NULL,&#xA;&#x9;[llaveDriver] [varchar](11) NOT NULL,&#xA;&#x9;[idNegocio] [varchar](20) NOT NULL,&#xA;&#x9;[SalesOrganization] [varchar](4) NOT NULL,&#xA;&#x9;[SalesOffice] [varchar](2) NOT NULL,&#xA;&#x9;[DistributionChannel] [varchar](2) NOT NULL,&#xA;&#x9;[CustomerGroup] [varchar](2) NOT NULL,&#xA;&#x9;[Aliado] [nvarchar](40) NOT NULL,&#xA;&#x9;[Categoria] [nvarchar](40) NOT NULL,&#xA;&#x9;[ProductHierarchy] [varchar](18) NOT NULL,&#xA;&#x9;[pagador] [varchar](12) NOT NULL,&#xA;&#x9;[Marca] [nvarchar](40) NOT NULL,&#xA;&#x9;[baseDriver] [varchar](10) NOT NULL,&#xA;&#x9;[ene] [float] NOT NULL,&#xA;&#x9;[feb] [float] NOT NULL,&#xA;&#x9;[mar] [float] NOT NULL,&#xA;&#x9;[abr] [float] NOT NULL,&#xA;&#x9;[may] [float] NOT NULL,&#xA;&#x9;[jun] [float] NOT NULL,&#xA;&#x9;[jul] [float] NOT NULL,&#xA;&#x9;[ago] [float] NOT NULL,&#xA;&#x9;[sep] [float] NOT NULL,&#xA;&#x9;[oct] [float] NOT NULL,&#xA;&#x9;[nov] [float] NOT NULL,&#xA;&#x9;[dic] [float] NOT NULL,&#xA;&#x9;[idDestino] [varchar](20) NOT NULL,&#xA; CONSTRAINT [PK_driverDetallePorcentajeN] PRIMARY KEY CLUSTERED &#xA;(&#xA;&#x9;[ano] ASC,&#xA;&#x9;[idVersion] ASC,&#xA;&#x9;[llaveDriver] ASC,&#xA;&#x9;[idNegocio] ASC,&#xA;&#x9;[SalesOrganization] ASC,&#xA;&#x9;[SalesOffice] ASC,&#xA;&#x9;[DistributionChannel] ASC,&#xA;&#x9;[CustomerGroup] ASC,&#xA;&#x9;[Aliado] ASC,&#xA;&#x9;[Categoria] ASC,&#xA;&#x9;[ProductHierarchy] ASC,&#xA;&#x9;[pagador] ASC,&#xA;&#x9;[Marca] ASC,&#xA;&#x9;[baseDriver] ASC,&#xA;&#x9;[idDestino] ASC&#xA;)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]&#xA;) ON [PRIMARY]&#xA;&#xA;GO&#xA;&#xA;SET ANSI_PADDING OFF&#xA;GO&#xA;&#xA;&#xA;&#xA;USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[driverTotalesN]    Script Date: 03/31/2016 16:27:40 ******/&#xA;IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[driverTotalesN]') AND type in (N'U'))&#xA;DROP TABLE [dbo].[driverTotalesN]&#xA;GO&#xA;&#xA;USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[driverTotalesN]    Script Date: 03/31/2016 16:27:40 ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;&#xA;SET ANSI_PADDING ON&#xA;GO&#xA;&#xA;CREATE TABLE [dbo].[driverTotalesN](&#xA;&#x9;[ano] [int] NOT NULL,&#xA;&#x9;[idVersion] [varchar](15) NOT NULL,&#xA;&#x9;[llaveDriver] [varchar](11) NOT NULL,&#xA;&#x9;[idNegocio] [varchar](20) NOT NULL,&#xA;&#x9;[SalesOrganization] [varchar](4) NOT NULL,&#xA;&#x9;[SalesOffice] [varchar](2) NOT NULL,&#xA;&#x9;[DistributionChannel] [varchar](2) NOT NULL,&#xA;&#x9;[CustomerGroup] [varchar](2) NOT NULL,&#xA;&#x9;[Aliado] [nvarchar](40) NOT NULL,&#xA;&#x9;[Categoria] [nvarchar](40) NOT NULL,&#xA;&#x9;[pagador] [varchar](12) NOT NULL,&#xA;&#x9;[Marca] [nvarchar](40) NOT NULL,&#xA;&#x9;[ProductHierarchy] [varchar](18) NOT NULL,&#xA;&#x9;[baseDriver] [varchar](10) NOT NULL,&#xA;&#x9;[eneT] [float] NOT NULL,&#xA;&#x9;[febT] [float] NOT NULL,&#xA;&#x9;[marT] [float] NOT NULL,&#xA;&#x9;[abrT] [float] NOT NULL,&#xA;&#x9;[mayT] [float] NOT NULL,&#xA;&#x9;[junT] [float] NOT NULL,&#xA;&#x9;[julT] [float] NOT NULL,&#xA;&#x9;[agoT] [float] NOT NULL,&#xA;&#x9;[sepT] [float] NOT NULL,&#xA;&#x9;[octT] [float] NOT NULL,&#xA;&#x9;[novT] [float] NOT NULL,&#xA;&#x9;[dicT] [float] NOT NULL,&#xA;&#x9;[idDestino] [varchar](20) NOT NULL,&#xA; CONSTRAINT [PK_driverTotalesN] PRIMARY KEY CLUSTERED &#xA;(&#xA;    [ano],&#xA;&#x9;[idVersion],&#xA;&#x9;[llaveDriver] ASC,&#xA;&#x9;[idNegocio] ASC,&#xA;&#x9;[SalesOrganization] ASC,&#xA;&#x9;[SalesOffice] ASC,&#xA;&#x9;[DistributionChannel] ASC,&#xA;&#x9;[CustomerGroup] ASC,&#xA;&#x9;[Aliado] ASC,&#xA;&#x9;[Categoria] ASC,&#xA;&#x9;[pagador] ASC,&#xA;&#x9;[Marca] ASC,&#xA;&#x9;[ProductHierarchy] ASC,&#xA;&#x9;[baseDriver] ASC,&#xA;&#x9;[idDestino] ASC&#xA;)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]&#xA;) ON [PRIMARY]&#xA;&#xA;GO&#xA;&#xA;SET ANSI_PADDING OFF&#xA;GO&#xA;&#xA;&#xA;&#xA;&#xA;DECLARE @x_ano  nvarchar(7), @x_versionPto nvarchar(20),@x_mes  nvarchar(7), @x_versionPry nvarchar(20), @x_versionPr1 nvarchar(20)&#xA;DECLARE @sqlCommand varchar(3777), @sqlCommand2 varchar(3777)&#xA;, @x_patron nvarchar(11), @x_patronNeg nvarchar(20), @x_patronDest nvarchar(20), @x_andNeg nvarchar(120)&#xA;, @x_space  nvarchar(7) ,@x_00  nvarchar(7), @x_lin0   nvarchar(7)&#xA;declare @_xidNegoc&#x9; Char(1),@_xSalesOr&#x9; Char(1),@_xSalesOf&#x9; Char(1),@_xDistrib&#x9; Char(1),@_xCustome&#x9; Char(1),@_xAliado&#x9; Char(1),@_xCategor&#x9; Char(1),@_xProduct&#x9; Char(1),@_xpagador&#x9; Char(1),@_xDestino&#x9; Char(1)&#xA;,@_xMarca&#x9; Char(1)&#xA;,@_xInProd nvarchar(120)&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;select  @x_space=''''''&#xA;select  @x_00='''00'''&#xA;&#xA;DELETE FROM [lkrdstr].[dbo].[direcProductHierarchyTmp]&#xA;insert into [lkrdstr].[dbo].[direcProductHierarchyTmp]&#xA;SELECT DISTINCT driverDetalleValoresN.ProductHierarchy&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE (driverDetalleValoresN.idDestino='') &#xA;AND (driverDetalleValoresN.baseDriver In ('SalidAlmV','valventa')) &#xA;AND (driverDetalleValoresN.ano=@x_ano)&#xA;&#xA;&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;SELECT DISTINCT datosFiN.idAsignacionDirecta&#xA;, case left(datosFiN.idAsignacionDirecta,1) when '0' then '' else datosFiN.idNegocio end as 'idNegocio'&#xA;, datosFiN.idDestino&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.ano=@x_ano)&#xA;Union select '00100010000','',''&#xA;Union select '00100001000','',''&#xA;&#xA;Union select '10010010000','V.Comercial',''&#xA;Union select '10110010000','V.Comercial',''&#xA;Union select '10010001000','V.Comercial',''&#xA;Union select '10110001000','V.Comercial',''&#xA;Union select '10100001000','V.Comercial',''&#xA;Union select '10011100010','V.Comercial',''&#xA;Union select '10011110010','V.Comercial',''&#xA;Union select '10000100010','V.Comercial',''&#xA;Union select '10100110010','V.Comercial',''&#xA;Union select '10101110010','V.Comercial',''&#xA;Union select '10111110010','V.Comercial',''&#xA;Union select '10111100010','V.Comercial',''&#xA;Union select '10000110010','V.Comercial',''&#xA;Union select '10101100010','V.Comercial',''&#xA;&#xA;Union select '10010010000','F.SERVICE',''&#xA;Union select '10110010000','F.SERVICE',''&#xA;Union select '10010001000','F.SERVICE',''&#xA;Union select '10110001000','F.SERVICE',''&#xA;Union select '10100001000','F.SERVICE',''&#xA;&#xA;Union select '10010010000','V.GLOBAL',''&#xA;Union select '10110010000','V.GLOBAL',''&#xA;Union select '10010001000','V.GLOBAL',''&#xA;Union select '10110001000','V.GLOBAL',''&#xA;Union select '10100001000','V.GLOBAL',''&#xA;&#xA;&#xA;&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @x_patron,@x_patronNeg,@x_patronDest&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN &#xA;&#xA;&#x9;Select&#x9;@_xidNegoc&#x9;= substring(@x_patron,1,1)&#xA;&#x9;Select&#x9;@_xSalesOr&#x9;= substring(@x_patron,2,1)&#xA;&#x9;Select&#x9;@_xSalesOf&#x9;= substring(@x_patron,3,1)&#xA;&#x9;Select&#x9;@_xDistrib&#x9;= substring(@x_patron,4,1)&#xA;&#x9;Select&#x9;@_xCustome&#x9;= substring(@x_patron,5,1)&#xA;&#x9;Select&#x9;@_xAliado&#x9;= substring(@x_patron,6,1)&#xA;&#x9;Select&#x9;@_xCategor&#x9;= substring(@x_patron,7,1)&#x9;&#xA;&#x9;Select&#x9;@_xProduct&#x9;= substring(@x_patron,8,1)&#x9;&#xA;&#x9;Select&#x9;@_xpagador&#x9;= substring(@x_patron,9,1)&#xA;&#x9;Select&#x9;@_xDestino&#x9;= case substring(@x_patron,10,1) when '1' then ' and&#x9;driverDetalleValoresN.idDestino &lt;&gt;'+@x_space else ' and&#x9;driverDetalleValoresN.idDestino ='+@x_space end&#xA;&#x9;Select&#x9;@_xMarca&#x9;= substring(@x_patron,11,1)&#xA;&#x9;    &#xA;    Select  @x_andNeg       = case  @x_patronNeg when '' then '' else  ' and driverDetalleValoresN.idNegocio='+''''+(@x_patronNeg)+'''' +' ' end&#xA;    if left(@x_patron,1)='0' Select  @x_andNeg       =''&#xA;    &#xA;    if @_xProduct = '1' &#xA;       select  @_xInProd= ' and driverDetalleValoresN.ProductHierarchy in ( SELECT ProductHierarchy FROM lkrdstr.dbo.direcProductHierarchyTmp ) '&#xA;    else&#xA;       Select @_xInProd= ''&#xA;    &#xA;        select  @sqlCommand =  ' insert into  [lkrdstr].[dbo].[driverTotalesN]  '+' &#xA;  &#x9;&#x9;SELECT driverDetalleValoresN.ano, driverDetalleValoresN.idVersion&#xA;  &#x9;&#x9;,'+''''+(@x_patron)+'''' +'&#xA;&#x9;    , '+Case @_xidNegoc when '1' then ' driverDetalleValoresN.idNegocio' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xSalesOr when '1' then ' driverDetalleValoresN.SalesOrganization' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xSalesOf when '1' then ' driverDetalleValoresN.SalesOffice' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xDistrib when '1' then ' driverDetalleValoresN.DistributionChannel' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xCustome when '1' then ' driverDetalleValoresN.CustomerGroup' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xAliado  when '1' then ' driverDetalleValoresN.Aliado' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xCategor when '1' then ' driverDetalleValoresN.Categoria' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xpagador when '1' then ' driverDetalleValoresN.pagador' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xMarca&#x9;when '1' then ' driverDetalleValoresN.Marca' else @x_space end +'&#xA;&#x9;&#x9;, '+Case @_xProduct&#x9;when '1' then ' driverDetalleValoresN.ProductHierarchy' else @x_space end +'&#xA;&#x9;&#x9;, driverDetalleValoresN.baseDriver&#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.ene) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.feb) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.mar) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.abr) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.may) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.jun) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.jul) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.ago) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.sep) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.oct) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.nov) &#xA;&#x9;&#x9;, Sum(driverDetalleValoresN.dic) &#xA;&#x9;&#x9;, driverDetalleValoresN.idDestino&#xA;&#x9;&#x9;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;&#x9;&#x9;where driverDetalleValoresN.ano =  '+@x_ano+' &#xA;&#x9;&#x9;'+@_xDestino+'&#xA;&#x9;&#x9;and driverDetalleValoresN.idDestino='+''''+(@x_patronDest)+'''' +'&#xA;                '+(@x_andNeg)+'&#xA;                '+(@_xInProd)+'&#xA;&#x9;&#x9;GROUP BY driverDetalleValoresN.ano , driverDetalleValoresN.idVersion&#xA;&#x9;&#x9; '+Case @_xidNegoc when '1' then ', driverDetalleValoresN.idNegocio' else '' end +'&#xA;&#x9;&#x9; '+Case @_xSalesOr when '1' then ', driverDetalleValoresN.SalesOrganization' else '' end +'&#xA;&#x9;&#x9; '+Case @_xSalesOf when '1' then ', driverDetalleValoresN.SalesOffice' else '' end +'&#xA;&#x9;&#x9; '+Case @_xDistrib when '1' then ', driverDetalleValoresN.DistributionChannel' else '' end +'&#xA;&#x9;&#x9; '+Case @_xCustome when '1' then ', driverDetalleValoresN.CustomerGroup' else '' end +'&#xA;&#x9;&#x9; '+Case @_xAliado  when '1' then ', driverDetalleValoresN.Aliado' else '' end +'&#xA;&#x9;&#x9; '+Case @_xCategor when '1' then ', driverDetalleValoresN.Categoria' else '' end +'&#xA;&#x9;&#x9; '+Case @_xpagador when '1' then ', driverDetalleValoresN.pagador' else '' end +'&#xA;&#x9;&#x9; '+Case @_xMarca   when '1' then ', driverDetalleValoresN.Marca' else '' end +'&#xA;&#x9;&#x9; '+Case @_xProduct when '1' then ', driverDetalleValoresN.ProductHierarchy' else '' end +'&#xA;&#x9;&#x9;, driverDetalleValoresN.baseDriver&#xA;&#x9;&#x9;, driverDetalleValoresN.idDestino&#xA;'&#xA;&#xA;&#x9;select  @sqlCommand2 = '&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;insert into lkrdstr.dbo.driverDetallePorcentajeN&#xA;&#x9;&#x9;SELECT&#x9;&#x9;&#xA;&#x9;&#x9;  driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverTotalesN.llaveDriver&#x9;&#x9;&#xA;&#x9;    , '+Case @_xidNegoc when '1' then ' driverDetalleValoresN.idNegocio' else @x_space end +'&#xA;&#x9;&#x9;, driverDetalleValoresN.SalesOrganization &#xA;&#x9;&#x9;, driverDetalleValoresN.SalesOffice &#xA;&#x9;&#x9;, driverDetalleValoresN.DistributionChannel&#xA;&#x9;&#x9;, driverDetalleValoresN.CustomerGroup&#xA;&#x9;&#x9;, driverDetalleValoresN.Aliado &#xA;&#x9;&#x9;, driverDetalleValoresN.Categoria &#xA;&#x9;&#x9;, driverDetalleValoresN.ProductHierarchy&#x9;&#x9;&#xA;&#x9;&#x9;, driverDetalleValoresN.pagador &#xA;&#x9;&#x9;, driverDetalleValoresN.Marca&#x9;&#x9;&#xA;&#x9;&#x9;, driverDetalleValoresN.baseDriver&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;, sum( case driverTotalesN.eneT when 0 then 0  else&#x9;driverDetalleValoresN.ene / driverTotalesN.eneT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.febT when 0 then 0  else&#x9;driverDetalleValoresN.feb / driverTotalesN.febT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.marT when 0 then 0  else&#x9;driverDetalleValoresN.mar / driverTotalesN.marT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.abrT when 0 then 0  else&#x9;driverDetalleValoresN.abr / driverTotalesN.abrT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.mayT when 0 then 0  else&#x9;driverDetalleValoresN.may / driverTotalesN.mayT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.junT when 0 then 0  else&#x9;driverDetalleValoresN.jun / driverTotalesN.junT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.julT when 0 then 0  else&#x9;driverDetalleValoresN.jul / driverTotalesN.julT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.agoT when 0 then 0  else&#x9;driverDetalleValoresN.ago / driverTotalesN.agoT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.sepT when 0 then 0  else&#x9;driverDetalleValoresN.sep / driverTotalesN.sepT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.octT when 0 then 0  else&#x9;driverDetalleValoresN.oct / driverTotalesN.octT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.novT when 0 then 0  else&#x9;driverDetalleValoresN.nov / driverTotalesN.novT end )&#xA;&#x9;&#x9;, sum( case driverTotalesN.dicT when 0 then 0  else&#x9;driverDetalleValoresN.dic / driverTotalesN.dicT end )&#xA;&#x9;&#x9;, driverTotalesN.idDestino&#xA;&#x9;&#x9;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;&#x9;&#x9;   , lkrdstr.dbo.driverTotalesN driverTotalesN&#xA;&#x9;&#x9;WHERE driverTotalesN.ano = driverDetalleValoresN.ano &#xA;&#x9;&#x9;AND driverTotalesN.baseDriver = driverDetalleValoresN.baseDriver &#xA;&#x9;&#x9;AND driverTotalesN.idDestino = driverDetalleValoresN.idDestino &#xA;&#x9;&#x9;AND driverTotalesN.idVersion = driverDetalleValoresN.idVersion &#xA;&#x9;&#x9;'+@_xDestino+'&#x9;&#x9;&#xA;&#x9;&#x9;AND (driverDetalleValoresN.ano='+@x_ano+')&#xA;&#x9;&#x9;and driverTotalesN.llaveDriver='+''''+(@x_patron)+'''' +'&#xA;&#x9;&#x9; '+Case @_xidNegoc when '1' then 'AND driverTotalesN.idNegocio = driverDetalleValoresN.idNegocio' else '' end +'&#xA;&#x9;&#x9; '+Case @_xSalesOr when '1' then 'AND driverDetalleValoresN.SalesOrganization = driverTotalesN.SalesOrganization ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xSalesOf when '1' then 'AND driverTotalesN.SalesOffice = driverDetalleValoresN.SalesOffice ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xDistrib when '1' then 'AND driverTotalesN.DistributionChannel = driverDetalleValoresN.DistributionChannel ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xCustome when '1' then 'AND driverTotalesN.CustomerGroup = driverDetalleValoresN.CustomerGroup ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xAliado  when '1' then 'AND driverDetalleValoresN.Aliado = driverTotalesN.Aliado ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xCategor when '1' then 'AND driverTotalesN.Categoria = driverDetalleValoresN.Categoria ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xpagador when '1' then 'AND driverDetalleValoresN.pagador = driverTotalesN.pagador ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xMarca   when '1' then 'AND driverDetalleValoresN.Marca = driverTotalesN.Marca ' else '' end +'&#xA;&#x9;&#x9; '+Case @_xProduct when '1' then 'AND driverDetalleValoresN.ProductHierarchy = driverTotalesN.ProductHierarchy ' else '' end +'&#xA;&#x9;&#x9;and driverDetalleValoresN.idDestino='+''''+(@x_patronDest)+'''' +'&#xA;                '+(@x_andNeg)+'&#xA;                &#xA;        group by&#xA;&#x9;&#x9;  driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverTotalesN.llaveDriver&#x9;&#x9;&#xA;&#x9;      '+Case @_xidNegoc when '1' then ', driverDetalleValoresN.idNegocio' else '' end +'&#xA;&#x9;&#x9;, driverDetalleValoresN.SalesOrganization &#xA;&#x9;&#x9;, driverDetalleValoresN.SalesOffice &#xA;&#x9;&#x9;, driverDetalleValoresN.DistributionChannel&#xA;&#x9;&#x9;, driverDetalleValoresN.CustomerGroup&#xA;&#x9;&#x9;, driverDetalleValoresN.Aliado &#xA;&#x9;&#x9;, driverDetalleValoresN.Categoria &#xA;&#x9;&#x9;, driverDetalleValoresN.ProductHierarchy&#x9;&#x9;&#xA;&#x9;&#x9;, driverDetalleValoresN.pagador &#xA;&#x9;&#x9;, driverDetalleValoresN.Marca&#x9;&#x9;&#xA;&#x9;&#x9;, driverDetalleValoresN.baseDriver&#xA;&#x9;    , driverTotalesN.idDestino&#xA;'&#x9;&#xA;    Exec (@sqlCommand)&#xA;    Exec (@sqlCommand2)&#xA;   &#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @x_patron,@x_patronNeg,@x_patronDest&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\base drv valVenta saliV - REAL"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{000FB87F-D8BC-4F35-A8A4-19E5ECBCC993}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="base drv valVenta saliV - REAL"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol &#xA;WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;truncate table [lkrdstr].[dbo].[tmpDriverDetalleValoresN]&#xA;&#xA;&#xA;INSERT INTO [lkrdstr].[dbo].[tmpDriverDetalleValoresN]&#xA;           ([ano]&#xA;           ,[idVersion]&#xA;           ,[idNegocio]&#xA;           ,[SalesOrganization]&#xA;           ,[SalesOffice]&#xA;           ,[DistributionChannel]&#xA;           ,[CustomerGroup]&#xA;           ,[Aliado]&#xA;           ,[Categoria]&#xA;           ,[ProductHierarchy]&#xA;           ,[pagador]&#xA;           ,[Marca]&#xA;           ,[baseDriver]&#xA;           ,[ene]&#xA;           ,[feb]&#xA;           ,[mar]&#xA;           ,[abr]&#xA;           ,[may]&#xA;           ,[jun]&#xA;           ,[jul]&#xA;           ,[ago]&#xA;           ,[sep]&#xA;           ,[oct]&#xA;           ,[nov]&#xA;           ,[dic]&#xA;           )&#xA;SELECT &#xA;TrnScnd.Ano&#xA;, 'Real' &#xA;,'V.Comercial' AS 'idNegocio'&#xA;, TrnScnd.Cod_OrgVentas&#xA;, TrnScnd.Cod_Oficina&#xA;, Clientes.Cod_Canal&#xA;, Clientes.Cod_GCliente&#xA;, Productos.Aliado&#xA;, Productos.Categoria&#xA;, Productos.JerarquiaProducto&#xA;, case TrnScnd.Cod_Canal &#xA;     when '16' then Clientes.Cod_Pagador&#xA;&#x9; when '14' then Clientes.Cod_Pagador&#xA;&#x9; when '18' then Clientes.Cod_Pagador &#xA;&#x9; when '26' then Clientes.Cod_Pagador&#xA;&#x9; when '28' then Clientes.Cod_Pagador &#xA;&#x9;else case TrnScnd.Cod_Oficina when '02' then right(Clientes.Cod_Zona_Ventas,5) else '' end&#xA;  End as 'pagador'&#xA; &#xA;, Productos.Marca&#xA;, 'SalidAlmV'&#xA;, sum(isnull(&quot;eneKv&quot;,0))&#xA;, sum(isnull(&quot;febKv&quot;,0))&#xA;, sum(isnull(&quot;marKv&quot;,0))&#xA;, sum(isnull(&quot;abrKv&quot;,0))&#xA;, sum(isnull(&quot;mayKv&quot;,0))&#xA;, sum(isnull(&quot;junKv&quot;,0))&#xA;, sum(isnull(&quot;julKv&quot;,0))&#xA;, sum(isnull(&quot;agoKv&quot;,0))&#xA;, sum(isnull(&quot;sepKv&quot;,0))&#xA;, sum(isnull(&quot;octKv&quot;,0))&#xA;, sum(isnull(&quot;novKv&quot;,0))&#xA;, sum(isnull(&quot;dicKv&quot;,0))&#xA;FROM lukerVen.SD.Clientes Clientes, lukerVen.SD.Productos Productos, HBAVENNAL.STGN.TrnScnd TrnScnd&#xA;WHERE Productos.Cod_SKU = TrnScnd.Cod_SKU AND Clientes.Cod_Cliente = TrnScnd.Cod_Cliente &#xA;AND ((TrnScnd.Cod_OrgVentas='1010'))&#xA;group by&#xA;TrnScnd.Ano&#xA;&#xA;, TrnScnd.Cod_OrgVentas&#xA;, TrnScnd.Cod_Oficina&#xA;, Clientes.Cod_Canal&#xA;, Clientes.Cod_GCliente&#xA;, Productos.Aliado&#xA;, Productos.Categoria&#xA;, Productos.JerarquiaProducto&#xA;, case TrnScnd.Cod_Canal &#xA;     when '16' then Clientes.Cod_Pagador&#xA;&#x9; when '14' then Clientes.Cod_Pagador&#xA;&#x9; when '18' then Clientes.Cod_Pagador &#xA;&#x9; when '26' then Clientes.Cod_Pagador&#xA;&#x9; when '28' then Clientes.Cod_Pagador &#xA;&#x9;else case TrnScnd.Cod_Oficina when '02' then right(Clientes.Cod_Zona_Ventas,5) else '' end&#xA;  End &#xA;, Productos.Marca&#xA;/**&#xA;INSERT INTO [lkrdstr].[dbo].[tmpDriverDetalleValoresN]&#xA;           ([ano]&#xA;           ,[idVersion]&#xA;           ,[idNegocio]&#xA;           ,[SalesOrganization]&#xA;           ,[SalesOffice]&#xA;           ,[DistributionChannel]&#xA;           ,[CustomerGroup]&#xA;           ,[Aliado]&#xA;           ,[Categoria]&#xA;           ,[ProductHierarchy]&#xA;           ,[pagador]&#xA;           ,[Marca]&#xA;           ,[baseDriver]&#xA;           ,[ene]&#xA;           ,[feb]&#xA;           ,[mar]&#xA;           ,[abr]&#xA;           ,[may]&#xA;           ,[jun]&#xA;           ,[jul]&#xA;           ,[ago]&#xA;           ,[sep]&#xA;           ,[oct]&#xA;           ,[nov]&#xA;           ,[dic]&#xA;           )&#xA;SELECT &#xA;TrnScnd.Ano&#xA;, 'Real' &#xA;,'V.Comercial' AS 'idNegocio'&#xA;, TrnScnd.Cod_OrgVentas&#xA;, TrnScnd.Cod_Oficina&#xA;, Clientes.Cod_Canal&#xA;, Clientes.Cod_GCliente&#xA;, Productos.Aliado&#xA;, Productos.Categoria&#xA;, Productos.JerarquiaProducto&#xA;, case TrnScnd.Cod_Canal &#xA;     when '16' then Clientes.Cod_Pagador&#xA;&#x9; when '14' then Clientes.Cod_Pagador&#xA;&#x9; when '18' then Clientes.Cod_Pagador &#xA;&#x9; when '26' then Clientes.Cod_Pagador&#xA;&#x9; when '28' then Clientes.Cod_Pagador &#xA;&#x9;else case TrnScnd.Cod_Oficina when '02' then right(Clientes.Cod_Zona_Ventas,5) else '' end&#xA;  End as 'pagador'&#xA; &#xA;, Productos.Marca&#xA;, 'SalidAlKG'&#xA;, isnull(&quot;eneKg&quot;,0)&#xA;, isnull(&quot;febKg&quot;,0)&#xA;, isnull(&quot;marKg&quot;,0)&#xA;, isnull(&quot;abrKg&quot;,0)&#xA;, isnull(&quot;mayKg&quot;,0)&#xA;, isnull(&quot;junKg&quot;,0)&#xA;, isnull(&quot;julKg&quot;,0)&#xA;, isnull(&quot;agoKg&quot;,0)&#xA;, isnull(&quot;sepKg&quot;,0)&#xA;, isnull(&quot;octKg&quot;,0)&#xA;, isnull(&quot;novKg&quot;,0)&#xA;, isnull(&quot;dicKg&quot;,0)&#xA;FROM lukerVen.SD.Clientes Clientes, lukerVen.SD.Productos Productos, HBAVENNAL.STGN.TrnScnd TrnScnd&#xA;WHERE Productos.Cod_SKU = TrnScnd.Cod_SKU AND Clientes.Cod_Cliente = TrnScnd.Cod_Cliente &#xA;AND ((TrnScnd.Cod_OrgVentas='1010'))&#xA;&#xA;&#xA;INSERT INTO [lkrdstr].[dbo].[tmpDriverDetalleValoresN]&#xA;           ([ano]&#xA;           ,[idVersion]&#xA;           ,[idNegocio]&#xA;           ,[SalesOrganization]&#xA;           ,[SalesOffice]&#xA;           ,[DistributionChannel]&#xA;           ,[CustomerGroup]&#xA;           ,[Aliado]&#xA;           ,[Categoria]&#xA;           ,[ProductHierarchy]&#xA;           ,[pagador]&#xA;           ,[Marca]&#xA;           ,[baseDriver]&#xA;           ,[ene]&#xA;           ,[feb]&#xA;           ,[mar]&#xA;           ,[abr]&#xA;           ,[may]&#xA;           ,[jun]&#xA;           ,[jul]&#xA;           ,[ago]&#xA;           ,[sep]&#xA;           ,[oct]&#xA;           ,[nov]&#xA;           ,[dic]&#xA;           )&#xA;SELECT &#xA;TrnScnd.Ano&#xA;, 'Real' &#xA;,'V.Comercial' AS 'idNegocio'&#xA;, TrnScnd.Cod_OrgVentas&#xA;, TrnScnd.Cod_Oficina&#xA;, Clientes.Cod_Canal&#xA;, Clientes.Cod_GCliente&#xA;, Productos.Aliado&#xA;, Productos.Categoria&#xA;, Productos.JerarquiaProducto&#xA;, case TrnScnd.Cod_Canal &#xA;     when '16' then Clientes.Cod_Pagador&#xA;&#x9; when '14' then Clientes.Cod_Pagador&#xA;&#x9; when '18' then Clientes.Cod_Pagador &#xA;&#x9; when '26' then Clientes.Cod_Pagador&#xA;&#x9; when '28' then Clientes.Cod_Pagador &#xA;&#x9;else case TrnScnd.Cod_Oficina when '02' then right(Clientes.Cod_Zona_Ventas,5) else '' end&#xA;  End as 'pagador'&#xA; &#xA;, Productos.Marca&#xA;, 'SalidAlCop'&#xA;, isnull(&quot;eneCop&quot;,0)&#xA;, isnull(&quot;febCop&quot;,0)&#xA;, isnull(&quot;marCop&quot;,0)&#xA;, isnull(&quot;abrCop&quot;,0)&#xA;, isnull(&quot;mayCop&quot;,0)&#xA;, isnull(&quot;junCop&quot;,0)&#xA;, isnull(&quot;julCop&quot;,0)&#xA;, isnull(&quot;agoCop&quot;,0)&#xA;, isnull(&quot;sepCop&quot;,0)&#xA;, isnull(&quot;octCop&quot;,0)&#xA;, isnull(&quot;novCop&quot;,0)&#xA;, isnull(&quot;dicCop&quot;,0)&#xA;FROM lukerVen.SD.Clientes Clientes, lukerVen.SD.Productos Productos, HBAVENNAL.STGN.TrnScnd TrnScnd&#xA;WHERE Productos.Cod_SKU = TrnScnd.Cod_SKU AND Clientes.Cod_Cliente = TrnScnd.Cod_Cliente &#xA;AND ((TrnScnd.Cod_OrgVentas='1010'))&#xA;**/&#xA;&#xA;INSERT INTO [lkrdstr].[dbo].[tmpDriverDetalleValoresN]&#xA;           ([ano]&#xA;           ,[idVersion]&#xA;           ,[idNegocio]&#xA;           ,[SalesOrganization]&#xA;           ,[SalesOffice]&#xA;           ,[DistributionChannel]&#xA;           ,[CustomerGroup]&#xA;           ,[Aliado]&#xA;           ,[Categoria]&#xA;           ,[ProductHierarchy]&#xA;           ,[pagador]&#xA;           ,[Marca]&#xA;           ,[baseDriver]&#xA;           ,[ene]&#xA;           ,[feb]&#xA;           ,[mar]&#xA;           ,[abr]&#xA;           ,[may]&#xA;           ,[jun]&#xA;           ,[jul]&#xA;           ,[ago]&#xA;           ,[sep]&#xA;           ,[oct]&#xA;           ,[nov]&#xA;           ,[dic]&#xA;           )&#xA;SELECT &#xA;year(Facturas.FechaFactura)&#xA;, 'Real'&#xA;, 'V.Comercial'&#xA;, Facturas.Cod_OrgVentas&#xA;, Facturas.SalesOffice&#xA;, Facturas.Cod_Canal&#xA;, Facturas.Cod_GCliente&#xA;, Productos.Aliado&#xA;, Productos.Categoria&#xA;, Productos.JerarquiaProducto&#xA;&#xA;, case Facturas.Cod_Canal &#xA;     when '16' then Facturas.PayerParty&#xA;&#x9; when '14' then Facturas.PayerParty&#xA;&#x9; when '18' then Facturas.PayerParty &#xA;&#x9; when '26' then Facturas.PayerParty&#xA;&#x9; when '28' then Facturas.PayerParty &#xA;&#x9;else case Facturas.SalesOffice when '02' then right(Clientes.Cod_Zona_Ventas,5) else '' end&#xA;  End as 'pagador'&#xA;, Productos.Marca&#xA;, 'Valventa'&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '01' then Facturas.ValorNeto else 0 end)&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '02' then Facturas.ValorNeto else 0 end)&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '03' then Facturas.ValorNeto else 0 end)&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '04' then Facturas.ValorNeto else 0 end)&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '05' then Facturas.ValorNeto else 0 end)&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '06' then Facturas.ValorNeto else 0 end)&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '07' then Facturas.ValorNeto else 0 end)&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '08' then Facturas.ValorNeto else 0 end)&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '09' then Facturas.ValorNeto else 0 end)&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '10' then Facturas.ValorNeto else 0 end)&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '11' then Facturas.ValorNeto else 0 end)&#xA;, sum(case right(left(Facturas.BillingDocumentDate,6),2) when '12' then Facturas.ValorNeto else 0 end)&#xA;&#xA;&#xA;FROM lukerVen.SD.Clientes Clientes, lukerVen.SD.Facturas Facturas, lukerVen.SD.Productos Productos&#xA;WHERE Clientes.Cod_Cliente = Facturas.Cod_Cliente AND Productos.Cod_SKU = Facturas.Cod_SKU &#xA;AND ((year(FechaFactura)=2019) AND (Facturas.Cod_OrgVentas='1010'))&#xA;group by&#xA;year(Facturas.FechaFactura)&#xA;, Facturas.Cod_OrgVentas&#xA;, Facturas.SalesOffice&#xA;, Facturas.Cod_Canal&#xA;, Facturas.Cod_GCliente&#xA;, Productos.Aliado&#xA;, Productos.Categoria&#xA;, Productos.JerarquiaProducto&#xA;, case Facturas.Cod_Canal &#xA;     when '16' then Facturas.PayerParty&#xA;&#x9; when '14' then Facturas.PayerParty&#xA;&#x9; when '18' then Facturas.PayerParty &#xA;&#x9; when '26' then Facturas.PayerParty&#xA;&#x9; when '28' then Facturas.PayerParty &#xA;&#x9;else case Facturas.SalesOffice when '02' then right(Clientes.Cod_Zona_Ventas,5) else '' end&#xA;  End  &#xA;, Productos.Marca&#xA;&#xA;&#xA;delete from lkrdstr.dbo.driverDetalleValoresN&#xA;&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT tmpDriverDetalleValoresN.ano, tmpDriverDetalleValoresN.idVersion, tmpDriverDetalleValoresN.idNegocio, tmpDriverDetalleValoresN.SalesOrganization, tmpDriverDetalleValoresN.SalesOffice, tmpDriverDetalleValoresN.DistributionChannel, tmpDriverDetalleValoresN.CustomerGroup, tmpDriverDetalleValoresN.Aliado, tmpDriverDetalleValoresN.Categoria, tmpDriverDetalleValoresN.ProductHierarchy, tmpDriverDetalleValoresN.pagador&#xA;,tmpDriverDetalleValoresN.Marca&#xA;, tmpDriverDetalleValoresN.baseDriver, Sum(tmpDriverDetalleValoresN.ene) AS 'Suma de ene', Sum(tmpDriverDetalleValoresN.feb) AS 'Suma de feb', Sum(tmpDriverDetalleValoresN.mar) AS 'Suma de mar', Sum(tmpDriverDetalleValoresN.abr) AS 'Suma de abr', Sum(tmpDriverDetalleValoresN.may) AS 'Suma de may', Sum(tmpDriverDetalleValoresN.jun) AS 'Suma de jun', Sum(tmpDriverDetalleValoresN.jul) AS 'Suma de jul', Sum(tmpDriverDetalleValoresN.ago) AS 'Suma de ago', Sum(tmpDriverDetalleValoresN.sep) AS 'Suma de sep', Sum(tmpDriverDetalleValoresN.oct) AS 'Suma de oct', Sum(tmpDriverDetalleValoresN.nov) AS 'Suma de nov', Sum(tmpDriverDetalleValoresN.dic) AS 'Suma de dic'&#xA;,''&#xA;FROM lkrdstr.dbo.tmpDriverDetalleValoresN tmpDriverDetalleValoresN&#xA;GROUP BY tmpDriverDetalleValoresN.ano, tmpDriverDetalleValoresN.idVersion, tmpDriverDetalleValoresN.idNegocio&#xA;, tmpDriverDetalleValoresN.SalesOrganization, tmpDriverDetalleValoresN.SalesOffice, tmpDriverDetalleValoresN.DistributionChannel&#xA;, tmpDriverDetalleValoresN.CustomerGroup, tmpDriverDetalleValoresN.Aliado, tmpDriverDetalleValoresN.Categoria&#xA;, tmpDriverDetalleValoresN.ProductHierarchy, tmpDriverDetalleValoresN.pagador, tmpDriverDetalleValoresN.baseDriver&#xA;,tmpDriverDetalleValoresN.Marca&#xA;&#xA;&#xA;&#xA;&#xA;update  driverDetalleValoresN set&#xA;  driverDetalleValoresN.baseDriver='maquilas'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE (driverDetalleValoresN.idVersion='real') &#xA;AND (driverDetalleValoresN.baseDriver='valventa') &#xA;AND (driverDetalleValoresN.Categoria='maquilas') &#xA;AND (driverDetalleValoresN.ano=2019 )&#xA;&#xA;/**&#xA;update tmpDriverDetalleValoresN set&#xA;  tmpDriverDetalleValoresN.idNegocio='V.Comercial'&#xA;, tmpDriverDetalleValoresN.SalesOrganization='1010'&#xA;, tmpDriverDetalleValoresN.SalesOffice='02'&#xA;, tmpDriverDetalleValoresN.DistributionChannel='14'&#xA;, tmpDriverDetalleValoresN.CustomerGroup='31'&#xA;, tmpDriverDetalleValoresN.pagador='0052995844'&#xA;FROM lkrdstr.dbo.tmpDriverDetalleValoresN tmpDriverDetalleValoresN&#xA;WHERE (tmpDriverDetalleValoresN.SalesOrganization='2010') &#xA;**/" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\canalv a customerg"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B2026F4B-7678-43C5-B453-E2AEF15D9824}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="canalv a customerg"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="update datosFiN set &#xA; datosFiN.pagador= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.pagador='n/a')&#xA;&#xA;update datosFiN set&#xA;datosFiN.pagador= zCustomerBasicDataCGPayToParty.PAGADOR&#xA;FROM lkrdstr.dbo.datosFiN datosFiN, HBAVENNAL.dbo.zCustomerBasicDataCGPayToParty zCustomerBasicDataCGPayToParty&#xA;WHERE datosFiN.pagador = zCustomerBasicDataCGPayToParty.nomCorto &#xA;AND datosFiN.pagador = zCustomerBasicDataCGPayToParty.CustomerGroup1Cadenas &#xA;AND ((datosFiN.pagador&lt;&gt;''))&#xA;&#xA;&#xA;update datosFiN set&#xA;   datosFiN.idCanal= canalesVenta.idDistributionChannel&#xA; , datosFiN.idCustomerGroup= canalesVenta.idGrupoCliente&#xA;FROM lukerFin.dbo.canalesVenta canalesVenta, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE canalesVenta.idCanal = datosFiN.idCanal &#xA;AND ((datosFiN.idDriver='tabCuCom  ')&#xA;AND (datosFiN.idCanal&lt;&gt;''))&#xA;&#xA;update datosFiN set&#xA; datosFiN.idCanal= zCustomerBasicDataCGPayToParty.DistributionChannel&#xA;FROM lkrdstr.dbo.datosFiN datosFiN, HBAVENNAL.dbo.zCustomerBasicDataCGPayToParty zCustomerBasicDataCGPayToParty&#xA;WHERE zCustomerBasicDataCGPayToParty.PAGADOR = datosFiN.pagador &#xA;AND ((datosFiN.idDriver='tabcucom') &#xA;AND (datosFiN.Categoria=''))&#xA;&#xA;&#xA;update datosFiN set&#xA;   datosFiN.idCanal= customerGroup.distriChannel&#xA; , datosFiN.idCustomerGroup= customerGroup.CustomerGroup&#xA;FROM lkrdstr.dbo.customerGroup customerGroup&#xA;   , lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE datosFiN.idCanal = customerGroup.idCanalViejo&#xA;AND (datosFiN.idCanal&lt;&gt;'') &#xA;AND (datosFiN.idDriver&lt;&gt;'tabCuCom  ')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set&#xA; datosFiN.idCanal= ''&#xA; FROM lkrdstr.dbo.datosFiN datosFiN&#xA;, lkrdstr.dbo.unificaDistribucionPorGrupoDeClientes unificaDistribucionPorGrupoDeClientes&#xA;WHERE datosFiN.idCustomerGroup = unificaDistribucionPorGrupoDeClientes.CustomerGroup&#xA;AND (datosFiN.idDriver&lt;&gt;'tabCuCom  ')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set&#xA; datosFiN.idDestino=''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idNegocio='V.GLOBAL            ')&#xA;and datosFiN.idDestino&lt;&gt;'cacao'&#xA;&#xA;update datosFiN set&#xA;  datosFiN.idDestino= ''&#xA;, datosFiN.Aliado= 'TEAM         '&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino like 'TEAM%')&#xA;&#xA;update datosFiN set&#xA;   datosFiN.idOrgVenta= '1010'&#xA;,  datosFiN.idDestino= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino in ('Marcas', 'Marcas&gt;','Marcas^','Marcas&lt;'))&#xA;&#xA;update datosFiN set &#xA;  datosFiN.Aliado= 'CASA LUKER'&#xA;, datosFiN.idDestino= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino in ('sinJgbniTeam', 'sinJgbniTeam&gt;','sinJgbniTeam^','sinJgbniTeam&lt;'))&#xA;&#xA;update datosFiN set &#xA;datosFiN.Aliado= centroPais.Aliado&#xA;FROM lukerFin.dbo.centroPais centroPais, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE centroPais.idCentro = datosFiN.idCentro AND centroPais.idPais = datosFiN.idPais AND ((centroPais.Aliado&lt;&gt;''))&#xA;&#xA;update datosFiN set &#xA; datosFiN.idDestino= ''&#xA;, datosFiN.idCanal= '11'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino in ('sn14MarDis', 'sn14MarDis&gt;','sn14MarDis^','sn14MarDis&lt;'))&#xA;&#xA;update datosFiN set &#xA;  datosFiN.idDestino= 'sinAseo'&#xA;, datosFiN.Aliado= 'CASA LUKER'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino='MarcasLKnoAse')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set &#xA;  datosFiN.idDestino= ''&#xA;, datosFiN.Aliado= 'CASA LUKER'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino like 'MarcasLK%')&#xA;&#xA;update datosFiN set &#xA; datosFiN.idDestino= ''&#xA;, datosFiN.idCanal= '14'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino like 'cadenas%')&#xA;&#xA;&#xA;update datosFiN set&#xA;  datosFiN.idCanal= centroPais.distriChannel&#xA;, datosFiN.idCustomerGroup= ''&#xA;FROM lukerFin.dbo.centroPais centroPais, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE centroPais.idCentro = datosFiN.idCentro &#xA;AND centroPais.idPais = datosFiN.idPais &#xA;AND (&#xA;  centroPais.distriChannel in (&#xA;&#x9;SELECT DISTINCT customerGroup.distriChannel&#xA;&#x9;FROM lkrdstr.dbo.customerGroup customerGroup&#xA;&#x9;WHERE (customerGroup.distriChannel Not In (' ','00','na'))&#xA;  &#xA;  )&#xA;) and left(idComponente,5) in ('Gasto','gxotr')&#xA;--AND (datosFiN.idDriver&lt;&gt;'tabCuCom  ')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;&#xA;update datosFiN set&#xA;  datosFiN.idCanal= SQLukerFinConfigOrdEstad.distriChannel&#xA;, datosFiN.idCustomerGroup= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN, lukerFin.dbo.SQLukerFinConfigOrdEstad SQLukerFinConfigOrdEstad&#xA;WHERE (datosFiN.idComponente Like 'gOE%') &#xA;AND (right(left(idComponente,14),10)=SQLukerFinConfigOrdEstad.idOrden) &#xA;AND (SQLukerFinConfigOrdEstad.distriChannel&lt;&gt;'')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;&#xA;update datosFiN set&#xA; datosFiN.idCanal= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE &#xA; (datosFiN.idCustomerGroup='71')&#xA;AND (datosFiN.idDriver&lt;&gt;'tabCuCom  ')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set&#xA; datosFiN.idCanal= centroPais.distriChannel&#xA;FROM lukerFin.dbo.centroPais centroPais, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE centroPais.idCentro = datosFiN.idCentro AND centroPais.idPais = datosFiN.idPais &#xA;AND (   &#xA;     --   (datosFiN.idVersion='real')  AND &#xA;         (datosFiN.idComponente Like 'gOE%') &#xA;AND (centroPais.distriChannel&lt;&gt;'') &#xA;AND (datosFiN.pagador='')&#xA;&#xA;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\crea daFin"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{9B2D2191-9295-40B7-95AC-DB2F4DE3E943}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="crea daFin"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="USE [lkrdstr]&#xA;GO&#xA;&#xA;truncate TABLE [dbo].[datosFiN]&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\datosFiN"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B7F0E1A9-B19B-4469-985B-A44D83163AE7}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="datosFiN"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol &#xA;WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;&#xA;delete [lukerFin].[dbo].[datosFi] where ano = @x_ano and (idContabilidad='MK+' or idContabilidad='MK-') &#xA;&#xA;USE [lkrdstr]&#xA;&#xA;insert into [dbo].[datosFiN]&#xA;&#xA;SELECT datosFi.ano, datosFi.idPais, datosFi.idVersion, datosFi.idComponente, '0' AS 'consDistri', 0 AS 'consecutivo'&#xA;, datosFi.idCentro, datosFi.idCuenta, datosFi.idAsignacionDirecta, datosFi.idDivision, datosFi.idNegocio, datosFi.idEFin&#xA;, datosFi.B_asico_D_uplicaanexo, datosFi.idRubro, datosFi.idDriver, datosFi.ene, datosFi.feb, datosFi.mar&#xA;, datosFi.abr, datosFi.may, datosFi.jun, datosFi.jul, datosFi.ago, datosFi.sep, datosFi.oct, datosFi.nov, datosFi.dic, '' AS 'idOrgVenta'&#xA;, case datosFi.idAgencia when '00' then '' else datosFi.idAgencia end as idAgencia&#xA;, case datosFi.idCanal when '00' then '' else datosFi.idCanal end as idCanal&#xA;, '' AS 'idCustomerGroup', '' AS 'Aliado', datosFi.idCategoria AS 'Categoria'&#xA;, case datosFi.idActividad when 'N/A' then '' else datosFi.idActividad end  as 'Marca'&#xA;, case datosFi.idLinea when 0 then '' else ltrim(rtrim('00'+cast(datosFi.idLinea as varchar(18)))) end AS 'ProductHierarchy'&#xA;, cast (left(ltrim(rtrim(idCadena)),10) as varchar(10)) AS 'pagador'&#xA;, datosFi.idReferencia, datosFi.idDestino, datosFi.idAsignacionDirecta&#xA;, datosFi.idFijoVariable AS 'fvd1', datosFi.fijoVariableDirecto2 AS 'fvd2'&#xA;, datosFi.fijoVariableDirecto3 AS 'fvd3', datosFi.fijoVariableDirecto4 AS 'fvd4'&#xA;, datosFi.fijoVariableDirecto5 AS 'fvd5'&#xA;, datosFi.idCanal&#xA;FROM lukerFin.dbo.datosFi datosFi&#xA;WHERE (datosFi.ano=@x_ano ) AND (datosFi.idVersion in ('Real','version1','version6','version7')) &#xA;AND (datosFi.idComponente Like 'g%') &#xA;AND (datosFi.idSociedad='0100') AND (datosFi.idEFin='nopat')&#xA;and  (datosFi.idDriver Not In ('N/A',''))&#xA;&#xA;&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverDetalleValoresN.idNegocio, driverDetalleValoresN.SalesOrganization, driverDetalleValoresN.SalesOffice, driverDetalleValoresN.DistributionChannel, driverDetalleValoresN.CustomerGroup, driverDetalleValoresN.Aliado, driverDetalleValoresN.Categoria, driverDetalleValoresN.ProductHierarchy, driverDetalleValoresN.pagador, driverDetalleValoresN.Marca, driverDetalleValoresN.baseDriver, driverDetalleValoresN.ene, driverDetalleValoresN.feb, driverDetalleValoresN.mar, driverDetalleValoresN.abr, driverDetalleValoresN.may, driverDetalleValoresN.jun, driverDetalleValoresN.jul, driverDetalleValoresN.ago, driverDetalleValoresN.sep, driverDetalleValoresN.oct, driverDetalleValoresN.nov, driverDetalleValoresN.dic&#xA;, rtrim(left(driverDetalleValoresN.idDestino,12))+'^'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE  ((right(ltrim(driverDetalleValoresN.idDestino),1) Not In ('&lt;','^','&gt;')) &#xA;AND (driverDetalleValoresN.idNegocio='V.Comercial'))&#xA;AND (left(ltrim(driverDetalleValoresN.idDestino),12) In (&#xA;&#x9;SELECT  distinct left(datosFiN.idDestino,len(rtrim(datosFiN.idDestino))-1)+''&#xA;&#x9;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;&#x9;WHERE (right(rtrim(idDestino),1)='^')&#xA;)) and driverDetalleValoresN.CustomerGroup&lt;&gt;'81'&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverDetalleValoresN.idNegocio, driverDetalleValoresN.SalesOrganization, driverDetalleValoresN.SalesOffice, driverDetalleValoresN.DistributionChannel, driverDetalleValoresN.CustomerGroup, driverDetalleValoresN.Aliado, driverDetalleValoresN.Categoria, driverDetalleValoresN.ProductHierarchy, driverDetalleValoresN.pagador, driverDetalleValoresN.Marca, driverDetalleValoresN.baseDriver, driverDetalleValoresN.ene, driverDetalleValoresN.feb, driverDetalleValoresN.mar, driverDetalleValoresN.abr, driverDetalleValoresN.may, driverDetalleValoresN.jun, driverDetalleValoresN.jul, driverDetalleValoresN.ago, driverDetalleValoresN.sep, driverDetalleValoresN.oct, driverDetalleValoresN.nov, driverDetalleValoresN.dic&#xA;, rtrim(left(driverDetalleValoresN.idDestino,12))+'&lt;'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE  ((right(ltrim(driverDetalleValoresN.idDestino),1) Not In ('&lt;','^','&gt;')) &#xA;AND (driverDetalleValoresN.idNegocio='V.Comercial'))&#xA;AND (left(ltrim(driverDetalleValoresN.idDestino),12) In (&#xA;&#x9;SELECT  distinct left(datosFiN.idDestino,len(rtrim(datosFiN.idDestino))-1)+''&#xA;&#x9;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;&#x9;WHERE (right(rtrim(idDestino),1)='&lt;')&#xA;)) &#xA;and driverDetalleValoresN.CustomerGroup&lt;&gt;'81'&#xA;and driverDetalleValoresN.Categoria not in ('MAQUILAS','MP. CAFÉ')&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverDetalleValoresN.idNegocio, driverDetalleValoresN.SalesOrganization, driverDetalleValoresN.SalesOffice, driverDetalleValoresN.DistributionChannel, driverDetalleValoresN.CustomerGroup, driverDetalleValoresN.Aliado, driverDetalleValoresN.Categoria, driverDetalleValoresN.ProductHierarchy, driverDetalleValoresN.pagador, driverDetalleValoresN.Marca, driverDetalleValoresN.baseDriver, driverDetalleValoresN.ene, driverDetalleValoresN.feb, driverDetalleValoresN.mar, driverDetalleValoresN.abr, driverDetalleValoresN.may, driverDetalleValoresN.jun, driverDetalleValoresN.jul, driverDetalleValoresN.ago, driverDetalleValoresN.sep, driverDetalleValoresN.oct, driverDetalleValoresN.nov, driverDetalleValoresN.dic&#xA;, rtrim(left(driverDetalleValoresN.idDestino,12))+'&gt;'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE  ((right(ltrim(driverDetalleValoresN.idDestino),1) Not In ('&lt;','^','&gt;')) &#xA;AND (driverDetalleValoresN.idNegocio='V.Comercial'))&#xA;AND (left(ltrim(driverDetalleValoresN.idDestino),12) In (&#xA;&#x9;SELECT  distinct left(datosFiN.idDestino,len(rtrim(datosFiN.idDestino))-1)+''&#xA;&#x9;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;&#x9;WHERE (right(rtrim(idDestino),1)='&gt;')&#xA;)) &#xA;and driverDetalleValoresN.Categoria not in ('MAQUILAS','MP. CAFÉ')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\datosFiN 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{63B0F0AC-5860-4891-8CF1-56AA345263EE}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="datosFiN 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="USE [lkrdstr]&#xA;GO&#xA;&#xA;&#xA;truncate TABLE [dbo].[datosFiN]&#xA;&#xA;&#xA;DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol &#xA;WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;USE [lkrdstr]&#xA;&#xA;insert into [dbo].[datosFiN]&#xA;&#xA;SELECT datosFi.ano, datosFi.idPais, datosFi.idVersion&#xA;, case idDriver when 'tabTieMerc' then left(datosFi.idComponente,8) else datosFi.idComponente end&#xA;, '0' AS 'consDistri', 0 AS 'consecutivo'&#xA;, datosFi.idCentro, datosFi.idCuenta, datosFi.idAsignacionDirecta, datosFi.idDivision, datosFi.idNegocio, datosFi.idEFin&#xA;, datosFi.B_asico_D_uplicaanexo, datosFi.idRubro, datosFi.idDriver&#xA;, sum(datosFi.ene)&#xA;, sum(datosFi.feb)&#xA;, sum(datosFi.mar)&#xA;, sum(datosFi.abr)&#xA;, sum(datosFi.may)&#xA;, sum(datosFi.jun)&#xA;, sum(datosFi.jul)&#xA;, sum(datosFi.ago)&#xA;, sum(datosFi.sep)&#xA;, sum(datosFi.oct)&#xA;, sum(datosFi.nov)&#xA;, sum(datosFi.dic)&#xA;, '' AS 'idOrgVenta'&#xA;, case datosFi.idAgencia when '00' then '' else datosFi.idAgencia end as idAgencia&#xA;, case datosFi.idCanal when '00' then '' else datosFi.idCanal end as idCanal&#xA;, '' AS 'idCustomerGroup'&#xA;, case left(idContabilidad,2) when 'MK' then case datosFi.idActividad when 'N/A' then '' else datosFi.idActividad end  else '' end  AS 'Aliado'&#xA;&#xA;&#xA;, datosFi.idCategoria AS 'Categoria'&#xA;&#xA;, case datosFi.idActividad when 'N/A' then '' else case idDriver when 'tabTieMerc' then '' else datosFi.idActividad end end  as 'Marca'&#xA;&#xA;, case datosFi.idLinea when 0 then '' else ltrim(rtrim('00'+cast(datosFi.idLinea as varchar(18)))) end AS 'ProductHierarchy'&#xA;, cast (left(ltrim(rtrim(idCadena)),10) as varchar(10)) AS 'pagador'&#xA;, datosFi.idReferencia, datosFi.idDestino, datosFi.idAsignacionDirecta&#xA;, datosFi.idFijoVariable AS 'fvd1', datosFi.fijoVariableDirecto2 AS 'fvd2'&#xA;, datosFi.fijoVariableDirecto3 AS 'fvd3', datosFi.fijoVariableDirecto4 AS 'fvd4'&#xA;, datosFi.fijoVariableDirecto5 AS 'fvd5'&#xA;, datosFi.idCanal&#xA;FROM lukerFin.dbo.datosFi datosFi&#xA;WHERE (datosFi.ano=@x_ano ) AND (datosFi.idVersion in ('Real','version1','version6','version7')) &#xA;AND (datosFi.idComponente Like 'g%') &#xA;AND (datosFi.idSociedad='0100') AND (datosFi.idEFin='nopat')&#xA;and  (datosFi.idDriver Not In ('N/A',''))&#xA;group by&#xA; datosFi.ano, datosFi.idPais, datosFi.idVersion&#xA;, case idDriver when 'tabTieMerc' then left(datosFi.idComponente,8) else datosFi.idComponente end&#xA;, datosFi.idCentro, datosFi.idCuenta, datosFi.idSociedad, datosFi.idDivision, datosFi.idNegocio, datosFi.idEFin&#xA;, datosFi.B_asico_D_uplicaanexo, datosFi.idRubro, datosFi.idDriver&#xA;, case datosFi.idAgencia when '00' then '' else datosFi.idAgencia end&#xA;, case datosFi.idCanal when '00' then '' else datosFi.idCanal end&#xA;, case left(idContabilidad,2) when 'MK' then case datosFi.idActividad when 'N/A' then '' else datosFi.idActividad end  else '' end&#xA;, datosFi.idCategoria&#xA;, case datosFi.idActividad when 'N/A' then '' else case idDriver when 'tabTieMerc' then '' else datosFi.idActividad end end&#xA;, case datosFi.idLinea when 0 then '' else ltrim(rtrim('00'+cast(datosFi.idLinea as varchar(18)))) end&#xA;, cast (left(ltrim(rtrim(idCadena)),10) as varchar(10))&#xA;, datosFi.idReferencia, datosFi.idDestino, datosFi.idAsignacionDirecta&#xA;, datosFi.idFijoVariable &#xA;, datosFi.fijoVariableDirecto2&#xA;, datosFi.fijoVariableDirecto3&#xA;, datosFi.fijoVariableDirecto4&#xA;, datosFi.fijoVariableDirecto5&#xA;, datosFi.idCanal&#xA;having&#xA;   abs(sum(datosFi.ene)) &gt; 0.001&#xA;or abs(sum(datosFi.feb)) &gt; 0.001&#xA;or abs(sum(datosFi.mar)) &gt; 0.001&#xA;or abs(sum(datosFi.abr)) &gt; 0.001&#xA;or abs(sum(datosFi.may)) &gt; 0.001&#xA;or abs(sum(datosFi.jun)) &gt; 0.001&#xA;or abs(sum(datosFi.jul)) &gt; 0.001&#xA;or abs(sum(datosFi.ago)) &gt; 0.001&#xA;or abs(sum(datosFi.sep)) &gt; 0.001&#xA;or abs(sum(datosFi.oct)) &gt; 0.001&#xA;or abs(sum(datosFi.nov)) &gt; 0.001&#xA;or abs(sum(datosFi.dic)) &gt; 0.001" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Delta tabcucom"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8C4D161C-FA98-43C3-83E9-D50ED6827022}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delta tabcucom"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="delete dbo.datosFiN_EXPLtabcucom&#xA;&#xA;insert into dbo.datosFiN_EXPLtabcucom&#xA;SELECT datosFiN.ano, datosFiN.idPais, datosFiN.idVersion, datosFiN.idComponente, datosFiN.consDistri, datosFiN.consecutivo, datosFiN.idCentro, datosFiN.idCuenta, datosFiN.idSociedad, datosFiN.idDivision, datosFiN.idNegocio, datosFiN.idEFin, datosFiN.B_asico_D_uplicaanexo, datosFiN.idRubro, datosFiN.idDriver, datosFiN.ene, datosFiN.feb, datosFiN.mar, datosFiN.abr, datosFiN.may, datosFiN.jun, datosFiN.jul, datosFiN.ago, datosFiN.sep, datosFiN.oct, datosFiN.nov, datosFiN.dic, datosFiN.idOrgVenta, datosFiN.idAgencia, datosFiN.idCanal, datosFiN.idCustomerGroup, datosFiN.Aliado, datosFiN.Categoria, datosFiN.Marca, datosFiN.ProductHierarchy, datosFiN.pagador, datosFiN.idReferencia, datosFiN.idDestino, datosFiN.idAsignacionDirecta, datosFiN.fvd1, datosFiN.fvd2, datosFiN.fvd3, datosFiN.fvd4, datosFiN.fvd5&#xA;, idCanalViejo&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.consDistri='1')&#xA;&#xA;insert into dbo.datosFiN_EXPLtabcucom&#xA;&#xA;SELECT DatosFiTmpN.ano, DatosFiTmpN.idPais, DatosFiTmpN.idVersion, DatosFiTmpN.idComponente&#xA;, DatosFiTmpN.consDistri, DatosFiTmpN.consecutivo, DatosFiTmpN.idCentro&#xA;, DatosFiTmpN.idCuenta, DatosFiTmpN.idSociedad, DatosFiTmpN.idDivision&#xA;, DatosFiTmpN.idNegocio, DatosFiTmpN.idEFin, DatosFiTmpN.B_asico_D_uplicaanexo, DatosFiTmpN.idRubro&#xA;&#xA;, DatosFiTmpN.idDriver&#xA;&#xA;, -sum(DatosFiTmpN.ene)&#xA;, -sum(DatosFiTmpN.feb)&#xA;, -sum(DatosFiTmpN.mar)&#xA;, -sum(DatosFiTmpN.abr)&#xA;, -sum(DatosFiTmpN.may)&#xA;, -sum(DatosFiTmpN.jun)&#xA;, -sum(DatosFiTmpN.jul)&#xA;, -sum(DatosFiTmpN.ago)&#xA;, -sum(DatosFiTmpN.sep)&#xA;, -sum(DatosFiTmpN.oct)&#xA;, -sum(DatosFiTmpN.nov)&#xA;, -sum(DatosFiTmpN.dic)&#xA;, '' as 'SalesOrganization'&#xA;&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,3,1) when '1' then  DatosFiTmpN.SalesOffice     else '' end&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,4,1) when '1' then  DatosFiTmpN.DistributionChannel     else '' end&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,5,1) when '1' then  DatosFiTmpN.CustomerGroup     else '' end&#xA;&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,6,1) when '1' then  DatosFiTmpN.Aliado     else '' end&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,7,1) when '1' then  DatosFiTmpN.Categoria     else '' end&#xA; &#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,11,1) when '1' then  DatosFiTmpN.Marca     else '' end&#xA;, '' as 'ProductHierarchy'&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,9,1) when '1' then  DatosFiTmpN.pagador     else '' end&#xA;, DatosFiTmpN.idReferencia&#xA;, DatosFiTmpN.idDestino&#xA;, DatosFiTmpN.idAsignacionDirecta&#xA;, DatosFiTmpN.fvd1, DatosFiTmpN.fvd2&#xA;, DatosFiTmpN.fvd3, DatosFiTmpN.fvd4&#xA;, DatosFiTmpN.fvd5&#xA;, idCanalViejo&#xA;FROM lkrdstr.dbo.DatosFiTmpN DatosFiTmpN&#xA;WHERE (DatosFiTmpN.consDistri='1')&#xA;group by&#xA;DatosFiTmpN.ano, DatosFiTmpN.idPais, DatosFiTmpN.idVersion, DatosFiTmpN.idComponente&#xA;, DatosFiTmpN.consDistri, DatosFiTmpN.consecutivo, DatosFiTmpN.idCentro&#xA;, DatosFiTmpN.idCuenta, DatosFiTmpN.idSociedad, DatosFiTmpN.idDivision&#xA;, DatosFiTmpN.idNegocio, DatosFiTmpN.idEFin, DatosFiTmpN.B_asico_D_uplicaanexo, DatosFiTmpN.idRubro&#xA;&#xA;, DatosFiTmpN.idDriver&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,3,1) when '1' then  DatosFiTmpN.SalesOffice     else '' end&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,4,1) when '1' then  DatosFiTmpN.DistributionChannel     else '' end&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,5,1) when '1' then  DatosFiTmpN.CustomerGroup     else '' end&#xA;&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,6,1) when '1' then  DatosFiTmpN.Aliado     else '' end&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,7,1) when '1' then  DatosFiTmpN.Categoria     else '' end&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,11,1) when '1' then  DatosFiTmpN.Marca     else '' end&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,9,1) when '1' then  DatosFiTmpN.pagador     else '' end&#xA;, DatosFiTmpN.idReferencia&#xA;, DatosFiTmpN.idDestino&#xA;, DatosFiTmpN.idAsignacionDirecta&#xA;, DatosFiTmpN.fvd1, DatosFiTmpN.fvd2&#xA;, DatosFiTmpN.fvd3, DatosFiTmpN.fvd4&#xA;, DatosFiTmpN.fvd5&#xA;&#xA;, idCanalViejo&#xA;insert into lkrdstr.dbo.DatosFiTmpN&#xA;SELECT datosFiN_EXPLtabcucom.ano, datosFiN_EXPLtabcucom.idPais, datosFiN_EXPLtabcucom.idVersion, datosFiN_EXPLtabcucom.idComponente, datosFiN_EXPLtabcucom.consDistri&#xA;, 1&#xA;, datosFiN_EXPLtabcucom.idCentro, datosFiN_EXPLtabcucom.idCuenta, datosFiN_EXPLtabcucom.idSociedad, datosFiN_EXPLtabcucom.idDivision, datosFiN_EXPLtabcucom.idNegocio, datosFiN_EXPLtabcucom.idEFin, datosFiN_EXPLtabcucom.B_asico_D_uplicaanexo, datosFiN_EXPLtabcucom.idRubro, datosFiN_EXPLtabcucom.idDriver&#xA;, Sum(datosFiN_EXPLtabcucom.ene) AS 'ene'&#xA;, Sum(datosFiN_EXPLtabcucom.feb) AS 'feb'&#xA;, Sum(datosFiN_EXPLtabcucom.mar) AS 'mar'&#xA;, Sum(datosFiN_EXPLtabcucom.abr) AS 'abr'&#xA;, Sum(datosFiN_EXPLtabcucom.may) AS 'may'&#xA;, Sum(datosFiN_EXPLtabcucom.jun) AS 'jun'&#xA;, Sum(datosFiN_EXPLtabcucom.jul) AS 'jul'&#xA;, Sum(datosFiN_EXPLtabcucom.ago) AS 'ago'&#xA;, Sum(datosFiN_EXPLtabcucom.sep) AS 'sep'&#xA;, Sum(datosFiN_EXPLtabcucom.oct) AS 'oct'&#xA;, Sum(datosFiN_EXPLtabcucom.nov) AS 'nov'&#xA;, Sum(datosFiN_EXPLtabcucom.dic) AS 'dic'&#xA;, datosFiN_EXPLtabcucom.idOrgVenta, datosFiN_EXPLtabcucom.idAgencia, datosFiN_EXPLtabcucom.idCanal, datosFiN_EXPLtabcucom.idCustomerGroup, datosFiN_EXPLtabcucom.Aliado, datosFiN_EXPLtabcucom.Categoria, datosFiN_EXPLtabcucom.Marca, datosFiN_EXPLtabcucom.ProductHierarchy, datosFiN_EXPLtabcucom.pagador, datosFiN_EXPLtabcucom.idReferencia, datosFiN_EXPLtabcucom.idDestino, datosFiN_EXPLtabcucom.idAsignacionDirecta, datosFiN_EXPLtabcucom.fvd1, datosFiN_EXPLtabcucom.fvd2, datosFiN_EXPLtabcucom.fvd3, datosFiN_EXPLtabcucom.fvd4, datosFiN_EXPLtabcucom.fvd5&#xA;, idCanalViejo&#xA;FROM lkrdstr.dbo.datosFiN_EXPLtabcucom datosFiN_EXPLtabcucom&#xA;GROUP BY datosFiN_EXPLtabcucom.ano, datosFiN_EXPLtabcucom.idPais, datosFiN_EXPLtabcucom.idVersion, datosFiN_EXPLtabcucom.idComponente, datosFiN_EXPLtabcucom.consDistri&#xA;--, datosFiN_EXPLtabcucom.consecutivo&#xA;, datosFiN_EXPLtabcucom.idCentro, datosFiN_EXPLtabcucom.idCuenta, datosFiN_EXPLtabcucom.idSociedad, datosFiN_EXPLtabcucom.idDivision, datosFiN_EXPLtabcucom.idNegocio, datosFiN_EXPLtabcucom.idEFin, datosFiN_EXPLtabcucom.B_asico_D_uplicaanexo, datosFiN_EXPLtabcucom.idRubro, datosFiN_EXPLtabcucom.idDriver, datosFiN_EXPLtabcucom.idOrgVenta, datosFiN_EXPLtabcucom.idAgencia, datosFiN_EXPLtabcucom.idCanal, datosFiN_EXPLtabcucom.idCustomerGroup, datosFiN_EXPLtabcucom.Aliado, datosFiN_EXPLtabcucom.Categoria, datosFiN_EXPLtabcucom.Marca, datosFiN_EXPLtabcucom.ProductHierarchy, datosFiN_EXPLtabcucom.pagador, datosFiN_EXPLtabcucom.idReferencia, datosFiN_EXPLtabcucom.idDestino, datosFiN_EXPLtabcucom.idAsignacionDirecta, datosFiN_EXPLtabcucom.fvd1, datosFiN_EXPLtabcucom.fvd2, datosFiN_EXPLtabcucom.fvd3, datosFiN_EXPLtabcucom.fvd4, datosFiN_EXPLtabcucom.fvd5&#xA;, idCanalViejo&#xA;having &#xA;   ABS(Sum(datosFiN_EXPLtabcucom.ene)  )&gt;00001&#xA;or ABS(Sum(datosFiN_EXPLtabcucom.feb)  )&gt;00001&#xA;or ABS(Sum(datosFiN_EXPLtabcucom.mar)  )&gt;00001&#xA;or ABS(Sum(datosFiN_EXPLtabcucom.abr)  )&gt;00001&#xA;or ABS(Sum(datosFiN_EXPLtabcucom.may)  )&gt;00001&#xA;or ABS(Sum(datosFiN_EXPLtabcucom.jun)  )&gt;00001&#xA;or ABS(Sum(datosFiN_EXPLtabcucom.jul)  )&gt;00001&#xA;or ABS(Sum(datosFiN_EXPLtabcucom.ago)  )&gt;00001&#xA;or ABS(Sum(datosFiN_EXPLtabcucom.sep)  )&gt;00001&#xA;or ABS(Sum(datosFiN_EXPLtabcucom.oct)  )&gt;00001&#xA;or ABS(Sum(datosFiN_EXPLtabcucom.nov)  )&gt;00001&#xA;or ABS(Sum(datosFiN_EXPLtabcucom.dic)  )&gt;00001&#xA;&#xA;USE [lkrdstr]&#xA;GO&#xA;DBCC SHRINKFILE (N'lkrdstr_log' , 0, TRUNCATEONLY)&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Destino invemerk"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{258B1042-B0AC-4EF4-A452-0541BC07C9DF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Destino invemerk"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;DELETE FROM [lkrdstr].[dbo].[baseDestinoGastoMercTBL]&#xA;insert into [lkrdstr].[dbo].[baseDestinoGastoMercTBL]&#xA;select *  FROM [lkrdstr].[dbo].[baseDestinoGastoMerc]&#xA;&#xA;-- Invemerk&#xA;--Invetrade&#xA;&#xA;insert into [lkrdstr].[dbo].[baseDestinoGastoMercTBL]&#xA;SELECT DISTINCT baseDestinoGastoMercTBL.ano&#xA;, baseDestinoGastoMercTBL.idVersion&#xA;, baseDestinoGastoMercTBL.impactKey, baseDestinoGastoMercTBL.idCanal, destinoCustomerGroup.CustomerGroup, '', baseDestinoGastoMercTBL.pagador, baseDestinoGastoMercTBL.Marca, baseDestinoGastoMercTBL.ProductHierarchy, baseDestinoGastoMercTBL.ene, baseDestinoGastoMercTBL.feb, baseDestinoGastoMercTBL.mar, baseDestinoGastoMercTBL.abr, baseDestinoGastoMercTBL.may, baseDestinoGastoMercTBL.jun, baseDestinoGastoMercTBL.jul, baseDestinoGastoMercTBL.ago, baseDestinoGastoMercTBL.sep, baseDestinoGastoMercTBL.oct, baseDestinoGastoMercTBL.nov, baseDestinoGastoMercTBL.dic&#xA;FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;, lkrdstr.dbo.destinoCustomerGroup destinoCustomerGroup&#xA;WHERE destinoCustomerGroup.idDestino = baseDestinoGastoMercTBL.idDestino&#xA;&#xA;&#xA;delete [lkrdstr].[dbo].[dDVNGasMer]&#xA;&#xA;insert into [dbo].[dDVNGasMer]&#xA;SELECT driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverDetalleValoresN.idNegocio, driverDetalleValoresN.SalesOrganization, driverDetalleValoresN.SalesOffice, driverDetalleValoresN.DistributionChannel, driverDetalleValoresN.CustomerGroup, driverDetalleValoresN.Aliado, driverDetalleValoresN.Categoria, driverDetalleValoresN.ProductHierarchy, driverDetalleValoresN.pagador, driverDetalleValoresN.Marca, driverDetalleValoresN.baseDriver, driverDetalleValoresN.ene, driverDetalleValoresN.feb, driverDetalleValoresN.mar, driverDetalleValoresN.abr, driverDetalleValoresN.may, driverDetalleValoresN.jun, driverDetalleValoresN.jul, driverDetalleValoresN.ago, driverDetalleValoresN.sep, driverDetalleValoresN.oct, driverDetalleValoresN.nov, driverDetalleValoresN.dic&#xA;, ''&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE (driverDetalleValoresN.idDestino='') &#xA;AND (driverDetalleValoresN.baseDriver='valventa') &#xA;AND (driverDetalleValoresN.ano=@x_ano)&#xA;and driverDetalleValoresN.CustomerGroup&lt;&gt;'81'&#xA;and driverDetalleValoresN.Categoria not in ('MAQUILAS','MP. CAFÉ')&#xA;&#xA;update dDVNGasMer set &#xA;dDVNGasMer.idDestino= 'Invemerk'&#xA;FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;AND baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;AND baseDestinoGastoMercTBL.Marca = dDVNGasMer.Marca&#xA;&#xA;update dDVNGasMer set &#xA; dDVNGasMer.idDestino= 'Invemerk'&#xA;FROM lkrdstr.dbo.baseDestinoGastoMerc baseDestinoGastoMerc, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;WHERE baseDestinoGastoMerc.ano = dDVNGasMer.ano AND baseDestinoGastoMerc.idVersion = dDVNGasMer.idVersion AND baseDestinoGastoMerc.ProductHierarchy = dDVNGasMer.ProductHierarchy&#xA;&#xA;&#x9; &#xA;insert into lkrdstr.dbo.driverDetalleValoresN &#xA;SELECT dDVNGasMer.ano, dDVNGasMer.idVersion, dDVNGasMer.idNegocio, dDVNGasMer.SalesOrganization, dDVNGasMer.SalesOffice, dDVNGasMer.DistributionChannel, dDVNGasMer.CustomerGroup, dDVNGasMer.Aliado, dDVNGasMer.Categoria, dDVNGasMer.ProductHierarchy, dDVNGasMer.pagador, dDVNGasMer.Marca, dDVNGasMer.baseDriver, dDVNGasMer.ene, dDVNGasMer.feb, dDVNGasMer.mar, dDVNGasMer.abr, dDVNGasMer.may, dDVNGasMer.jun, dDVNGasMer.jul, dDVNGasMer.ago, dDVNGasMer.sep, dDVNGasMer.oct, dDVNGasMer.nov, dDVNGasMer.dic, dDVNGasMer.idDestino&#xA;FROM lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;WHERE (dDVNGasMer.idDestino&lt;&gt;'')&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Destino invetrade"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{61096377-5B88-4F9F-AA5D-8BD89C94CF6F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Destino invetrade"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;&#xA;DELETE FROM [lkrdstr].[dbo].[baseDestinoGastoMercTBL]&#xA;insert into lkrdstr.dbo.baseDestinoGastoMercTBL&#xA;select *  FROM [lkrdstr].[dbo].[baseDestinoGastoTrade]&#xA;&#xA;-- Invemerk&#xA;--Invetrade&#xA;&#xA;insert into [lkrdstr].[dbo].[baseDestinoGastoMercTBL]&#xA;SELECT DISTINCT baseDestinoGastoMercTBL.ano&#xA;, baseDestinoGastoMercTBL.idVersion&#xA;, baseDestinoGastoMercTBL.impactKey, baseDestinoGastoMercTBL.idCanal, destinoCustomerGroup.CustomerGroup, '', baseDestinoGastoMercTBL.pagador, baseDestinoGastoMercTBL.Marca, baseDestinoGastoMercTBL.ProductHierarchy, baseDestinoGastoMercTBL.ene, baseDestinoGastoMercTBL.feb, baseDestinoGastoMercTBL.mar, baseDestinoGastoMercTBL.abr, baseDestinoGastoMercTBL.may, baseDestinoGastoMercTBL.jun, baseDestinoGastoMercTBL.jul, baseDestinoGastoMercTBL.ago, baseDestinoGastoMercTBL.sep, baseDestinoGastoMercTBL.oct, baseDestinoGastoMercTBL.nov, baseDestinoGastoMercTBL.dic&#xA;FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;, lkrdstr.dbo.destinoCustomerGroup destinoCustomerGroup&#xA;WHERE destinoCustomerGroup.idDestino = baseDestinoGastoMercTBL.idDestino&#xA;&#xA;UPDATE baseDestinoGastoMercTBL SET&#xA;impactKey=&#xA;  case baseDestinoGastoMercTBL.idCanal when '' then '0' else '1' end&#xA;+ case baseDestinoGastoMercTBL.idCustomerGroup when '' then '0' else '1' end&#xA;+ case baseDestinoGastoMercTBL.idDestino when '' then '0' else '1' end&#xA;+ case baseDestinoGastoMercTBL.pagador when '' then '0' else '1' end&#xA;+ case baseDestinoGastoMercTBL.Marca when '' then '0' else '1' end&#xA;+ case baseDestinoGastoMercTBL.ProductHierarchy  when '' then '0' else '1' end&#xA;FROM  [lkrdstr].[dbo].[baseDestinoGastoMercTBL] baseDestinoGastoMercTBL   &#xA;&#xA;-- Invemerk&#xA;--Invetrade&#xA;delete lkrdstr.dbo.dDVNGasMer&#xA;&#xA;insert into [dbo].[dDVNGasMer]&#xA;SELECT driverDetalleValoresN.ano, driverDetalleValoresN.idVersion, driverDetalleValoresN.idNegocio, driverDetalleValoresN.SalesOrganization, driverDetalleValoresN.SalesOffice, driverDetalleValoresN.DistributionChannel, driverDetalleValoresN.CustomerGroup, driverDetalleValoresN.Aliado, driverDetalleValoresN.Categoria, driverDetalleValoresN.ProductHierarchy, driverDetalleValoresN.pagador, driverDetalleValoresN.Marca, driverDetalleValoresN.baseDriver, driverDetalleValoresN.ene, driverDetalleValoresN.feb, driverDetalleValoresN.mar, driverDetalleValoresN.abr, driverDetalleValoresN.may, driverDetalleValoresN.jun, driverDetalleValoresN.jul, driverDetalleValoresN.ago, driverDetalleValoresN.sep, driverDetalleValoresN.oct, driverDetalleValoresN.nov, driverDetalleValoresN.dic, driverDetalleValoresN.idDestino&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE (driverDetalleValoresN.idDestino='') AND (driverDetalleValoresN.baseDriver='valventa') AND (driverDetalleValoresN.ano=@x_ano)&#xA;and driverDetalleValoresN.CustomerGroup&lt;&gt;'81'&#xA;and driverDetalleValoresN.Categoria not in ('MAQUILAS','MP. CAFÉ')&#xA;--&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='000000')&#xA;&#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='000001')&#xA;&#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='000101')&#xA;&#xA;&#x9; &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.pagador = dDVNGasMer.pagador  &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='000111')&#xA;&#xA;&#x9; &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.pagador = dDVNGasMer.pagador  &#xA;&#x9; AND baseDestinoGastoMercTBL.Marca = dDVNGasMer.Marca  &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='001000')&#xA;&#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='001001')&#xA;&#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='001010')&#xA;&#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.Marca = dDVNGasMer.Marca  &#xA;&#x9; &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='001011')&#xA;&#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.Marca = dDVNGasMer.Marca  &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='010000')&#xA;&#xA;&#x9; &#xA;&#x9; AND dDVNGasMer.CustomerGroup = baseDestinoGastoMercTBL.idCustomerGroup  &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='010001')&#xA;&#xA;&#x9; &#xA;&#x9; AND dDVNGasMer.CustomerGroup = baseDestinoGastoMercTBL.idCustomerGroup  &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='010010')&#xA;&#xA;&#x9; &#xA;&#x9; AND dDVNGasMer.CustomerGroup = baseDestinoGastoMercTBL.idCustomerGroup  &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.Marca = dDVNGasMer.Marca  &#xA;&#x9; &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='010011')&#xA;&#xA;&#x9; &#xA;&#x9; AND dDVNGasMer.CustomerGroup = baseDestinoGastoMercTBL.idCustomerGroup  &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.Marca = dDVNGasMer.Marca  &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='100001')&#xA;&#xA;&#x9; AND dDVNGasMer.DistributionChannel = baseDestinoGastoMercTBL.idCanal &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='100010')&#xA;&#xA;&#x9; AND dDVNGasMer.DistributionChannel = baseDestinoGastoMercTBL.idCanal &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.Marca = dDVNGasMer.Marca  &#xA;&#x9; &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='100011')&#xA;&#xA;&#x9; AND dDVNGasMer.DistributionChannel = baseDestinoGastoMercTBL.idCanal &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.Marca = dDVNGasMer.Marca  &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='101000')&#xA;&#xA;&#x9; AND dDVNGasMer.DistributionChannel = baseDestinoGastoMercTBL.idCanal &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='110000')&#xA;&#xA;&#x9; AND dDVNGasMer.DistributionChannel = baseDestinoGastoMercTBL.idCanal &#xA;&#x9; AND dDVNGasMer.CustomerGroup = baseDestinoGastoMercTBL.idCustomerGroup  &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='110001')&#xA;&#xA;&#x9; AND dDVNGasMer.DistributionChannel = baseDestinoGastoMercTBL.idCanal &#xA;&#x9; AND dDVNGasMer.CustomerGroup = baseDestinoGastoMercTBL.idCustomerGroup  &#xA;&#x9; &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='110010')&#xA;&#xA;&#x9; AND dDVNGasMer.DistributionChannel = baseDestinoGastoMercTBL.idCanal &#xA;&#x9; AND dDVNGasMer.CustomerGroup = baseDestinoGastoMercTBL.idCustomerGroup  &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.Marca = dDVNGasMer.Marca  &#xA;&#x9; &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='110011')&#xA;&#xA;&#x9; AND dDVNGasMer.DistributionChannel = baseDestinoGastoMercTBL.idCanal &#xA;&#x9; AND dDVNGasMer.CustomerGroup = baseDestinoGastoMercTBL.idCustomerGroup  &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.Marca = dDVNGasMer.Marca  &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#xA;&#x9;--&#xA;&#x9;UPDATE &#xA;&#x9; dDVNGasMer SET&#xA;&#x9;&#x9;dDVNGasMer.idDestino= 'Invetrade'&#xA;&#x9;  FROM lkrdstr.dbo.baseDestinoGastoMercTBL baseDestinoGastoMercTBL&#xA;&#x9;, lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;    WHERE baseDestinoGastoMercTBL.ano = dDVNGasMer.ano &#xA;&#x9;and baseDestinoGastoMercTBL.idVersion = dDVNGasMer.idVersion &#xA;&#x9;AND (baseDestinoGastoMercTBL.idDestino='') &#xA;&#x9;AND (baseDestinoGastoMercTBL.impactKey='110101')&#xA;&#xA;&#x9; AND dDVNGasMer.DistributionChannel = baseDestinoGastoMercTBL.idCanal &#xA;&#x9; AND dDVNGasMer.CustomerGroup = baseDestinoGastoMercTBL.idCustomerGroup  &#xA;&#x9; AND baseDestinoGastoMercTBL.pagador = dDVNGasMer.pagador  &#xA;&#x9; &#xA;&#x9; AND baseDestinoGastoMercTBL.ProductHierarchy = dDVNGasMer.ProductHierarchy  &#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#x9;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN &#xA;SELECT dDVNGasMer.ano, dDVNGasMer.idVersion, dDVNGasMer.idNegocio, dDVNGasMer.SalesOrganization, dDVNGasMer.SalesOffice, dDVNGasMer.DistributionChannel, dDVNGasMer.CustomerGroup, dDVNGasMer.Aliado, dDVNGasMer.Categoria, dDVNGasMer.ProductHierarchy, dDVNGasMer.pagador, dDVNGasMer.Marca, dDVNGasMer.baseDriver, dDVNGasMer.ene, dDVNGasMer.feb, dDVNGasMer.mar, dDVNGasMer.abr, dDVNGasMer.may, dDVNGasMer.jun, dDVNGasMer.jul, dDVNGasMer.ago, dDVNGasMer.sep, dDVNGasMer.oct, dDVNGasMer.nov, dDVNGasMer.dic, dDVNGasMer.idDestino&#xA;FROM lkrdstr.dbo.dDVNGasMer dDVNGasMer&#xA;WHERE (dDVNGasMer.idDestino&lt;&gt;'')&#xA;&#x9;&#x9;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\destinos"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{7D67324F-45AB-40D1-9179-54F6516D3CB6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="destinos"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="DECLARE @x_ano  nvarchar(7), @x_versionPto nvarchar(20),@x_mes  nvarchar(7), @x_versionPry nvarchar(20), @x_versionPr1 nvarchar(20)&#xA;DECLARE @sqlCommand varchar(3300), @sqlCommand2 varchar(3300), @x_patron nvarchar(11),@x_space  nvarchar(7) ,@x_00  nvarchar(7), @x_lin0   nvarchar(7)&#xA;declare @_xidNegoc&#x9; Char(1),@_xSalesOr&#x9; Char(1),@_xSalesOf&#x9; Char(1),@_xDistrib&#x9; Char(1),@_xCustome&#x9; Char(1),@_xAliado&#x9; Char(1),@_xCategor&#x9; Char(1),@_xProduct&#x9; Char(1),@_xpagador&#x9; Char(1)&#xA;,@_xMarca Char(1)&#xA;&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;delete from  lkrdstr.dbo.driverDetalleValoresN where idDestino &lt;&gt;''&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'CategorPac   '&#xA;FROM lukerFin.dbo.categoriasPatricio categoriasPatricio, lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE DDVN.Categoria = categoriasPatricio.idCategoriaPatricio AND ((categoriasPatricio.isPac='s'))&#xA;and DDVN.idDestino=''&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador, DDVN.Marca, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic, 'SnkCnfPrcvSin'&#xA;FROM lukerFin.dbo.categoriasPatricio categoriasPatricio, lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE DDVN.Categoria = categoriasPatricio.idCategoriaPatricio &#xA;AND ((DDVN.idDestino='') &#xA;AND (categoriasPatricio.idCategoriaPatricio In ('Confiteria','Procoval','SNACKS')) &#xA;AND (DDVN.DistributionChannel&lt;&gt;'14') &#xA;AND (DDVN.ano=@x_ano)&#xA;)&#xA;&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'servMerc        '&#xA;FROM lukerFin.dbo.categoriasPatricio categoriasPatricio, lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE DDVN.Categoria = categoriasPatricio.idCategoriaPatricio AND ((categoriasPatricio.isServMerc='s') &#xA;AND (DDVN.idDestino=' '))&#xA;and DDVN.DistributionChannel in ('12','26')&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'LukerLight'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN, lukerFin.dbo.lineasVenta lineasVenta&#xA;WHERE DDVN.ProductHierarchy = lineasVenta.idLinea AND ((DDVN.idDestino=' ') &#xA;AND DDVN.ProductHierarchy in ('001001001003001001','001001001004001001')&#xA;)&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'Cacao'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN, lukerFin.dbo.lineasVenta lineasVenta&#xA;WHERE DDVN.ProductHierarchy = lineasVenta.idLinea AND ((DDVN.idDestino=' ') AND (lineasVenta.idFabrica='30'))&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'sinTeam      '&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') AND (DDVN.Aliado&lt;&gt;'TEAM')&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio&#xA;, DDVN.SalesOrganization&#xA;, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'sinF.SERVICE'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') &#xA;AND  (DDVN.idNegocio&lt;&gt;'F.SERVICE')&#xA;AND (DDVN.CustomerGroup&lt;&gt;'41')&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;--- Mayoristas del 11&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio&#xA;, DDVN.SalesOrganization&#xA;, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'MAYO'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') AND (DDVN.CustomerGroup In ('05','45','46'))&#xA;and DDVN.ano=@x_ano&#xA;&#xA;--- Distribuidores Agentes comer&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio&#xA;, DDVN.SalesOrganization&#xA;, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'DSAG'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') AND (DDVN.CustomerGroup In ('08','09'))&#xA;and DDVN.ano=@x_ano&#xA;&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'BakeryABC'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') AND (DDVN.CustomerGroup In ('80','81','82'))&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'Elaborados'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN, lukerFin.dbo.lineasVenta lineasVenta&#xA;WHERE DDVN.ProductHierarchy = lineasVenta.idLinea AND ( (DDVN.idDestino=' ') AND lineasVenta.idFabrica in ('30','31','40','51','52','53') )&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'sinDstrCha14'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') &#xA;AND (DDVN.DistributionChannel not In ('14'))&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;-- tcc&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'tcc'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') &#xA;AND (DDVN.DistributionChannel  &#xA;    In (&#xA;&#x9;&#x9;SELECT DISTINCT tccPorcentCanalAliado.idCanal&#xA;&#x9;&#x9;FROM lkrdstr.dbo.tccPorcentCanalAliado tccPorcentCanalAliado     &#xA;&#x9;)&#xA;)&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'Auto'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') &#xA;AND (DDVN.DistributionChannel  In ('12'))&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'Mode'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') &#xA;AND (DDVN.DistributionChannel  In ('14') or DDVN.CustomerGroup='64')&#xA;&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'OpeLogMK'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') &#xA;AND ((DDVN.DistributionChannel  In ('12')) or DDVN.CustomerGroup='07')&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio&#xA;, DDVN.SalesOrganization, DDVN.SalesOffice&#xA;, DDVN.DistributionChannel, DDVN.CustomerGroup&#xA;, DDVN.Aliado, DDVN.Categoria&#xA;, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca, DDVN.baseDriver&#xA;, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'prontoPago'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') AND (DDVN.DistributionChannel Not In ('14')) AND (DDVN.CustomerGroup&lt;&gt;'04') &#xA;OR (DDVN.idDestino='') &#xA;AND (DDVN.pagador In ('0200198644','0200290569')&#xA;)&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'LogPrim'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.Aliado&lt;&gt;'TEAM') &#xA;AND (DDVN.idDestino='')&#xA;and not ( (DDVN.Aliado='JGB') AND (DDVN.SalesOffice='03') )&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador, DDVN.Marca&#xA;, 'SalidAlmP' as baseDriver&#xA;, DDVN.ene* posicionesAgenciaLineaImpacto.ene&#xA;, DDVN.feb* posicionesAgenciaLineaImpacto.feb&#xA;, DDVN.mar* posicionesAgenciaLineaImpacto.mar&#xA;, DDVN.abr* posicionesAgenciaLineaImpacto.abr&#xA;, DDVN.may* posicionesAgenciaLineaImpacto.may&#xA;, DDVN.jun* posicionesAgenciaLineaImpacto.jun&#xA;, DDVN.jul* posicionesAgenciaLineaImpacto.jul&#xA;, DDVN.ago* posicionesAgenciaLineaImpacto.ago&#xA;, DDVN.sep* posicionesAgenciaLineaImpacto.sep&#xA;, DDVN.oct* posicionesAgenciaLineaImpacto.oct&#xA;, DDVN.nov* posicionesAgenciaLineaImpacto.nov&#xA;, DDVN.dic* posicionesAgenciaLineaImpacto.dic&#xA;, DDVN.idDestino&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;  , lkrdstr.dbo.posicionesAgenciaLineaImpacto posicionesAgenciaLineaImpacto&#xA;  , HBAVENNAL.dbo.pptoProductHierarchyNode pptoProductHierarchyNode&#xA;WHERE posicionesAgenciaLineaImpacto.ano = DDVN.ano &#xA;and  DDVN.ProductHierarchy = pptoProductHierarchyNode.jerarquiaProducto&#xA;AND posicionesAgenciaLineaImpacto.idversion = DDVN.idVersion &#xA;AND DDVN.SalesOffice = posicionesAgenciaLineaImpacto.idAgencia&#xA;AND posicionesAgenciaLineaImpacto.ProductHierarchy = DDVN.ProductHierarchy &#xA;AND ((DDVN.baseDriver='SalidAlmV') &#xA;AND (DDVN.idDestino=''))&#xA;AND not ((pptoProductHierarchyNode.Categoria='DERIVADOS DEL CACAO')  &#xA;AND (pptoProductHierarchyNode.Marca='Marcas Propias Alimentos'))&#xA;and  DDVN.pagador&lt;&gt;'2000362949' -- D1&#xA;and DDVN.ano=@x_ano&#xA;&#xA;Union all&#xA;&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador, DDVN.Marca&#xA;, 'SalidAlmP' as baseDriver&#xA;, DDVN.ene&#xA;, DDVN.feb&#xA;, DDVN.mar&#xA;, DDVN.abr&#xA;, DDVN.may&#xA;, DDVN.jun&#xA;, DDVN.jul&#xA;, DDVN.ago&#xA;, DDVN.sep&#xA;, DDVN.oct&#xA;, DDVN.nov&#xA;, DDVN.dic&#xA;, DDVN.idDestino&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;  , HBAVENNAL.dbo.pptoProductHierarchyNode pptoProductHierarchyNode&#xA;WHERE&#xA;  DDVN.ProductHierarchy = pptoProductHierarchyNode.jerarquiaProducto&#xA;&#xA;AND ((DDVN.baseDriver='SalidAlmV') &#xA;AND (DDVN.idDestino=''))&#xA;AND not ((pptoProductHierarchyNode.Categoria='DERIVADOS DEL CACAO')  &#xA;AND (pptoProductHierarchyNode.Marca='Marcas Propias Alimentos'))&#xA;and  DDVN.pagador&lt;&gt;'2000362949' -- D1&#xA;and DDVN.ano=@x_ano&#xA;and DDVN.idVersion='version1'&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador, DDVN.Marca&#xA;, 'tabTieMerc', DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic, DDVN.idDestino&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.ano= @x_ano  ) &#xA;AND (DDVN.baseDriver='SalidAlmV') &#xA;AND (DDVN.idDestino='') &#xA;AND (DDVN.idVersion='Real')&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'servMerc        '&#xA;FROM lukerFin.dbo.categoriasPatricio categoriasPatricio, lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE DDVN.Categoria = categoriasPatricio.idCategoriaPatricio AND ((categoriasPatricio.isServMerc='s') &#xA;AND (DDVN.idDestino=' '))&#xA;and DDVN.DistributionChannel in ('12','26')&#xA;AND (DDVN.baseDriver='tabTieMerc')&#xA;and DDVN.ano=@x_ano&#xA;---&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'Cuen        '&#xA;FROM lukerFin.dbo.categoriasPatricio categoriasPatricio, lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE DDVN.Categoria = categoriasPatricio.idCategoriaPatricio AND ((categoriasPatricio.isServMerc='s') &#xA;AND (DDVN.idDestino=' '))&#xA;and DDVN.DistributionChannel in ('26')&#xA;AND (DDVN.baseDriver='ValVenta')&#xA;and DDVN.ano=@x_ano&#xA;---&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, '', DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador, DDVN.Marca, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic, DDVN.idDestino&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.ano=@x_ano) AND (DDVN.baseDriver='KilosMvCAV') AND (DDVN.idDestino='')&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'SinAroma'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN, lukerFin.dbo.lineasVenta lineasVenta&#xA;WHERE DDVN.ProductHierarchy = lineasVenta.idLinea &#xA;AND  (DDVN.idDestino=' ') &#xA;AND  (lineasVenta.nptMarca&lt;&gt;'aroma')&#xA;and DDVN.ano=@x_ano&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'sinAseo    '&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') &#xA;and DDVN.Categoria not in ('MAQUILAS','Aseo','MP. CAFÉ')&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'sinFS'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') &#xA;AND (DDVN.DistributionChannel not In ('23','13','25'))&#xA;AND (DDVN.ano=@x_ano)&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT DDVN.ano, DDVN.idVersion, DDVN.idNegocio, DDVN.SalesOrganization, DDVN.SalesOffice, DDVN.DistributionChannel, DDVN.CustomerGroup, DDVN.Aliado, DDVN.Categoria, DDVN.ProductHierarchy, DDVN.pagador&#xA;, DDVN.Marca&#xA;, DDVN.baseDriver, DDVN.ene, DDVN.feb, DDVN.mar, DDVN.abr, DDVN.may, DDVN.jun, DDVN.jul, DDVN.ago, DDVN.sep, DDVN.oct, DDVN.nov, DDVN.dic&#xA;, 'FoodSinSoc'&#xA;FROM lkrdstr.dbo.driverDetalleValoresN DDVN&#xA;WHERE (DDVN.idDestino=' ') &#xA;AND (DDVN.DistributionChannel  = ('23'))&#xA;and DDVN.CustomerGroup not in ('20','8F','8H')&#xA;AND (DDVN.ano=@x_ano)&#xA;--Fin" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\explo sin destino"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{01A2AE5C-249F-4C85-B4D1-D775368ABD7A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="explo sin destino"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @x_ano  nvarchar(7), @x_versionPto nvarchar(20),@x_mes  nvarchar(7), @x_versionPry nvarchar(20), @x_versionPr1 nvarchar(20)&#xA;DECLARE @sqlCommand varchar(3300), @sqlCommand2 varchar(3300), @x_patron nvarchar(11),@x_space  nvarchar(7) ,@x_00  nvarchar(7), @x_lin0   nvarchar(7)&#xA;declare @_xidNegoc&#x9; Char(1),@_xSalesOr&#x9; Char(1),@_xSalesOf&#x9; Char(1),@_xDistrib&#x9; Char(1),@_xCustome&#x9; Char(1),@_xAliado&#x9; Char(1),@_xCategor&#x9; Char(1),@_xProduct&#x9; Char(1),@_xpagador&#x9; Char(1)&#xA;,@_xMarca Char(1)&#xA;&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;select  @x_space=''''''&#xA;select  @x_00='''00'''&#xA;&#xA;DECLARE ciclo_cursor CURSOR FOR &#xA;--- *** Sin Destino ***&#xA;SELECT DISTINCT datosFiN.idAsignacionDirecta&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.ano=@x_ano)&#xA;--and right(datosFiN.idAsignacionDirecta,1)='0'&#xA;&#xA;OPEN ciclo_cursor&#xA;FETCH NEXT FROM ciclo_cursor &#xA;INTO @x_patron&#xA;&#xA;&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN &#xA;&#xA;&#x9;Select&#x9;@_xidNegoc&#x9;= substring(@x_patron,1,1)&#xA;&#x9;Select&#x9;@_xSalesOr&#x9;= substring(@x_patron,2,1)&#xA;&#x9;Select&#x9;@_xSalesOf&#x9;= substring(@x_patron,3,1)&#xA;&#x9;Select&#x9;@_xDistrib&#x9;= substring(@x_patron,4,1)&#xA;&#x9;Select&#x9;@_xCustome&#x9;= substring(@x_patron,5,1)&#xA;&#x9;Select&#x9;@_xAliado&#x9;= substring(@x_patron,6,1)&#xA;&#x9;Select&#x9;@_xCategor&#x9;= substring(@x_patron,7,1)&#xA;&#x9;Select&#x9;@_xProduct&#x9;= substring(@x_patron,8,1)&#xA;&#x9;Select&#x9;@_xpagador&#x9;= substring(@x_patron,9,1)&#xA;&#x9;Select&#x9;@_xMarca&#x9;= substring(@x_patron,11,1)&#xA;&#xA;&#x9;select  @sqlCommand =  ' insert into  [lkrdstr].[dbo].[DatosFiTmpN]  '+' &#xA;&#x9;&#xA;&#x9;&#x9;SELECT &#xA;&#x9;&#x9;  datosFiN.ano  &#xA;&#x9;&#x9;, datosFiN.idPais&#xA;&#x9;&#x9;, datosFiN.idVersion&#xA;&#x9;&#x9;, datosFiN.idComponente&#xA;&#x9;&#x9;, datosFiN.consDistri&#xA;&#x9;&#x9;, datosFiN.consecutivo&#xA;&#x9;&#x9;, datosFiN.idCentro&#xA;&#x9;&#x9;, datosFiN.idCuenta&#xA;&#x9;&#x9;, datosFiN.idSociedad&#xA;&#x9;&#x9;, datosFiN.idDivision&#xA;&#x9;&#x9;, datosFiN.idNegocio&#xA;&#x9;&#x9;, datosFiN.idEFin&#xA;&#x9;&#x9;, datosFiN.B_asico_D_uplicaanexo&#xA;&#x9;&#x9;, datosFiN.idRubro&#xA;&#x9;&#x9;, datosFiN.idDriver&#xA;&#x9;&#x9;, datosFiN.ene * driverDetallePorcentajeN.ene&#xA;&#x9;&#x9;, datosFiN.feb * driverDetallePorcentajeN.feb&#xA;&#x9;&#x9;, datosFiN.mar * driverDetallePorcentajeN.mar&#xA;&#x9;&#x9;, datosFiN.abr * driverDetallePorcentajeN.abr&#xA;&#x9;&#x9;, datosFiN.may * driverDetallePorcentajeN.may&#xA;&#x9;&#x9;, datosFiN.jun * driverDetallePorcentajeN.jun&#xA;&#x9;&#x9;, datosFiN.jul * driverDetallePorcentajeN.jul&#xA;&#x9;&#x9;, datosFiN.ago * driverDetallePorcentajeN.ago&#xA;&#x9;&#x9;, datosFiN.sep * driverDetallePorcentajeN.sep&#xA;&#x9;&#x9;, datosFiN.oct * driverDetallePorcentajeN.oct&#xA;&#x9;&#x9;, datosFiN.nov * driverDetallePorcentajeN.nov&#xA;&#x9;&#x9;, datosFiN.dic * driverDetallePorcentajeN.dic&#xA;&#x9;&#x9;, driverDetallePorcentajeN.SalesOrganization&#xA;&#x9;&#x9;, driverDetallePorcentajeN.SalesOffice &#xA;&#x9;&#x9;, driverDetallePorcentajeN.DistributionChannel &#xA;&#x9;&#x9;, driverDetallePorcentajeN.CustomerGroup &#xA;&#x9;&#x9;, driverDetallePorcentajeN.Aliado&#xA;&#x9;&#x9;, driverDetallePorcentajeN.Categoria&#xA;&#x9;&#x9;, driverDetallePorcentajeN.Marca&#xA;&#x9;&#x9;, driverDetallePorcentajeN.ProductHierarchy&#xA;&#x9;&#x9;, driverDetallePorcentajeN.pagador&#xA;&#x9;&#x9;, datosFiN.idReferencia&#xA;&#x9;&#x9;, datosFiN.idDestino&#xA;&#x9;&#x9;, datosFiN.idAsignacionDirecta&#xA;&#x9;&#x9;, datosFiN.fvd1, datosFiN.fvd2, datosFiN.fvd3, datosFiN.fvd4, datosFiN.fvd5&#xA;&#x9;&#x9;, datosFiN.idCanalViejo&#xA;&#x9;&#x9;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;&#x9;&#x9;  , lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN&#xA;&#x9;&#x9;WHERE driverDetallePorcentajeN.ano = datosFiN.ano  AND driverDetallePorcentajeN.idVersion = datosFiN.idVersion   AND datosFiN.idDriver = driverDetallePorcentajeN.baseDriver &#xA;&#x9;&#x9;  AND datosFiN.idAsignacionDirecta = driverDetallePorcentajeN.llaveDriver &#xA;&#x9;&#x9;  AND datosFiN.idDestino = driverDetallePorcentajeN.idDestino &#xA;&#x9;&#x9;  and driverDetallePorcentajeN.llaveDriver='+''''+(@x_patron)+'''' +'&#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;  '+Case @_xAliado  when '1' then 'AND driverDetallePorcentajeN.Aliado&#x9;&#x9;&#x9;&#x9;= datosFiN.Aliado ' else '' end +'&#xA;&#x9;&#x9;  '+Case @_xCategor when '1' then 'AND driverDetallePorcentajeN.Categoria&#x9;&#x9;&#x9;= datosFiN.Categoria ' else '' end +'&#xA;          '+Case @_xProduct when '1' then 'AND driverDetallePorcentajeN.ProductHierarchy&#x9;&#x9;&#x9;= datosFiN.ProductHierarchy ' else '' end +'&#xA;&#x9;&#x9;  '+Case @_xMarca when '1' then 'AND driverDetallePorcentajeN.Marca&#x9;&#x9;&#x9;= datosFiN.Marca ' else '' end +'&#xA;&#xA;&#x9;&#x9;  '+Case @_xidNegoc when '1' then 'AND driverDetallePorcentajeN.idNegocio&#x9;&#x9;&#x9;= datosFiN.idNegocio' else '' end +' &#xA;&#x9;&#x9;  '+Case @_xpagador when '1' then 'AND driverDetallePorcentajeN.pagador&#x9;&#x9;&#x9;&#x9;= datosFiN.pagador ' else '' end +'&#xA;&#x9;&#x9;  '+Case @_xDistrib when '1' then 'AND driverDetallePorcentajeN.DistributionChannel&#x9;= datosFiN.idCanal ' else '' end +'&#xA;&#x9;&#x9;  '+Case @_xCustome when '1' then 'AND driverDetallePorcentajeN.CustomerGroup&#x9;&#x9;= datosFiN.idCustomerGroup ' else '' end +'&#xA;&#x9;&#x9;  '+Case @_xSalesOf when '1' then 'AND driverDetallePorcentajeN.SalesOffice&#x9;&#x9;&#x9;= datosFiN.idAgencia ' else '' end +'&#xA;&#x9;&#x9;  '+Case @_xSalesOr when '1' then 'AND driverDetallePorcentajeN.SalesOrganization&#x9;= datosFiN.idOrgVenta ' else '' end +'&#xA;&#x9;&#x9; &#xA;&#x9;&#xA;'&#xA;   --Print (@sqlCommand)&#xA;    Exec (@sqlCommand)&#xA;&#xA;   &#xA;   FETCH NEXT FROM ciclo_cursor &#xA;   INTO @x_patron&#xA;END&#xA;CLOSE ciclo_cursor&#xA;DEALLOCATE ciclo_cursor&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Exploreal"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{DD9DABBF-D8ED-483B-ACA1-FF209E4C3087}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Exploreal"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9FDF82CD-DAD8-42D1-8ABD-94517736CB97}"
          SQLTask:SqlStatementSource="update DatosFiTmpN set&#xA; DatosFiTmpN.DistributionChannel= canalesVenta.idDistributionChannel&#xA;FROM lukerFin.dbo.canalesVenta canalesVenta, lkrdstr.dbo.DatosFiTmpN DatosFiTmpN&#xA;WHERE DatosFiTmpN.idCanalViejo = canalesVenta.idCanal AND ((DatosFiTmpN.consDistri='1') &#xA;AND (DatosFiTmpN.consecutivo=1) AND (DatosFiTmpN.CustomerGroup&lt;&gt;'') &#xA;AND (DatosFiTmpN.DistributionChannel=''))&#xA;&#xA;update DatosFiTmpN set&#xA; DatosFiTmpN.CustomerGroup= canalesVenta.idGrupoCliente&#xA;,DatosFiTmpN.DistributionChannel= canalesVenta.idDistributionChannel&#xA;FROM lukerFin.dbo.canalesVenta canalesVenta&#xA;, lkrdstr.dbo.DatosFiTmpN DatosFiTmpN&#xA;WHERE DatosFiTmpN.idCanalViejo = canalesVenta.idCanal &#xA;AND ((DatosFiTmpN.consDistri='1') &#xA;AND (DatosFiTmpN.consecutivo=1) &#xA;AND (DatosFiTmpN.idCanalViejo&lt;&gt;'') &#xA;AND (DatosFiTmpN.CustomerGroup='') &#xA;AND (canalesVenta.idGrupoCliente&lt;&gt;'  '))&#xA;&#xA;/**&#xA;update DatosFiTmpN set&#xA; DatosFiTmpN.DistributionChannel= customerGroup.distriChannel&#xA;FROM lkrdstr.dbo.customerGroup customerGroup, lkrdstr.dbo.DatosFiTmpN DatosFiTmpN&#xA;WHERE customerGroup.CustomerGroup = DatosFiTmpN.CustomerGroup &#xA;AND DatosFiTmpN.idCanalViejo = customerGroup.idCanalViejo &#xA;AND (DatosFiTmpN.idVersion='real') &#xA;AND (DatosFiTmpN.consDistri='1') AND (DatosFiTmpN.consecutivo=1) &#xA;AND (DatosFiTmpN.DistributionChannel='') &#xA;AND (DatosFiTmpN.CustomerGroup&lt;&gt;'')&#xA;**/&#xA;&#xA;DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol &#xA;WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;delete lukerFin.dbo.datosFi where ano =@x_ano and (idComponente like '@gEx%' or idComponente like '@gCp%')&#xA;insert into  lukerFin.dbo.datosFi&#xA;SELECT   DatosFiTmpN.ano&#xA;, DatosFiTmpN.idPais&#xA;, 'Dg+' AS 'idCont'&#xA;, '@gEx'+ltrim(str(ROW_NUMBER() OVER (ORDER BY DatosFiTmpN.ano))) &#xA;, DatosFiTmpN.idVersion&#xA;, DatosFiTmpN.idCentro, DatosFiTmpN.idCuenta&#xA;, '0100'&#xA;, DatosFiTmpN.idDivision&#xA;, DatosFiTmpN.ProductHierarchy&#xA;, DatosFiTmpN.idNegocio, DatosFiTmpN.idRubro&#xA;, sum(DatosFiTmpN.ene)&#xA;, sum(DatosFiTmpN.feb)&#xA;, sum(DatosFiTmpN.mar)&#xA;, sum(DatosFiTmpN.abr)&#xA;, sum(DatosFiTmpN.may)&#xA;, sum(DatosFiTmpN.jun)&#xA;, sum(DatosFiTmpN.jul)&#xA;, sum(DatosFiTmpN.ago)&#xA;, sum(DatosFiTmpN.sep)&#xA;, sum(DatosFiTmpN.oct)&#xA;, sum(DatosFiTmpN.nov)&#xA;, sum(DatosFiTmpN.dic)&#xA;&#xA;, DatosFiTmpN.SalesOffice, customerGroup.idCanalViejo&#xA;--, case DatosFiTmpN.DistributionChannel when '14' then DatosFiTmpN.pagador else '' end&#xA;,  DatosFiTmpN.pagador &#xA;, DatosFiTmpN.Categoria, DatosFiTmpN.idDestino&#xA;, case left(DatosFiTmpN.idComponente,4) when 'gOE-' then left(right(DatosFiTmpN.idComponente,11),10) else '' end&#xA;, DatosFiTmpN.fvd1&#xA;&#xA;, DatosFiTmpN.idSociedad&#xA;&#xA;, case consDistri when '1' then 'tabcucom'else DatosFiTmpN.idDriver end&#xA;, DatosFiTmpN.idEFin, 0, DatosFiTmpN.B_asico_D_uplicaanexo&#xA;, DatosFiTmpN.fvd2, DatosFiTmpN.fvd3, DatosFiTmpN.fvd4&#xA;, right(centroPais.idContabilidad,1)&#xA;, DatosFiTmpN.fvd5&#xA;--*********************&#xA;,  case idDriver when 'tabTieMerc' then DatosFiTmpN.Aliado  else case substring(DatosFiTmpN.idAsignacionDirecta,11,1) when '1' then  DatosFiTmpN.Marca else 'N/A' end END&#xA;--********************&#xA;FROM lkrdstr.dbo.customerGroup customerGroup&#xA;   , lkrdstr.dbo.DatosFiTmpN DatosFiTmpN&#xA;   ,lukerFin.dbo.centroPais centroPais&#xA;WHERE centroPais.idCentro = DatosFiTmpN.idCentro AND centroPais.idPais = DatosFiTmpN.idPais&#xA;and customerGroup.CustomerGroup = DatosFiTmpN.CustomerGroup&#xA;and  customerGroup.distriChannel = DatosFiTmpN.DistributionChannel&#xA;group by &#xA;  DatosFiTmpN.ano&#xA;, DatosFiTmpN.idPais&#xA;, DatosFiTmpN.idVersion&#xA;, DatosFiTmpN.idCentro, DatosFiTmpN.idCuenta, DatosFiTmpN.idSociedad, DatosFiTmpN.idDivision&#xA;,  DatosFiTmpN.idNegocio, DatosFiTmpN.idRubro&#xA;, DatosFiTmpN.SalesOffice, customerGroup.idCanalViejo&#xA;--, case DatosFiTmpN.DistributionChannel when '14' then DatosFiTmpN.pagador else '' end&#xA;,  DatosFiTmpN.pagador&#xA;, DatosFiTmpN.Categoria, DatosFiTmpN.idDestino&#xA;, case left(DatosFiTmpN.idComponente,4) when 'gOE-' then left(right(DatosFiTmpN.idComponente,11),10) else '' end&#xA;, DatosFiTmpN.fvd1&#xA;, case consDistri when '1' then 'tabcucom'else DatosFiTmpN.idDriver end&#xA;, DatosFiTmpN.idEFin, DatosFiTmpN.B_asico_D_uplicaanexo&#xA;, DatosFiTmpN.fvd2, DatosFiTmpN.fvd3, DatosFiTmpN.fvd4,  DatosFiTmpN.fvd5&#xA;&#xA;--*********************&#xA;,  case idDriver when 'tabTieMerc' then DatosFiTmpN.Aliado  else case substring(DatosFiTmpN.idAsignacionDirecta,11,1) when '1' then  DatosFiTmpN.Marca else 'N/A' end END&#xA;--********************&#xA;, DatosFiTmpN.ProductHierarchy&#xA;,right(centroPais.idContabilidad,1)&#xA;--============================================================================================================================================&#xA;--- ***Contrapartida&#xA;insert into  lukerFin.dbo.datosFi&#xA;&#xA;SELECT   DatosFiTmpN.ano&#xA;, DatosFiTmpN.idPais&#xA;, 'Dg-' AS 'idCont'&#xA;, '@gCp'+ltrim(str(ROW_NUMBER() OVER (ORDER BY DatosFiTmpN.ano))) &#xA;, DatosFiTmpN.idVersion&#xA;, DatosFiTmpN.idCentro, DatosFiTmpN.idCuenta&#xA;, '0100'&#xA;, DatosFiTmpN.idDivision&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,8,1) when '1' then  DatosFiTmpN.ProductHierarchy     else '0' end&#xA;, DatosFiTmpN.idNegocio, DatosFiTmpN.idRubro&#xA;, -sum(DatosFiTmpN.ene)&#xA;, -sum(DatosFiTmpN.feb)&#xA;, -sum(DatosFiTmpN.mar)&#xA;, -sum(DatosFiTmpN.abr)&#xA;, -sum(DatosFiTmpN.may)&#xA;, -sum(DatosFiTmpN.jun)&#xA;, -sum(DatosFiTmpN.jul)&#xA;, -sum(DatosFiTmpN.ago)&#xA;, -sum(DatosFiTmpN.sep)&#xA;, -sum(DatosFiTmpN.oct)&#xA;, -sum(DatosFiTmpN.nov)&#xA;, -sum(DatosFiTmpN.dic)&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,3,1) when '1' then  DatosFiTmpN.SalesOffice     else '' end&#xA;, DatosFiTmpN.idCanalViejo&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,9,1) when '1' then  DatosFiTmpN.pagador else '' end&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,7,1) when '1' then  &#xA;      case consDistri when '1' then ''else DatosFiTmpN.Categoria  end  &#xA;  else '' end&#xA;, DatosFiTmpN.idDestino&#xA;, case left(DatosFiTmpN.idComponente,4) when 'gOE-' then left(right(DatosFiTmpN.idComponente,11),10) else '' end&#xA;, DatosFiTmpN.fvd1&#xA;&#xA;, DatosFiTmpN.idSociedad&#xA;&#xA;, case consDistri when '1' then 'tabcucom'else DatosFiTmpN.idDriver end&#xA;, DatosFiTmpN.idEFin, 0, DatosFiTmpN.B_asico_D_uplicaanexo&#xA;, DatosFiTmpN.fvd2, DatosFiTmpN.fvd3, DatosFiTmpN.fvd4&#xA;,right(centroPais.idContabilidad,1)&#xA;, DatosFiTmpN.fvd5&#xA;--*********************&#xA;,  case idDriver when 'tabTieMerc' then DatosFiTmpN.Aliado  else case substring(DatosFiTmpN.idAsignacionDirecta,11,1) when '1' then  DatosFiTmpN.Marca else 'N/A' end END&#xA;--********************&#xA;&#xA;FROM lkrdstr.dbo.customerGroup customerGroup, lkrdstr.dbo.DatosFiTmpN DatosFiTmpN&#xA;,lukerFin.dbo.centroPais centroPais&#xA;WHERE centroPais.idCentro = DatosFiTmpN.idCentro AND centroPais.idPais = DatosFiTmpN.idPais&#xA;and customerGroup.CustomerGroup = DatosFiTmpN.CustomerGroup&#xA;and  customerGroup.distriChannel = DatosFiTmpN.DistributionChannel&#xA;group by&#xA;  DatosFiTmpN.ano&#xA;, DatosFiTmpN.idPais&#xA;, DatosFiTmpN.idVersion&#xA;, DatosFiTmpN.idCentro, DatosFiTmpN.idCuenta, DatosFiTmpN.idSociedad, DatosFiTmpN.idDivision--, DatosFiTmpN.ProductHierarchy&#xA;, DatosFiTmpN.idNegocio, DatosFiTmpN.idRubro&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,3,1) when '1' then DatosFiTmpN.SalesOffice     else '' end&#xA;, DatosFiTmpN.idCanalViejo&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,8,1) when '1' then  DatosFiTmpN.ProductHierarchy     else '0' end  &#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,9,1) when '1' then  DatosFiTmpN.pagador else '' end&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,8,1) when '1' then  DatosFiTmpN.pagador else '' end&#xA;, case substring(DatosFiTmpN.idAsignacionDirecta,7,1) when '1' then  &#xA;      case consDistri when '1' then ''else DatosFiTmpN.Categoria  end  &#xA;  else '' end&#xA;, DatosFiTmpN.idDestino&#xA;, case left(DatosFiTmpN.idComponente,4) when 'gOE-' then left(right(DatosFiTmpN.idComponente,11),10) else '' end&#xA;,  DatosFiTmpN.fvd1&#xA;, case consDistri when '1' then 'tabcucom'else DatosFiTmpN.idDriver end&#xA;, DatosFiTmpN.idEFin,  DatosFiTmpN.B_asico_D_uplicaanexo&#xA;, DatosFiTmpN.fvd2, DatosFiTmpN.fvd3, DatosFiTmpN.fvd4, DatosFiTmpN.fvd5&#xA;&#xA;--*********************&#xA;,  case idDriver when 'tabTieMerc' then DatosFiTmpN.Aliado  else case substring(DatosFiTmpN.idAsignacionDirecta,11,1) when '1' then  DatosFiTmpN.Marca else 'N/A' end END&#xA;--********************&#xA;,right(centroPais.idContabilidad,1)&#xA;&#xA;update datosFi set&#xA;   datosFi.idFijoVariable= rubros_grp_nopat.fijoVariableDirecto&#xA; , datosFi.fijoVariableDirecto2= rubros_grp_nopat.fijoVariableDirecto2&#xA; , datosFi.fijoVariableDirecto3= rubros_grp_nopat.fijoVariableDirecto3&#xA; , datosFi.fijoVariableDirecto4= rubros_grp_nopat.fijoVariableDirecto4&#xA; , datosFi.fijoVariableDirecto5= rubros_grp_nopat.fijoVariableDirecto5&#xA;FROM lukerFin.dbo.datosFi datosFi, lukerFin.dbo.rubros_grp_nopat rubros_grp_nopat&#xA;WHERE rubros_grp_nopat.B_asico_D_uplicaanexo = datosFi.B_asico_D_uplicaanexo AND rubros_grp_nopat.idRubro = datosFi.idRubro AND ((datosFi.ano=@x_ano) &#xA;AND (datosFi.idFijoVariable&lt;&gt;rubros_grp_nopat.fijoVariableDirecto) AND (rubros_grp_nopat.fijoVariableDirecto='V'))&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Hereda ver7(CM)"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{864BEEFD-B1D6-45F9-8F13-C6205CDA84CB}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Hereda ver7(CM)"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="/**&#xA;DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int, @m1 int, @m2 int, @m3 int, @m4 int, @m5 int, @m6 int, @m7 int, @m8 int, @m9 int, @m10 int, @m11 int, @m12 int&#xA;, @x_verReal nvarchar(15) , @x_verPpto nvarchar(15), @x_verDis2 nvarchar(15)&#xA;&#xA;select @x_verReal= 'Real'&#xA;select @x_verPpto= 'Version1'&#xA;select @x_verDis2 = ( SELECT z_prog_cntrol.vrble_char_vlue FROM lukerFin.dbo.z_prog_cntrol z_prog_cntrol WHERE (z_prog_cntrol.prgram_nme='NwStrctra           ') AND (z_prog_cntrol.vrble_nme='verDis2             '))&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;delete lkrdstr.dbo.driverDetalleValoresN where ano=@x_ano and idVersion='version7'&#xA;&#xA;insert into lkrdstr.dbo.driverDetalleValoresN&#xA;SELECT driverDetalleValoresN.ano, 'Version7' AS 'idVersion', driverDetalleValoresN.idNegocio, driverDetalleValoresN.SalesOrganization, driverDetalleValoresN.SalesOffice, driverDetalleValoresN.DistributionChannel, driverDetalleValoresN.CustomerGroup, driverDetalleValoresN.Aliado, driverDetalleValoresN.Categoria, driverDetalleValoresN.ProductHierarchy, driverDetalleValoresN.pagador, driverDetalleValoresN.Marca, driverDetalleValoresN.baseDriver, driverDetalleValoresN.ene, driverDetalleValoresN.feb, driverDetalleValoresN.mar, driverDetalleValoresN.abr, driverDetalleValoresN.may, driverDetalleValoresN.jun, driverDetalleValoresN.jul, driverDetalleValoresN.ago, driverDetalleValoresN.sep, driverDetalleValoresN.oct, driverDetalleValoresN.nov, driverDetalleValoresN.dic, driverDetalleValoresN.idDestino&#xA;FROM lkrdstr.dbo.driverDetalleValoresN driverDetalleValoresN&#xA;WHERE (driverDetalleValoresN.ano=@x_ano) &#xA;AND (driverDetalleValoresN.idVersion='version6')&#xA;**/" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\init"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E0FFF3BF-D64E-480F-BE22-FA26CB56A8B9}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="init"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="declare @x_ano int&#xA;&#xA;select @x_ano = (&#xA;&#x9;SELECT corridaProgramada.anoProceso&#xA;&#x9;FROM lukerFin.dbo.corridaProgramada corridaProgramada&#xA;)&#xA;&#xA;&#xA;&#xA;update z_prog_cntrol set &#xA;  z_prog_cntrol.vrble_vlue&#x9;&#x9;=@x_ano &#xA;, z_prog_cntrol.vrble_char_vlue&#x9;=@x_ano &#xA;FROM lukerFin.dbo.z_prog_cntrol z_prog_cntrol&#xA;WHERE (z_prog_cntrol.vrble_nme='NwStrAno')&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\pre ttc porcentajes"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{91B51566-F7DE-41CF-A45A-89D4E54396A6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="pre ttc porcentajes"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol &#xA;WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;update datosFiN set&#xA; datosFiN.Aliado= zProductHierarchyNodeN5CatAli.Aliado&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;  , lkrdstr.dbo.zProductHierarchyNodeN5CatAli zProductHierarchyNodeN5CatAli&#xA;WHERE datosFiN.Categoria = zProductHierarchyNodeN5CatAli.Categoria &#xA;AND ((datosFiN.Categoria&lt;&gt;' ') &#xA;AND (datosFiN.idDriver = 'tabcucom') &#xA;AND (datosFiN.Aliado=''))&#xA;&#xA;update prePorcentajesCompensacionAliado set&#xA; prePorcentajesCompensacionAliado.Categoria= prePorcentajesCompensacionAliado.Aliado&#xA;FROM lkrdstr.dbo.prePorcentajesCompensacionAliado prePorcentajesCompensacionAliado&#xA;WHERE (prePorcentajesCompensacionAliado.Aliado='JGB')&#xA;&#xA;&#xA;DELETE FROM [lkrdstr].[dbo].[prePorcentajesCompensacionAliadoRecalc]&#xA;insert into [lkrdstr].[dbo].[prePorcentajesCompensacionAliadoRecalc]&#xA;SELECT DISTINCT ppA.ano, driverDetalleValoresNventaTabccImpact.idVersion, driverDetalleValoresNventaTabccImpact.SalesOffice&#xA;, driverDetalleValoresNventaTabccImpact.CustomerGroup&#xA;, driverDetalleValoresNventaTabccImpact.idDestino&#xA;, ppA.Aliado&#xA;, ppA.Categoria&#xA;, driverDetalleValoresNventaTabccImpact.pagador&#xA;, ppA.P1&#x9;, 0.0 AS 'IMP1'&#x9;&#x9;, 0.0 AS 'G1'&#x9;, 0.0 AS 'OW1'&#x9;, 0.0 AS 'EOW1'&#x9;&#x9;, 0.0 AS 'nwP1',0&#xA;, ppA.P2&#x9;, 0.0 AS 'IMP2'&#x9;&#x9;, 0.0 AS 'G2'&#x9;, 0.0 AS 'OW2'&#x9;, 0.0 AS 'EOW2'&#x9;&#x9;, 0.0 AS 'nwP2',0&#xA;, ppA.P3&#x9;, 0.0 AS 'IMP3'&#x9;&#x9;, 0.0 AS 'G3'&#x9;, 0.0 AS 'OW3'&#x9;, 0.0 AS 'EOW3'&#x9;&#x9;, 0.0 AS 'nwP3',0&#xA;, ppA.P4&#x9;, 0.0 AS 'IMP4'&#x9;&#x9;, 0.0 AS 'G4'&#x9;, 0.0 AS 'OW4'&#x9;, 0.0 AS 'EOW4'&#x9;&#x9;, 0.0 AS 'nwP4',0&#xA;, ppA.P5&#x9;, 0.0 AS 'IMP5'&#x9;&#x9;, 0.0 AS 'G5'&#x9;, 0.0 AS 'OW5'&#x9;, 0.0 AS 'EOW5'&#x9;&#x9;, 0.0 AS 'nwP5',0&#xA;, ppA.P6&#x9;, 0.0 AS 'IMP6'&#x9;&#x9;, 0.0 AS 'G6'&#x9;, 0.0 AS 'OW6'&#x9;, 0.0 AS 'EOW6'&#x9;&#x9;, 0.0 AS 'nwP6',0&#xA;, ppA.P7&#x9;, 0.0 AS 'IMP7'&#x9;&#x9;, 0.0 AS 'G7'&#x9;, 0.0 AS 'OW7'&#x9;, 0.0 AS 'EOW7'&#x9;&#x9;, 0.0 AS 'nwP7',0&#xA;, ppA.P8&#x9;, 0.0 AS 'IMP8'&#x9;&#x9;, 0.0 AS 'G8'&#x9;, 0.0 AS 'OW8'&#x9;, 0.0 AS 'EOW8'&#x9;&#x9;, 0.0 AS 'nwP8',0&#xA;, ppA.P9&#x9;, 0.0 AS 'IMP9'&#x9;&#x9;, 0.0 AS 'G9'&#x9;, 0.0 AS 'OW9'&#x9;, 0.0 AS 'EOW9'&#x9;&#x9;, 0.0 AS 'nwP9',0&#xA;, ppA.P10&#x9;, 0.0 AS 'IMP10'&#x9;, 0.0 AS 'G10'&#x9;, 0.0 AS 'OW10'&#x9;, 0.0 AS 'EOW10'&#x9;, 0.0 AS 'nwP10',0&#xA;, ppA.P11&#x9;, 0.0 AS 'IMP11'&#x9;, 0.0 AS 'G11'&#x9;, 0.0 AS 'OW11'&#x9;, 0.0 AS 'EOW11'&#x9;, 0.0 AS 'nwP11',0&#xA;, ppA.P12&#x9;, 0.0 AS 'IMP12'&#x9;, 0.0 AS 'G12'&#x9;, 0.0 AS 'OW12'&#x9;, 0.0 AS 'EOW12'&#x9;, 0.0 AS 'nwP12',0&#xA;FROM  lkrdstr.dbo.driverDetalleValoresNventaTabccImpact driverDetalleValoresNventaTabccImpact&#xA;&#x9;, lkrdstr.dbo.prePorcentajesCompensacionAliado ppA&#xA;WHERE driverDetalleValoresNventaTabccImpact.ano = ppA.ano&#xA;and driverDetalleValoresNventaTabccImpact.ano =@x_ano&#xA;ORDER BY 1,2,3,4,5&#xA;&#xA;--insert into lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc&#xA;SELECT DISTINCT ano,idVersion, '00', '',idDestino,Aliado,Categoria, pagador&#xA;   ,P1,IMP1,G1,OW1,EOW1,nwP1,Dir1&#xA;   ,P2,IMP2,G2,OW2,EOW2,nwP2,Dir2&#xA;   ,P3,IMP3,G3,OW3,EOW3,nwP3,Dir3&#xA;   ,P4,IMP4,G4,OW4,EOW4,nwP4,Dir4&#xA;   ,P5,IMP5,G5,OW5,EOW5,nwP5,Dir5&#xA;   ,P6,IMP6,G6,OW6,EOW6,nwP6,Dir6&#xA;   ,P7,IMP7,G7,OW7,EOW7,nwP7,Dir7&#xA;   ,P8,IMP8,G8,OW8,EOW8,nwP8,Dir8&#xA;   ,P9,IMP9,G9,OW9,EOW9,nwP9,Dir9&#xA;   ,P10,IMP10,G10,OW10,EOW10,nwP10,Dir10&#xA;   ,P11,IMP11,G11,OW11,EOW11,nwP11,Dir11&#xA;   ,P12,IMP12,G12,OW12,EOW12,nwP12,Dir12&#xA;FROM lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc prePorcentajesCompensacionAliadoRecalc&#xA;&#xA;--insert into lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc&#xA;SELECT DISTINCT ano,idVersion, '', '',idDestino,Aliado,Categoria, pagador&#xA;   ,P1,IMP1,G1,OW1,EOW1,nwP1,Dir1&#xA;   ,P2,IMP2,G2,OW2,EOW2,nwP2,Dir2&#xA;   ,P3,IMP3,G3,OW3,EOW3,nwP3,Dir3&#xA;   ,P4,IMP4,G4,OW4,EOW4,nwP4,Dir4&#xA;   ,P5,IMP5,G5,OW5,EOW5,nwP5,Dir5&#xA;   ,P6,IMP6,G6,OW6,EOW6,nwP6,Dir6&#xA;   ,P7,IMP7,G7,OW7,EOW7,nwP7,Dir7&#xA;   ,P8,IMP8,G8,OW8,EOW8,nwP8,Dir8&#xA;   ,P9,IMP9,G9,OW9,EOW9,nwP9,Dir9&#xA;   ,P10,IMP10,G10,OW10,EOW10,nwP10,Dir10&#xA;   ,P11,IMP11,G11,OW11,EOW11,nwP11,Dir11&#xA;   ,P12,IMP12,G12,OW12,EOW12,nwP12,Dir12&#xA;FROM lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc prePorcentajesCompensacionAliadoRecalc&#xA;&#xA;--insert into [lkrdstr].[dbo].[prePorcentajesCompensacionAliadoRecalc]&#xA;SELECT DISTINCT prePorcentajesCompensacionAliado.ano, driverDetalleValoresNventaTabccImpact.idVersion&#xA;, driverDetalleValoresNventaTabccImpact.SalesOffice&#xA;, ''&#xA;, ''&#xA;, prePorcentajesCompensacionAliado.Aliado, prePorcentajesCompensacionAliado.Categoria, pagador&#xA;, prePorcentajesCompensacionAliado.P1&#x9;, 0.0 AS 'IMP1'&#x9;&#x9;, 0.0 AS 'G1'&#x9;, 0.0 AS 'OW1'&#x9;, 0.0 AS 'EOW1'&#x9;&#x9;, 0.0 AS 'nwP1',0&#xA;, prePorcentajesCompensacionAliado.P2&#x9;, 0.0 AS 'IMP2'&#x9;&#x9;, 0.0 AS 'G2'&#x9;, 0.0 AS 'OW2'&#x9;, 0.0 AS 'EOW2'&#x9;&#x9;, 0.0 AS 'nwP2',0&#xA;, prePorcentajesCompensacionAliado.P3&#x9;, 0.0 AS 'IMP3'&#x9;&#x9;, 0.0 AS 'G3'&#x9;, 0.0 AS 'OW3'&#x9;, 0.0 AS 'EOW3'&#x9;&#x9;, 0.0 AS 'nwP3',0&#xA;, prePorcentajesCompensacionAliado.P4&#x9;, 0.0 AS 'IMP4'&#x9;&#x9;, 0.0 AS 'G4'&#x9;, 0.0 AS 'OW4'&#x9;, 0.0 AS 'EOW4'&#x9;&#x9;, 0.0 AS 'nwP4',0&#xA;, prePorcentajesCompensacionAliado.P5&#x9;, 0.0 AS 'IMP5'&#x9;&#x9;, 0.0 AS 'G5'&#x9;, 0.0 AS 'OW5'&#x9;, 0.0 AS 'EOW5'&#x9;&#x9;, 0.0 AS 'nwP5',0&#xA;, prePorcentajesCompensacionAliado.P6&#x9;, 0.0 AS 'IMP6'&#x9;&#x9;, 0.0 AS 'G6'&#x9;, 0.0 AS 'OW6'&#x9;, 0.0 AS 'EOW6'&#x9;&#x9;, 0.0 AS 'nwP6',0&#xA;, prePorcentajesCompensacionAliado.P7&#x9;, 0.0 AS 'IMP7'&#x9;&#x9;, 0.0 AS 'G7'&#x9;, 0.0 AS 'OW7'&#x9;, 0.0 AS 'EOW7'&#x9;&#x9;, 0.0 AS 'nwP7',0&#xA;, prePorcentajesCompensacionAliado.P8&#x9;, 0.0 AS 'IMP8'&#x9;&#x9;, 0.0 AS 'G8'&#x9;, 0.0 AS 'OW8'&#x9;, 0.0 AS 'EOW8'&#x9;&#x9;, 0.0 AS 'nwP8',0&#xA;, prePorcentajesCompensacionAliado.P9&#x9;, 0.0 AS 'IMP9'&#x9;&#x9;, 0.0 AS 'G9'&#x9;, 0.0 AS 'OW9'&#x9;, 0.0 AS 'EOW9'&#x9;&#x9;, 0.0 AS 'nwP9',0&#xA;, prePorcentajesCompensacionAliado.P10&#x9;, 0.0 AS 'IMP10'&#x9;, 0.0 AS 'G10'&#x9;, 0.0 AS 'OW10'&#x9;, 0.0 AS 'EOW10'&#x9;, 0.0 AS 'nwP10',0&#xA;, prePorcentajesCompensacionAliado.P11&#x9;, 0.0 AS 'IMP11'&#x9;, 0.0 AS 'G11'&#x9;, 0.0 AS 'OW11'&#x9;, 0.0 AS 'EOW11'&#x9;, 0.0 AS 'nwP11',0&#xA;, prePorcentajesCompensacionAliado.P12&#x9;, 0.0 AS 'IMP12'&#x9;, 0.0 AS 'G12'&#x9;, 0.0 AS 'OW12'&#x9;, 0.0 AS 'EOW12'&#x9;, 0.0 AS 'nwP12',0&#xA;FROM  lkrdstr.dbo.driverDetalleValoresNventaTabccImpact driverDetalleValoresNventaTabccImpact&#xA;&#x9;, lkrdstr.dbo.prePorcentajesCompensacionAliado prePorcentajesCompensacionAliado&#xA;WHERE driverDetalleValoresNventaTabccImpact.ano = prePorcentajesCompensacionAliado.ano&#xA;and driverDetalleValoresNventaTabccImpact.SalesOffice not in ('','00')&#xA;and driverDetalleValoresNventaTabccImpact.ano =@x_ano&#xA;ORDER BY 1,2,3,4,5,6,7&#xA;&#xA;update prePorcentajesCompensacionAliadoRecalc set&#xA;  prePorcentajesCompensacionAliadoRecalc.Dir1= datosFiNGastoCompensacionDirecto.ene&#xA;, prePorcentajesCompensacionAliadoRecalc.Dir2= datosFiNGastoCompensacionDirecto.feb&#xA;, prePorcentajesCompensacionAliadoRecalc.Dir3= datosFiNGastoCompensacionDirecto.mar&#xA;, prePorcentajesCompensacionAliadoRecalc.Dir4= datosFiNGastoCompensacionDirecto.abr&#xA;, prePorcentajesCompensacionAliadoRecalc.Dir5= datosFiNGastoCompensacionDirecto.may&#xA;, prePorcentajesCompensacionAliadoRecalc.Dir6= datosFiNGastoCompensacionDirecto.jun&#xA;, prePorcentajesCompensacionAliadoRecalc.Dir7= datosFiNGastoCompensacionDirecto.jul&#xA;, prePorcentajesCompensacionAliadoRecalc.Dir8= datosFiNGastoCompensacionDirecto.ago&#xA;, prePorcentajesCompensacionAliadoRecalc.Dir9= datosFiNGastoCompensacionDirecto.sep&#xA;, prePorcentajesCompensacionAliadoRecalc.Dir10= datosFiNGastoCompensacionDirecto.oct&#xA;, prePorcentajesCompensacionAliadoRecalc.Dir11= datosFiNGastoCompensacionDirecto.nov&#xA;, prePorcentajesCompensacionAliadoRecalc.Dir12= datosFiNGastoCompensacionDirecto.dic&#xA;FROM lkrdstr.dbo.datosFiNGastoCompensacionDirecto datosFiNGastoCompensacionDirecto&#xA;, lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc prePorcentajesCompensacionAliadoRecalc&#xA;WHERE datosFiNGastoCompensacionDirecto.Aliado = prePorcentajesCompensacionAliadoRecalc.Aliado &#xA;AND datosFiNGastoCompensacionDirecto.ano = prePorcentajesCompensacionAliadoRecalc.ano &#xA;AND datosFiNGastoCompensacionDirecto.Categoria = prePorcentajesCompensacionAliadoRecalc.Categoria &#xA;AND datosFiNGastoCompensacionDirecto.idVersion = prePorcentajesCompensacionAliadoRecalc.idVersion &#xA;AND prePorcentajesCompensacionAliadoRecalc.SalesOffice = datosFiNGastoCompensacionDirecto.idAgencia&#xA;AND prePorcentajesCompensacionAliadoRecalc.CustomerGroup = datosFiNGastoCompensacionDirecto.idCustomerGroup&#xA;AND prePorcentajesCompensacionAliadoRecalc.idDestino = datosFiNGastoCompensacionDirecto.idDestino&#xA;AND prePorcentajesCompensacionAliadoRecalc.pagador = datosFiNGastoCompensacionDirecto.pagador&#xA;&#xA;-- (impacto driver mes)--&#xA;UPDATE prePorcentajesCompensacionAliadoRecalc set&#xA;  prePorcentajesCompensacionAliadoRecalc.IMP1&#x9;= driverDetalleValoresNventaTabccImpact.ene&#xA;, prePorcentajesCompensacionAliadoRecalc.IMP2&#x9;= driverDetalleValoresNventaTabccImpact.feb&#xA;, prePorcentajesCompensacionAliadoRecalc.IMP3&#x9;= driverDetalleValoresNventaTabccImpact.mar&#xA;, prePorcentajesCompensacionAliadoRecalc.IMP4&#x9;= driverDetalleValoresNventaTabccImpact.abr&#xA;, prePorcentajesCompensacionAliadoRecalc.IMP5&#x9;= driverDetalleValoresNventaTabccImpact.may&#xA;, prePorcentajesCompensacionAliadoRecalc.IMP6&#x9;= driverDetalleValoresNventaTabccImpact.jun&#xA;, prePorcentajesCompensacionAliadoRecalc.IMP7&#x9;= driverDetalleValoresNventaTabccImpact.jul&#xA;, prePorcentajesCompensacionAliadoRecalc.IMP8&#x9;= driverDetalleValoresNventaTabccImpact.ago&#xA;, prePorcentajesCompensacionAliadoRecalc.IMP9&#x9;= driverDetalleValoresNventaTabccImpact.sep&#xA;, prePorcentajesCompensacionAliadoRecalc.IMP10&#x9;= driverDetalleValoresNventaTabccImpact.oct&#xA;, prePorcentajesCompensacionAliadoRecalc.IMP11&#x9;= driverDetalleValoresNventaTabccImpact.nov&#xA;, prePorcentajesCompensacionAliadoRecalc.IMP12&#x9;= driverDetalleValoresNventaTabccImpact.dic&#xA;FROM lkrdstr.dbo.driverDetalleValoresNventaTabccImpact driverDetalleValoresNventaTabccImpact&#xA;   , lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc prePorcentajesCompensacionAliadoRecalc&#xA;WHERE driverDetalleValoresNventaTabccImpact.Aliado = prePorcentajesCompensacionAliadoRecalc.Aliado &#xA;AND driverDetalleValoresNventaTabccImpact.ano = prePorcentajesCompensacionAliadoRecalc.ano &#xA;AND driverDetalleValoresNventaTabccImpact.Categoria = prePorcentajesCompensacionAliadoRecalc.Categoria &#xA;AND driverDetalleValoresNventaTabccImpact.idVersion = prePorcentajesCompensacionAliadoRecalc.idVersion &#xA;AND driverDetalleValoresNventaTabccImpact.SalesOffice = prePorcentajesCompensacionAliadoRecalc.SalesOffice&#xA;AND driverDetalleValoresNventaTabccImpact.pagador = prePorcentajesCompensacionAliadoRecalc.pagador&#xA;AND driverDetalleValoresNventaTabccImpact.idDestino = prePorcentajesCompensacionAliadoRecalc.idDestino&#xA;AND driverDetalleValoresNventaTabccImpact.CustomerGroup = prePorcentajesCompensacionAliadoRecalc.CustomerGroup&#xA;&#xA;update prePorcentajesCompensacionAliadoRecalc set  prePorcentajesCompensacionAliadoRecalc.IMP1=1, prePorcentajesCompensacionAliadoRecalc.IMP2=1, prePorcentajesCompensacionAliadoRecalc.IMP3=1, prePorcentajesCompensacionAliadoRecalc.IMP4=1, prePorcentajesCompensacionAliadoRecalc.IMP5=1, prePorcentajesCompensacionAliadoRecalc.IMP6=1, prePorcentajesCompensacionAliadoRecalc.IMP7=1, prePorcentajesCompensacionAliadoRecalc.IMP8=1, prePorcentajesCompensacionAliadoRecalc.IMP9=1, prePorcentajesCompensacionAliadoRecalc.IMP10=1, prePorcentajesCompensacionAliadoRecalc.IMP11=1, prePorcentajesCompensacionAliadoRecalc.IMP12=1&#xA;FROM lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc prePorcentajesCompensacionAliadoRecalc&#xA;WHERE  (prePorcentajesCompensacionAliadoRecalc.SalesOffice in ('00','')) &#xA;and prePorcentajesCompensacionAliadoRecalc.CustomerGroup='' &#xA;and prePorcentajesCompensacionAliadoRecalc.idDestino=''&#xA;&#xA;-- Distri 1 gasto y ow&#xA;update prePorcentajesCompensacionAliadoRecalc set&#xA;  prePorcentajesCompensacionAliadoRecalc.G1&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa1&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.ene&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa1&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P1&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP1&#x9;) end&#xA;, prePorcentajesCompensacionAliadoRecalc.G2&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa2&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.feb&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa2&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P2&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP2&#x9;) end&#xA;, prePorcentajesCompensacionAliadoRecalc.G3&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa3&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.mar&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa3&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P3&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP3&#x9;) end&#xA;, prePorcentajesCompensacionAliadoRecalc.G4&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa4&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.abr&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa4&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P4&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP4&#x9;) end&#xA;, prePorcentajesCompensacionAliadoRecalc.G5&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa5&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.may&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa5&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P5&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP5&#x9;) end&#xA;, prePorcentajesCompensacionAliadoRecalc.G6&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa6&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.jun&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa6&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P6&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP6&#x9;) end&#xA;, prePorcentajesCompensacionAliadoRecalc.G7&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa7&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.jul&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa7&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P7&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP7&#x9;) end&#xA;, prePorcentajesCompensacionAliadoRecalc.G8&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa8&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.ago&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa8&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P8&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP8&#x9;) end&#xA;, prePorcentajesCompensacionAliadoRecalc.G9&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa9&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.sep&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa9&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P9&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP9&#x9;) end&#xA;, prePorcentajesCompensacionAliadoRecalc.G10&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa10&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.oct&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa10&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P10&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP10&#x9;) end&#xA;, prePorcentajesCompensacionAliadoRecalc.G11&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa11&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.nov&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa11&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P11&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP11&#x9;) end&#xA;, prePorcentajesCompensacionAliadoRecalc.G12&#x9;= case prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa12&#x9;when 0 then 0 else (datosFiNGastoCompensacionContext.dic&#x9;/ prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.tParticipa12&#x9;) * (prePorcentajesCompensacionAliadoRecalc.P12&#x9;*prePorcentajesCompensacionAliadoRecalc.IMP12&#x9;) end&#xA;&#xA;, prePorcentajesCompensacionAliadoRecalc.OW1    = case prePorcentajesCompensacionAliadoRecalc.IMP1&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.ene&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P1&#x9;/ case tParticipa1&#x9;when 0 then 1 else tParticipa1&#x9; end&#x9;end&#xA;, prePorcentajesCompensacionAliadoRecalc.OW2    = case prePorcentajesCompensacionAliadoRecalc.IMP2&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.feb&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P2&#x9;/ case tParticipa2&#x9;when 0 then 1 else tParticipa2&#x9; end&#x9;end&#xA;, prePorcentajesCompensacionAliadoRecalc.OW3    = case prePorcentajesCompensacionAliadoRecalc.IMP3&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.mar&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P3&#x9;/ case tParticipa3&#x9;when 0 then 1 else tParticipa3&#x9; end&#x9;end&#xA;, prePorcentajesCompensacionAliadoRecalc.OW4    = case prePorcentajesCompensacionAliadoRecalc.IMP4&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.abr&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P4&#x9;/ case tParticipa4&#x9;when 0 then 1 else tParticipa4&#x9; end&#x9;end&#xA;, prePorcentajesCompensacionAliadoRecalc.OW5    = case prePorcentajesCompensacionAliadoRecalc.IMP5&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.may&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P5&#x9;/ case tParticipa5&#x9;when 0 then 1 else tParticipa5&#x9; end&#x9;end&#xA;, prePorcentajesCompensacionAliadoRecalc.OW6    = case prePorcentajesCompensacionAliadoRecalc.IMP6&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.jun&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P6&#x9;/ case tParticipa6&#x9;when 0 then 1 else tParticipa6&#x9; end&#x9;end&#xA;, prePorcentajesCompensacionAliadoRecalc.OW7    = case prePorcentajesCompensacionAliadoRecalc.IMP7&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.jul&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P7&#x9;/ case tParticipa7&#x9;when 0 then 1 else tParticipa7&#x9; end&#x9;end&#xA;, prePorcentajesCompensacionAliadoRecalc.OW8    = case prePorcentajesCompensacionAliadoRecalc.IMP8&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.ago&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P8&#x9;/ case tParticipa8&#x9;when 0 then 1 else tParticipa8&#x9; end&#x9;end&#xA;, prePorcentajesCompensacionAliadoRecalc.OW9    = case prePorcentajesCompensacionAliadoRecalc.IMP9&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.sep&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P9&#x9;/ case tParticipa9&#x9;when 0 then 1 else tParticipa9&#x9; end&#x9;end&#xA;, prePorcentajesCompensacionAliadoRecalc.OW10   = case prePorcentajesCompensacionAliadoRecalc.IMP10&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.oct&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P10&#x9;/ case tParticipa10 when 0 then 1 else tParticipa10&#x9; end&#x9;end&#xA;, prePorcentajesCompensacionAliadoRecalc.OW11   = case prePorcentajesCompensacionAliadoRecalc.IMP11&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.nov&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P11&#x9;/ case tParticipa11 when 0 then 1 else tParticipa11&#x9; end&#x9;end&#xA;, prePorcentajesCompensacionAliadoRecalc.OW12   = case prePorcentajesCompensacionAliadoRecalc.IMP12&#x9;when 1 then 0 else  datosFiNGastoCompensacionContext.dic&#x9;*&#x9;prePorcentajesCompensacionAliadoRecalc.P12&#x9;/ case tParticipa12 when 0 then 1 else tParticipa12&#x9; end&#x9;end&#xA;&#xA;FROM lkrdstr.dbo.datosFiNGastoCompensacionContext datosFiNGastoCompensacionContext&#xA;   , lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc prePorcentajesCompensacionAliadoRecalc&#xA;   , lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalcTotPorcParticipan prePorcentajesCompensacionAliadoRecalcTotPorcParticipan&#xA;WHERE prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.ano = prePorcentajesCompensacionAliadoRecalc.ano &#xA;  AND datosFiNGastoCompensacionContext.ano&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  = prePorcentajesCompensacionAliadoRecalc.ano &#xA;  AND prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.idVersion = prePorcentajesCompensacionAliadoRecalc.idVersion &#xA;  AND datosFiNGastoCompensacionContext.idVersion&#x9;&#x9;&#x9;&#x9;&#x9;    = prePorcentajesCompensacionAliadoRecalc.idVersion &#xA;  AND prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.SalesOffice = prePorcentajesCompensacionAliadoRecalc.SalesOffice &#xA;  AND prePorcentajesCompensacionAliadoRecalc.SalesOffice = datosFiNGastoCompensacionContext.idAgencia&#xA;  AND prePorcentajesCompensacionAliadoRecalc.CustomerGroup = datosFiNGastoCompensacionContext.idCustomerGroup&#xA;  AND prePorcentajesCompensacionAliadoRecalc.CustomerGroup = prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.CustomerGroup&#xA;&#xA;  AND prePorcentajesCompensacionAliadoRecalc.idDestino = datosFiNGastoCompensacionContext.idDestino&#xA;  AND prePorcentajesCompensacionAliadoRecalc.idDestino = prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.idDestino&#xA;  AND prePorcentajesCompensacionAliadoRecalc.pagador = datosFiNGastoCompensacionContext.pagador&#xA;  AND prePorcentajesCompensacionAliadoRecalc.pagador = prePorcentajesCompensacionAliadoRecalcTotPorcParticipan.pagador&#xA;&#xA;  --- Explo ow&#xA;&#xA;  update prePorcentajesCompensacionAliadoRecalc set &#xA;    prePorcentajesCompensacionAliadoRecalc.EOW1&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG1&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW1&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG1&#x9;&#x9;* prePorcentajesCompensacionAliadoRecalc.G1&#x9;&#x9;end&#xA;,   prePorcentajesCompensacionAliadoRecalc.EOW2&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG2&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW2&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG2&#x9;&#x9;* prePorcentajesCompensacionAliadoRecalc.G2&#x9;&#x9;end&#xA;,   prePorcentajesCompensacionAliadoRecalc.EOW3&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG3&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW3&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG3&#x9;&#x9;* prePorcentajesCompensacionAliadoRecalc.G3&#x9;&#x9;end&#xA;,   prePorcentajesCompensacionAliadoRecalc.EOW4&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG4&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW4&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG4&#x9;&#x9;* prePorcentajesCompensacionAliadoRecalc.G4&#x9;&#x9;end&#xA;,   prePorcentajesCompensacionAliadoRecalc.EOW5&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG5&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW5&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG5&#x9;&#x9;* prePorcentajesCompensacionAliadoRecalc.G5&#x9;&#x9;end&#xA;,   prePorcentajesCompensacionAliadoRecalc.EOW6&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG6&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW6&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG6&#x9;&#x9;* prePorcentajesCompensacionAliadoRecalc.G6&#x9;&#x9;end&#xA;,   prePorcentajesCompensacionAliadoRecalc.EOW7&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG7&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW7&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG7&#x9;&#x9;* prePorcentajesCompensacionAliadoRecalc.G7&#x9;&#x9;end&#xA;,   prePorcentajesCompensacionAliadoRecalc.EOW8&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG8&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW8&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG8&#x9;&#x9;* prePorcentajesCompensacionAliadoRecalc.G8&#x9;&#x9;end&#xA;,   prePorcentajesCompensacionAliadoRecalc.EOW9&#x9;&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG9&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW9&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG9&#x9;&#x9;* prePorcentajesCompensacionAliadoRecalc.G9&#x9;&#x9;end&#xA;,   prePorcentajesCompensacionAliadoRecalc.EOW10&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG10&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW10&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG10&#x9;* prePorcentajesCompensacionAliadoRecalc.G10&#x9;end&#xA;,   prePorcentajesCompensacionAliadoRecalc.EOW11&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG11&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW11&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG11&#x9;* prePorcentajesCompensacionAliadoRecalc.G11&#x9;end&#xA;,   prePorcentajesCompensacionAliadoRecalc.EOW12&#x9;= case prePorcentajesCompensacionAliadoRecalcTGstCat.tG12&#x9;when 0 then 0 else prePorcentajesCompensacionAliadoRecalcTGstCat.tOW12&#x9;/ prePorcentajesCompensacionAliadoRecalcTGstCat.tG12&#x9;* prePorcentajesCompensacionAliadoRecalc.G12&#x9;end&#xA;FROM lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc prePorcentajesCompensacionAliadoRecalc&#xA;   , lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalcTGstCat prePorcentajesCompensacionAliadoRecalcTGstCat&#xA;WHERE prePorcentajesCompensacionAliadoRecalcTGstCat.Aliado = prePorcentajesCompensacionAliadoRecalc.Aliado &#xA;AND prePorcentajesCompensacionAliadoRecalcTGstCat.ano = prePorcentajesCompensacionAliadoRecalc.ano &#xA;AND prePorcentajesCompensacionAliadoRecalcTGstCat.Categoria = prePorcentajesCompensacionAliadoRecalc.Categoria &#xA;AND prePorcentajesCompensacionAliadoRecalcTGstCat.idVersion = prePorcentajesCompensacionAliadoRecalc.idVersion &#xA;&#xA;--*************&#xA;---- (ExploDir)--&#xA;--*************&#xA;update prePorcentajesCompensacionAliadoRecalc set&#xA;  prePorcentajesCompensacionAliadoRecalc.EOW1&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW1&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir1u&#x9;&#x9;*prePorcentajesCompensacionAliadoRecalc.P1&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir1&#xA;, prePorcentajesCompensacionAliadoRecalc.EOW2&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW2&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir2u&#x9;&#x9;*prePorcentajesCompensacionAliadoRecalc.P2&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir2&#xA;, prePorcentajesCompensacionAliadoRecalc.EOW3&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW3&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir3u&#x9;&#x9;*prePorcentajesCompensacionAliadoRecalc.P3&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir3&#xA;, prePorcentajesCompensacionAliadoRecalc.EOW4&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW4&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir4u&#x9;&#x9;*prePorcentajesCompensacionAliadoRecalc.P4&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir4&#xA;, prePorcentajesCompensacionAliadoRecalc.EOW5&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW5&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir5u&#x9;&#x9;*prePorcentajesCompensacionAliadoRecalc.P5&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir5&#xA;, prePorcentajesCompensacionAliadoRecalc.EOW6&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW6&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir6u&#x9;&#x9;*prePorcentajesCompensacionAliadoRecalc.P6&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir6&#xA;, prePorcentajesCompensacionAliadoRecalc.EOW7&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW7&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir7u&#x9;&#x9;*prePorcentajesCompensacionAliadoRecalc.P7&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir7&#xA;, prePorcentajesCompensacionAliadoRecalc.EOW8&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW8&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir8u&#x9;&#x9;*prePorcentajesCompensacionAliadoRecalc.P8&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir7&#xA;, prePorcentajesCompensacionAliadoRecalc.EOW9&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW9&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir9u&#x9;&#x9;*prePorcentajesCompensacionAliadoRecalc.P9&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir9&#xA;, prePorcentajesCompensacionAliadoRecalc.EOW10&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW10&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir10u&#x9;*prePorcentajesCompensacionAliadoRecalc.P10&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir10&#xA;, prePorcentajesCompensacionAliadoRecalc.EOW11&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW11&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir11u&#x9;*prePorcentajesCompensacionAliadoRecalc.P11&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir11&#xA;, prePorcentajesCompensacionAliadoRecalc.EOW12&#x9;= prePorcentajesCompensacionAliadoRecalc.EOW12&#x9;+(prePorcentajesCompensacionAliadoRecalcFactorDirecto.Dir12u&#x9;*prePorcentajesCompensacionAliadoRecalc.P12&#x9;)-prePorcentajesCompensacionAliadoRecalc.Dir12&#xA;&#xA;FROM lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc prePorcentajesCompensacionAliadoRecalc&#xA;, lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalcFactorDirecto prePorcentajesCompensacionAliadoRecalcFactorDirecto&#xA;WHERE prePorcentajesCompensacionAliadoRecalcFactorDirecto.ano = prePorcentajesCompensacionAliadoRecalc.ano AND prePorcentajesCompensacionAliadoRecalcFactorDirecto.idVersion = prePorcentajesCompensacionAliadoRecalc.idVersion &#xA;AND prePorcentajesCompensacionAliadoRecalcFactorDirecto.SalesOffice = prePorcentajesCompensacionAliadoRecalc.SalesOffice&#xA;AND prePorcentajesCompensacionAliadoRecalcFactorDirecto.CustomerGroup = prePorcentajesCompensacionAliadoRecalc.CustomerGroup&#xA;AND prePorcentajesCompensacionAliadoRecalcFactorDirecto.idDestino = prePorcentajesCompensacionAliadoRecalc.idDestino&#xA;AND prePorcentajesCompensacionAliadoRecalcFactorDirecto.pagador  = prePorcentajesCompensacionAliadoRecalc.pagador&#xA;--- nw porcent&#xA;update  prePorcentajesCompensacionAliadoRecalc set&#xA; prePorcentajesCompensacionAliadoRecalc.nwP1&#x9;= case ppA.tG1&#x9;&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G1&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW1&#x9;)/(ppA.tG1+tEOW1&#x9;)&#x9;end&#xA;,prePorcentajesCompensacionAliadoRecalc.nwP2&#x9;= case ppA.tG2&#x9;&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G2&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW2&#x9;)/(ppA.tG2+tEOW2&#x9;)&#x9;end&#xA;,prePorcentajesCompensacionAliadoRecalc.nwP3&#x9;= case ppA.tG3&#x9;&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G3&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW3&#x9;)/(ppA.tG3+tEOW3&#x9;)&#x9;end&#xA;,prePorcentajesCompensacionAliadoRecalc.nwP4&#x9;= case ppA.tG4&#x9;&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G4&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW4&#x9;)/(ppA.tG4+tEOW4&#x9;)&#x9;end&#xA;,prePorcentajesCompensacionAliadoRecalc.nwP5&#x9;= case ppA.tG5&#x9;&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G5&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW5&#x9;)/(ppA.tG5+tEOW5&#x9;)&#x9;end&#xA;,prePorcentajesCompensacionAliadoRecalc.nwP6&#x9;= case ppA.tG6&#x9;&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G6&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW6&#x9;)/(ppA.tG6+tEOW6&#x9;)&#x9;end&#xA;,prePorcentajesCompensacionAliadoRecalc.nwP7&#x9;= case ppA.tG7&#x9;&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G7&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW7&#x9;)/(ppA.tG7+tEOW7&#x9;)&#x9;end&#xA;,prePorcentajesCompensacionAliadoRecalc.nwP8&#x9;= case ppA.tG8&#x9;&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G8&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW8&#x9;)/(ppA.tG8+tEOW8&#x9;)&#x9;end&#xA;,prePorcentajesCompensacionAliadoRecalc.nwP9&#x9;= case ppA.tG9&#x9;&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G9&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW9&#x9;)/(ppA.tG9+tEOW9&#x9;)&#x9;end&#xA;,prePorcentajesCompensacionAliadoRecalc.nwP10&#x9;= case ppA.tG10&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G10&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW10&#x9;)/(ppA.tG10+tEOW10)&#x9;end&#xA;,prePorcentajesCompensacionAliadoRecalc.nwP11&#x9;= case ppA.tG11&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G11&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW11&#x9;)/(ppA.tG11+tEOW11)&#x9;end&#xA;,prePorcentajesCompensacionAliadoRecalc.nwP12&#x9;= case ppA.tG12&#x9;when 0 then 0 else (prePorcentajesCompensacionAliadoRecalc.G12&#x9;+prePorcentajesCompensacionAliadoRecalc.EOW12&#x9;)/(ppA.tG12+tEOW12)&#x9;end&#xA;&#xA;FROM lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc prePorcentajesCompensacionAliadoRecalc&#xA;, lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalcTGstVerContext ppA&#xA;WHERE ppA.ano = prePorcentajesCompensacionAliadoRecalc.ano &#xA;AND ppA.idVersion = prePorcentajesCompensacionAliadoRecalc.idVersion&#xA;AND ppA.SalesOffice = prePorcentajesCompensacionAliadoRecalc.SalesOffice&#xA;AND ppA.CustomerGroup = prePorcentajesCompensacionAliadoRecalc.CustomerGroup&#xA;AND ppA.idDestino = prePorcentajesCompensacionAliadoRecalc.idDestino&#xA;AND ppA.pagador = prePorcentajesCompensacionAliadoRecalc.pagador&#xA;---" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\preDistri Mercad Explo"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5697DF48-54B4-4B49-877C-BA0E8EA62D4E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="preDistri Mercad Explo"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;delete [lkrdstr].[dbo].[tabTimeCom]&#xA;insert into [lkrdstr].[dbo].[tabTimeCom]&#xA;SELECT 'Real' AS 'idVersion','', tmptabTimeCom.idAgencia, tmptabTimeCom.pagador, tmptabTimeCom.idCanalViejo, tmptabTimeCom.porcentaje1, tmptabTimeCom.porcentaje2&#xA;, tmptabTimeCom.porcentaje3, tmptabTimeCom.porcentaje4, tmptabTimeCom.porcentaje5, tmptabTimeCom.porcentaje6, tmptabTimeCom.porcentaje7&#xA;, tmptabTimeCom.porcentaje8, tmptabTimeCom.porcentaje9, tmptabTimeCom.porcentaje10, tmptabTimeCom.porcentaje11, tmptabTimeCom.porcentaje12&#xA;FROM [lkrdstr].[dbo].tmptabTimeCom tmptabTimeCom&#xA;&#xA;insert into [lkrdstr].[dbo].[tabTimeCom]&#xA;SELECT 'version1' AS 'idVersion','', tmptabTimeCom.idAgencia, tmptabTimeCom.pagador, tmptabTimeCom.idCanalViejo, tmptabTimeCom.porcentaje1, tmptabTimeCom.porcentaje2&#xA;, tmptabTimeCom.porcentaje3, tmptabTimeCom.porcentaje4, tmptabTimeCom.porcentaje5, tmptabTimeCom.porcentaje6, tmptabTimeCom.porcentaje7&#xA;, tmptabTimeCom.porcentaje8, tmptabTimeCom.porcentaje9, tmptabTimeCom.porcentaje10, tmptabTimeCom.porcentaje11, tmptabTimeCom.porcentaje12&#xA;FROM [lkrdstr].[dbo].tmptabTimeCom tmptabTimeCom&#xA;&#xA;&#xA;insert into [lkrdstr].[dbo].[tabTimeCom]&#xA;SELECT tabTimeCom.idVersion, tabTimeVEN.Aliado, tabTimeCom.idAgencia, tabTimeCom.pagador, tabTimeCom.idCanalViejo &#xA;, tabTimeCom.porcentaje1 * tabTimeVEN.ene&#xA;, tabTimeCom.porcentaje2 * tabTimeVEN.feb&#xA;, tabTimeCom.porcentaje3 * tabTimeVEN.mar&#xA;, tabTimeCom.porcentaje4 * tabTimeVEN.abr&#xA;, tabTimeCom.porcentaje5 * tabTimeVEN.may&#xA;, tabTimeCom.porcentaje6 * tabTimeVEN.jun&#xA;, tabTimeCom.porcentaje7 * tabTimeVEN.jul&#xA;, tabTimeCom.porcentaje8 * tabTimeVEN.ago&#xA;, tabTimeCom.porcentaje9 * tabTimeVEN.sep&#xA;, tabTimeCom.porcentaje10* tabTimeVEN.oct&#xA;, tabTimeCom.porcentaje11* tabTimeVEN.nov&#xA;, tabTimeCom.porcentaje12* tabTimeVEN.dic&#xA;FROM lkrdstr.dbo.tabTimeCom tabTimeCom&#xA;    , lkrdstr.dbo.tabTimeVEN tabTimeVEN&#xA;WHERE tabTimeVEN.idCanalViejo = tabTimeCom.idCanalViejo &#xA;AND tabTimeVEN.idVersion = tabTimeCom.idVersion &#xA;AND tabTimeVEN.SalesOffice = tabTimeCom.idAgencia &#xA;AND ((tabTimeVEN.ano=@x_ano))&#xA;&#xA;&#xA;update ttmPorcentAgeDchanAliado set&#xA;  ttmPorcentAgeDchanAliado.porcent1&#x9;=0&#xA;, ttmPorcentAgeDchanAliado.porcent2&#x9;=0&#xA;, ttmPorcentAgeDchanAliado.porcent3&#x9;=0&#xA;, ttmPorcentAgeDchanAliado.porcent4&#x9;=0&#xA;, ttmPorcentAgeDchanAliado.porcent5&#x9;=0&#xA;, ttmPorcentAgeDchanAliado.porcent6&#x9;=0&#xA;, ttmPorcentAgeDchanAliado.porcent7&#x9;=0&#xA;, ttmPorcentAgeDchanAliado.porcent8&#x9;=0&#xA;, ttmPorcentAgeDchanAliado.porcent9&#x9;=0&#xA;, ttmPorcentAgeDchanAliado.porcent10=0&#xA;, ttmPorcentAgeDchanAliado.porcent11=0&#xA;, ttmPorcentAgeDchanAliado.porcent12=0&#xA;FROM lkrdstr.dbo.ttmPorcentAgeDchanAliado ttmPorcentAgeDchanAliado left outer join lkrdstr.dbo.ttmContextVenta ttmContextVenta&#xA;on  ttmContextVenta.ano = ttmPorcentAgeDchanAliado.ano AND ttmContextVenta.cAliado = ttmPorcentAgeDchanAliado.cAliado AND ttmContextVenta.idAgencia = ttmPorcentAgeDchanAliado.idAgencia AND ttmContextVenta.idDChannel = ttmPorcentAgeDchanAliado.idDChannel AND ttmContextVenta.idVersion = ttmPorcentAgeDchanAliado.idVersion&#xA;where ttmContextVenta.idDestino is null&#xA;&#xA;&#xA;go&#xA;&#xA;DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol &#xA;WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;delete [lukerFin].[dbo].[datosFi] where ano = @x_ano and (idContabilidad LIKE 'MK%') &#xA;&#xA;delete [lukerFin].[dbo].[datosFi_TmpDistriMercaderistas]&#xA;&#xA;insert into [lukerFin].[dbo].[datosFi_TmpDistriMercaderistas]&#xA;&#xA;SELECT datosFi.ano, datosFi.idPais&#xA;, 'MK+'&#xA;, rtrim(left(datosFi.idComponente,10))+'@'+right(rtrim(prePorcentajesMercaderistaAliadoRecalc.Categoria),4)&#xA;, datosFi.idVersion, datosFi.idCentro, datosFi.idCuenta, datosFi.idSociedad, datosFi.idDivision, datosFi.idLinea, datosFi.idNegocio, datosFi.idRubro&#xA;, sum(datosFi.ene* prePorcentajesMercaderistaAliadoRecalc.nwP1)&#xA;, sum(datosFi.feb* prePorcentajesMercaderistaAliadoRecalc.nwP2)&#xA;, sum(datosFi.mar* prePorcentajesMercaderistaAliadoRecalc.nwP3)&#xA;, sum(datosFi.abr* prePorcentajesMercaderistaAliadoRecalc.nwP4)&#xA;, sum(datosFi.may* prePorcentajesMercaderistaAliadoRecalc.nwP5)&#xA;, sum(datosFi.jun* prePorcentajesMercaderistaAliadoRecalc.nwP6)&#xA;, sum(datosFi.jul* prePorcentajesMercaderistaAliadoRecalc.nwP7)&#xA;, sum(datosFi.ago* prePorcentajesMercaderistaAliadoRecalc.nwP8)&#xA;, sum(datosFi.sep* prePorcentajesMercaderistaAliadoRecalc.nwP9)&#xA;, sum(datosFi.oct* prePorcentajesMercaderistaAliadoRecalc.nwP10)&#xA;, sum(datosFi.nov* prePorcentajesMercaderistaAliadoRecalc.nwP11)&#xA;, sum(datosFi.dic* prePorcentajesMercaderistaAliadoRecalc.nwP12)&#xA;, datosFi.idAgencia&#xA;, prePorcentajesMercaderistaAliadoRecalc.idDChannel&#xA;, datosFi.idCadena&#xA;, prePorcentajesMercaderistaAliadoRecalc.Categoria --**&#xA;, datosFi.idDestino, datosFi.idGerencia, datosFi.idFijoVariable, datosFi.idAsignacionDirecta, datosFi.idDriver, datosFi.idEFin, datosFi.idReferencia, datosFi.B_asico_D_uplicaanexo, datosFi.fijoVariableDirecto2, datosFi.fijoVariableDirecto3, datosFi.fijoVariableDirecto4, datosFi.tmpIsUneta, datosFi.fijoVariableDirecto5&#xA;, prePorcentajesMercaderistaAliadoRecalc.Aliado --****&#xA;FROM lukerFin.dbo.datosFi datosFi, lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc2019 prePorcentajesMercaderistaAliadoRecalc&#xA;WHERE prePorcentajesMercaderistaAliadoRecalc.ano = datosFi.ano &#xA;AND prePorcentajesMercaderistaAliadoRecalc.idVersion = datosFi.idVersion &#xA;AND datosFi.idAgencia = prePorcentajesMercaderistaAliadoRecalc.SalesOffice &#xA;AND ((datosFi.ano=@x_ano) &#xA;AND (datosFi.idComponente Like 'g%') &#xA;AND (datosFi.idRubro Like '%MK') &#xA;AND (datosFi.idDriver='tabTieMerc')&#xA;--AND (datosFi.idVersion In ('Real','Version1','Version')) &#xA;AND (datosFi.idCadena='') &#xA;AND (datosFi.idCategoria='') &#xA;AND (datosFi.idNegocio='V.COMERCIAL'))&#xA;group by&#xA;datosFi.ano, datosFi.idPais&#xA;&#xA;, rtrim(left(datosFi.idComponente,10))+'@'+right(rtrim(prePorcentajesMercaderistaAliadoRecalc.Categoria),4)&#xA;, datosFi.idVersion, datosFi.idCentro, datosFi.idCuenta, datosFi.idSociedad, datosFi.idDivision, datosFi.idLinea, datosFi.idNegocio, datosFi.idRubro&#xA;&#xA;, datosFi.idAgencia&#xA;, prePorcentajesMercaderistaAliadoRecalc.idDChannel&#xA;, datosFi.idCadena&#xA;, prePorcentajesMercaderistaAliadoRecalc.Categoria --**&#xA;, datosFi.idDestino, datosFi.idGerencia, datosFi.idFijoVariable, datosFi.idAsignacionDirecta&#xA;, datosFi.idDriver, datosFi.idEFin, datosFi.idReferencia, datosFi.B_asico_D_uplicaanexo, datosFi.fijoVariableDirecto2, datosFi.fijoVariableDirecto3, datosFi.fijoVariableDirecto4, datosFi.tmpIsUneta, datosFi.fijoVariableDirecto5&#xA;, prePorcentajesMercaderistaAliadoRecalc.Aliado --****&#xA;&#xA;--- contrapartida&#xA;insert into [lukerFin].[dbo].[datosFi_TmpDistriMercaderistas]&#xA;SELECT datosFi_TmpDistriMercaderistas.ano, datosFi_TmpDistriMercaderistas.idPais, Max('MK-'), Max(left(idComponente,8)+'-MKD-'), datosFi_TmpDistriMercaderistas.idVersion, datosFi_TmpDistriMercaderistas.idCentro, datosFi_TmpDistriMercaderistas.idCuenta, datosFi_TmpDistriMercaderistas.idSociedad, datosFi_TmpDistriMercaderistas.idDivision, datosFi_TmpDistriMercaderistas.idLinea, datosFi_TmpDistriMercaderistas.idNegocio, datosFi_TmpDistriMercaderistas.idRubro&#xA;, -Sum(datosFi_TmpDistriMercaderistas.ene) AS 'Sum of ene'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.feb) AS 'Sum of feb'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.mar) AS 'Sum of mar'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.abr) AS 'Sum of abr'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.may) AS 'Sum of may'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.jun) AS 'Sum of jun'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.jul) AS 'Sum of jul'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.ago) AS 'Sum of ago'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.sep) AS 'Sum of sep'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.oct) AS 'Sum of oct'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.nov) AS 'Sum of nov'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.dic) AS 'Sum of dic'&#xA;, datosFi_TmpDistriMercaderistas.idAgencia&#xA;, '' --datosFi_TmpDistriMercaderistas.idCanal&#xA;, datosFi_TmpDistriMercaderistas.idCadena&#xA;, Max(''), datosFi_TmpDistriMercaderistas.idDestino, datosFi_TmpDistriMercaderistas.idGerencia, datosFi_TmpDistriMercaderistas.idFijoVariable, datosFi_TmpDistriMercaderistas.idAsignacionDirecta, datosFi_TmpDistriMercaderistas.idDriver, datosFi_TmpDistriMercaderistas.idEFin, datosFi_TmpDistriMercaderistas.idReferencia, datosFi_TmpDistriMercaderistas.B_asico_D_uplicaanexo, datosFi_TmpDistriMercaderistas.fijoVariableDirecto2, datosFi_TmpDistriMercaderistas.fijoVariableDirecto3, datosFi_TmpDistriMercaderistas.fijoVariableDirecto4, datosFi_TmpDistriMercaderistas.tmpIsUneta, datosFi_TmpDistriMercaderistas.fijoVariableDirecto5, Max('N/A')&#xA;FROM lukerFin.dbo.datosFi_TmpDistriMercaderistas datosFi_TmpDistriMercaderistas&#xA;WHERE (datosFi_TmpDistriMercaderistas.idContabilidad='MK+')&#xA;GROUP BY datosFi_TmpDistriMercaderistas.ano, datosFi_TmpDistriMercaderistas.idPais, datosFi_TmpDistriMercaderistas.idVersion, datosFi_TmpDistriMercaderistas.idCentro, datosFi_TmpDistriMercaderistas.idCuenta&#xA;, datosFi_TmpDistriMercaderistas.idSociedad, datosFi_TmpDistriMercaderistas.idDivision, datosFi_TmpDistriMercaderistas.idLinea, datosFi_TmpDistriMercaderistas.idNegocio, datosFi_TmpDistriMercaderistas.idRubro&#xA;, datosFi_TmpDistriMercaderistas.idAgencia&#xA;--, datosFi_TmpDistriMercaderistas.idCanal&#xA;, datosFi_TmpDistriMercaderistas.idCadena, datosFi_TmpDistriMercaderistas.idDestino, datosFi_TmpDistriMercaderistas.idGerencia, datosFi_TmpDistriMercaderistas.idFijoVariable, datosFi_TmpDistriMercaderistas.idAsignacionDirecta, datosFi_TmpDistriMercaderistas.idDriver, datosFi_TmpDistriMercaderistas.idEFin, datosFi_TmpDistriMercaderistas.idReferencia, datosFi_TmpDistriMercaderistas.B_asico_D_uplicaanexo, datosFi_TmpDistriMercaderistas.fijoVariableDirecto2, datosFi_TmpDistriMercaderistas.fijoVariableDirecto3, datosFi_TmpDistriMercaderistas.fijoVariableDirecto4, datosFi_TmpDistriMercaderistas.tmpIsUneta, datosFi_TmpDistriMercaderistas.fijoVariableDirecto5&#xA;&#xA;---- (tabTieMerc)--&#xA;&#xA;/**&#xA;insert into [lukerFin].[dbo].[datosFi_TmpDistriMercaderistas]&#xA;&#xA;SELECT datosFi_TmpDistriMercaderistas.ano, datosFi_TmpDistriMercaderistas.idPais, 'MK#', datosFi_TmpDistriMercaderistas.idComponente, datosFi_TmpDistriMercaderistas.idVersion, datosFi_TmpDistriMercaderistas.idCentro, datosFi_TmpDistriMercaderistas.idCuenta, datosFi_TmpDistriMercaderistas.idSociedad, datosFi_TmpDistriMercaderistas.idDivision, datosFi_TmpDistriMercaderistas.idLinea, datosFi_TmpDistriMercaderistas.idNegocio, datosFi_TmpDistriMercaderistas.idRubro&#xA;, sum(datosFi_TmpDistriMercaderistas.ene* tabTimeCom.porcentaje1)&#xA;, sum(datosFi_TmpDistriMercaderistas.feb* tabTimeCom.porcentaje2)&#xA;, sum(datosFi_TmpDistriMercaderistas.mar* tabTimeCom.porcentaje3)&#xA;, sum(datosFi_TmpDistriMercaderistas.abr* tabTimeCom.porcentaje4)&#xA;, sum(datosFi_TmpDistriMercaderistas.may* tabTimeCom.porcentaje5)&#xA;, sum(datosFi_TmpDistriMercaderistas.jun* tabTimeCom.porcentaje6)&#xA;, sum(datosFi_TmpDistriMercaderistas.jul* tabTimeCom.porcentaje7)&#xA;, sum(datosFi_TmpDistriMercaderistas.ago* tabTimeCom.porcentaje8)&#xA;, sum(datosFi_TmpDistriMercaderistas.sep* tabTimeCom.porcentaje9)&#xA;, sum(datosFi_TmpDistriMercaderistas.oct* tabTimeCom.porcentaje10)&#xA;, sum(datosFi_TmpDistriMercaderistas.nov* tabTimeCom.porcentaje11)&#xA;, sum(datosFi_TmpDistriMercaderistas.dic* tabTimeCom.porcentaje12)&#xA;, datosFi_TmpDistriMercaderistas.idAgencia, tabTimeCom.idCanalViejo&#xA;, tabTimeCom.pagador&#xA;, datosFi_TmpDistriMercaderistas.idCategoria&#xA;, datosFi_TmpDistriMercaderistas.idDestino, datosFi_TmpDistriMercaderistas.idGerencia, datosFi_TmpDistriMercaderistas.idFijoVariable, datosFi_TmpDistriMercaderistas.idAsignacionDirecta, datosFi_TmpDistriMercaderistas.idDriver, datosFi_TmpDistriMercaderistas.idEFin, datosFi_TmpDistriMercaderistas.idReferencia, datosFi_TmpDistriMercaderistas.B_asico_D_uplicaanexo, datosFi_TmpDistriMercaderistas.fijoVariableDirecto2, datosFi_TmpDistriMercaderistas.fijoVariableDirecto3, datosFi_TmpDistriMercaderistas.fijoVariableDirecto4, datosFi_TmpDistriMercaderistas.tmpIsUneta, datosFi_TmpDistriMercaderistas.fijoVariableDirecto5, datosFi_TmpDistriMercaderistas.idActividad&#xA;FROM lukerFin.dbo.datosFi_TmpDistriMercaderistas datosFi_TmpDistriMercaderistas, lkrdstr.dbo.tabTimeCom100 tabTimeCom&#xA;WHERE tabTimeCom.idAgencia = datosFi_TmpDistriMercaderistas.idAgencia AND ((datosFi_TmpDistriMercaderistas.idContabilidad='MK+'))&#xA;AND case datosFi_TmpDistriMercaderistas.idActividad when 'Team' then idCategoria else datosFi_TmpDistriMercaderistas.idActividad end  = tabTimeCom.Aliado &#xA;AND datosFi_TmpDistriMercaderistas.idVersion = tabTimeCom.idVersion&#xA;--and datosFi_TmpDistriMercaderistas.idVersion='Real'&#xA;group by datosFi_TmpDistriMercaderistas.ano, datosFi_TmpDistriMercaderistas.idPais, datosFi_TmpDistriMercaderistas.idComponente, datosFi_TmpDistriMercaderistas.idVersion, datosFi_TmpDistriMercaderistas.idCentro, datosFi_TmpDistriMercaderistas.idCuenta, datosFi_TmpDistriMercaderistas.idSociedad, datosFi_TmpDistriMercaderistas.idDivision, datosFi_TmpDistriMercaderistas.idLinea, datosFi_TmpDistriMercaderistas.idNegocio, datosFi_TmpDistriMercaderistas.idRubro&#xA;, datosFi_TmpDistriMercaderistas.idAgencia, tabTimeCom.idCanalViejo, tabTimeCom.pagador, datosFi_TmpDistriMercaderistas.idCategoria, datosFi_TmpDistriMercaderistas.idDestino, datosFi_TmpDistriMercaderistas.idGerencia, datosFi_TmpDistriMercaderistas.idFijoVariable, datosFi_TmpDistriMercaderistas.idAsignacionDirecta, datosFi_TmpDistriMercaderistas.idDriver, datosFi_TmpDistriMercaderistas.idEFin, datosFi_TmpDistriMercaderistas.idReferencia, datosFi_TmpDistriMercaderistas.B_asico_D_uplicaanexo, datosFi_TmpDistriMercaderistas.fijoVariableDirecto2, datosFi_TmpDistriMercaderistas.fijoVariableDirecto3, datosFi_TmpDistriMercaderistas.fijoVariableDirecto4, datosFi_TmpDistriMercaderistas.tmpIsUneta, datosFi_TmpDistriMercaderistas.fijoVariableDirecto5, datosFi_TmpDistriMercaderistas.idActividad&#xA;&#xA;--- contrapartida&#xA;&#xA;&#xA;insert into [lukerFin].[dbo].[datosFi_TmpDistriMercaderistas]&#xA;SELECT datosFi_TmpDistriMercaderistas.ano, datosFi_TmpDistriMercaderistas.idPais, Max('MK='), left((left(idComponente,8)+'-MKD=')+idActividad,14)+right(RTRIM(datosFi_TmpDistriMercaderistas.idCategoria),1), datosFi_TmpDistriMercaderistas.idVersion, datosFi_TmpDistriMercaderistas.idCentro, datosFi_TmpDistriMercaderistas.idCuenta, datosFi_TmpDistriMercaderistas.idSociedad, datosFi_TmpDistriMercaderistas.idDivision, datosFi_TmpDistriMercaderistas.idLinea, datosFi_TmpDistriMercaderistas.idNegocio, datosFi_TmpDistriMercaderistas.idRubro&#xA;, -Sum(datosFi_TmpDistriMercaderistas.ene) AS 'Sum of ene'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.feb) AS 'Sum of feb'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.mar) AS 'Sum of mar'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.abr) AS 'Sum of abr'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.may) AS 'Sum of may'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.jun) AS 'Sum of jun'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.jul) AS 'Sum of jul'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.ago) AS 'Sum of ago'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.sep) AS 'Sum of sep'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.oct) AS 'Sum of oct'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.nov) AS 'Sum of nov'&#xA;, -Sum(datosFi_TmpDistriMercaderistas.dic) AS 'Sum of dic'&#xA;, datosFi_TmpDistriMercaderistas.idAgencia&#xA;, '' Canal&#xA;, '' Cadena&#xA;, datosFi_TmpDistriMercaderistas.idCategoria&#xA;, datosFi_TmpDistriMercaderistas.idDestino, datosFi_TmpDistriMercaderistas.idGerencia, datosFi_TmpDistriMercaderistas.idFijoVariable, datosFi_TmpDistriMercaderistas.idAsignacionDirecta, datosFi_TmpDistriMercaderistas.idDriver, datosFi_TmpDistriMercaderistas.idEFin, datosFi_TmpDistriMercaderistas.idReferencia, datosFi_TmpDistriMercaderistas.B_asico_D_uplicaanexo, datosFi_TmpDistriMercaderistas.fijoVariableDirecto2, datosFi_TmpDistriMercaderistas.fijoVariableDirecto3, datosFi_TmpDistriMercaderistas.fijoVariableDirecto4, datosFi_TmpDistriMercaderistas.tmpIsUneta, datosFi_TmpDistriMercaderistas.fijoVariableDirecto5&#xA;, datosFi_TmpDistriMercaderistas.idActividad&#xA;FROM lukerFin.dbo.datosFi_TmpDistriMercaderistas datosFi_TmpDistriMercaderistas&#xA;WHERE (datosFi_TmpDistriMercaderistas.idContabilidad='MK#')&#xA;GROUP BY datosFi_TmpDistriMercaderistas.ano, datosFi_TmpDistriMercaderistas.idPais, datosFi_TmpDistriMercaderistas.idVersion, datosFi_TmpDistriMercaderistas.idCentro, datosFi_TmpDistriMercaderistas.idCuenta&#xA;, left((left(idComponente,8)+'-MKD=')+idActividad,14)+right(RTRIM(datosFi_TmpDistriMercaderistas.idCategoria),1)&#xA;, datosFi_TmpDistriMercaderistas.idSociedad, datosFi_TmpDistriMercaderistas.idDivision, datosFi_TmpDistriMercaderistas.idLinea, datosFi_TmpDistriMercaderistas.idNegocio, datosFi_TmpDistriMercaderistas.idRubro, datosFi_TmpDistriMercaderistas.idAgencia&#xA;--, datosFi_TmpDistriMercaderistas.idCanal, datosFi_TmpDistriMercaderistas.idCadena&#xA;, datosFi_TmpDistriMercaderistas.idDestino, datosFi_TmpDistriMercaderistas.idGerencia, datosFi_TmpDistriMercaderistas.idFijoVariable, datosFi_TmpDistriMercaderistas.idAsignacionDirecta, datosFi_TmpDistriMercaderistas.idDriver, datosFi_TmpDistriMercaderistas.idEFin, datosFi_TmpDistriMercaderistas.idReferencia, datosFi_TmpDistriMercaderistas.B_asico_D_uplicaanexo, datosFi_TmpDistriMercaderistas.fijoVariableDirecto2, datosFi_TmpDistriMercaderistas.fijoVariableDirecto3, datosFi_TmpDistriMercaderistas.fijoVariableDirecto4, datosFi_TmpDistriMercaderistas.tmpIsUneta, datosFi_TmpDistriMercaderistas.fijoVariableDirecto5&#xA;, datosFi_TmpDistriMercaderistas.idActividad&#xA;, datosFi_TmpDistriMercaderistas.idCategoria&#xA;**/&#xA;&#xA;insert into [lukerFin].[dbo].[datosFi]&#xA;select * from lukerFin.dbo.datosFi_TmpDistriMercaderistas&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\PreDistri Mercaderista Driver"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{15EF3A40-A638-45C3-84B1-A64B7CB392DE}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="PreDistri Mercaderista Driver"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol &#xA;WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;&#xA;update datosFiN set&#xA; datosFiN.Aliado= zProductHierarchyNodeN5CatAli.Aliado&#xA;FROM lkrdstr.dbo.datosFiN datosFiN, lkrdstr.dbo.zProductHierarchyNodeN5CatAli zProductHierarchyNodeN5CatAli&#xA;WHERE datosFiN.Categoria = zProductHierarchyNodeN5CatAli.Categoria &#xA;--AND ((datosFiN.idVersion='real') &#xA;AND ((datosFiN.Categoria&lt;&gt;' ') &#xA;AND (datosFiN.idRubro Like '%MK') AND (datosFiN.Aliado=''))&#xA;&#xA;&#xA;DELETE FROM [lkrdstr].[dbo].[prePorcentajesMercaderistaAliadoRecalc]&#xA;insert into [lkrdstr].[dbo].[prePorcentajesMercaderistaAliadoRecalc]&#xA;SELECT DISTINCT prePorcentajesMercaderistaAliado.ano, driverDetalleValoresNservMercImpact.idVersion, driverDetalleValoresNservMercImpact.SalesOffice, prePorcentajesMercaderistaAliado.Aliado, prePorcentajesMercaderistaAliado.Categoria&#xA;, prePorcentajesMercaderistaAliado.P1&#x9;, 0.0 AS 'IMP1'&#x9;&#x9;, 0.0 AS 'G1'&#x9;, 0.0 AS 'OW1'&#x9;, 0.0 AS 'EOW1'&#x9;&#x9;, 0.0 AS 'nwP1',0&#xA;, prePorcentajesMercaderistaAliado.P2&#x9;, 0.0 AS 'IMP2'&#x9;&#x9;, 0.0 AS 'G2'&#x9;, 0.0 AS 'OW2'&#x9;, 0.0 AS 'EOW2'&#x9;&#x9;, 0.0 AS 'nwP2',0&#xA;, prePorcentajesMercaderistaAliado.P3&#x9;, 0.0 AS 'IMP3'&#x9;&#x9;, 0.0 AS 'G3'&#x9;, 0.0 AS 'OW3'&#x9;, 0.0 AS 'EOW3'&#x9;&#x9;, 0.0 AS 'nwP3',0&#xA;, prePorcentajesMercaderistaAliado.P4&#x9;, 0.0 AS 'IMP4'&#x9;&#x9;, 0.0 AS 'G4'&#x9;, 0.0 AS 'OW4'&#x9;, 0.0 AS 'EOW4'&#x9;&#x9;, 0.0 AS 'nwP4',0&#xA;, prePorcentajesMercaderistaAliado.P5&#x9;, 0.0 AS 'IMP5'&#x9;&#x9;, 0.0 AS 'G5'&#x9;, 0.0 AS 'OW5'&#x9;, 0.0 AS 'EOW5'&#x9;&#x9;, 0.0 AS 'nwP5',0&#xA;, prePorcentajesMercaderistaAliado.P6&#x9;, 0.0 AS 'IMP6'&#x9;&#x9;, 0.0 AS 'G6'&#x9;, 0.0 AS 'OW6'&#x9;, 0.0 AS 'EOW6'&#x9;&#x9;, 0.0 AS 'nwP6',0&#xA;, prePorcentajesMercaderistaAliado.P7&#x9;, 0.0 AS 'IMP7'&#x9;&#x9;, 0.0 AS 'G7'&#x9;, 0.0 AS 'OW7'&#x9;, 0.0 AS 'EOW7'&#x9;&#x9;, 0.0 AS 'nwP7',0&#xA;, prePorcentajesMercaderistaAliado.P8&#x9;, 0.0 AS 'IMP8'&#x9;&#x9;, 0.0 AS 'G8'&#x9;, 0.0 AS 'OW8'&#x9;, 0.0 AS 'EOW8'&#x9;&#x9;, 0.0 AS 'nwP8',0&#xA;, prePorcentajesMercaderistaAliado.P9&#x9;, 0.0 AS 'IMP9'&#x9;&#x9;, 0.0 AS 'G9'&#x9;, 0.0 AS 'OW9'&#x9;, 0.0 AS 'EOW9'&#x9;&#x9;, 0.0 AS 'nwP9',0&#xA;, prePorcentajesMercaderistaAliado.P10&#x9;, 0.0 AS 'IMP10'&#x9;, 0.0 AS 'G10'&#x9;, 0.0 AS 'OW10'&#x9;, 0.0 AS 'EOW10'&#x9;, 0.0 AS 'nwP10',0&#xA;, prePorcentajesMercaderistaAliado.P11&#x9;, 0.0 AS 'IMP11'&#x9;, 0.0 AS 'G11'&#x9;, 0.0 AS 'OW11'&#x9;, 0.0 AS 'EOW11'&#x9;, 0.0 AS 'nwP11',0&#xA;, prePorcentajesMercaderistaAliado.P12&#x9;, 0.0 AS 'IMP12'&#x9;, 0.0 AS 'G12'&#x9;, 0.0 AS 'OW12'&#x9;, 0.0 AS 'EOW12'&#x9;, 0.0 AS 'nwP12',0&#xA;FROM  lkrdstr.dbo.driverDetalleValoresNservMercImpact driverDetalleValoresNservMercImpact&#xA;&#x9;, lkrdstr.dbo.prePorcentajesMercaderistaAliado prePorcentajesMercaderistaAliado&#xA;WHERE driverDetalleValoresNservMercImpact.ano = prePorcentajesMercaderistaAliado.ano&#xA;and driverDetalleValoresNservMercImpact.ano =@x_ano&#xA;ORDER BY 1,2,3,4,5&#xA;&#xA;insert into lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc&#xA;SELECT DISTINCT ano, idVersion, '00', Aliado, Categoria&#xA;, P1, IMP1, G1, OW1, EOW1, nwP1,Dir1&#xA;, P2, IMP2, G2, OW2, EOW2, nwP2,Dir2&#xA;, P3, IMP3, G3, OW3, EOW3, nwP3,Dir3&#xA;, P4, IMP4, G4, OW4, EOW4, nwP4,Dir4&#xA;, P5, IMP5, G5, OW5, EOW5, nwP5,Dir5&#xA;, P6, IMP6, G6, OW6, EOW6, nwP6,Dir6&#xA;, P7, IMP7, G7, OW7, EOW7, nwP7,Dir7&#xA;, P8, IMP8, G8, OW8, EOW8, nwP8,Dir8&#xA;, P9, IMP9, G9, OW9, EOW9, nwP9,Dir9&#xA;, P10, IMP10, G10, OW10, EOW10, nwP10,Dir10&#xA;, P11, IMP11, G11, OW11, EOW11, nwP11,Dir11&#xA;, P12, IMP12, G12, OW12, EOW12, nwP12,Dir12&#xA;FROM lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc prePorcentajesMercaderistaAliadoRecalc&#xA;&#xA;insert into lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc&#xA;SELECT DISTINCT ano, idVersion, '', Aliado, Categoria&#xA;, P1, IMP1, G1, OW1, EOW1, nwP1,Dir1&#xA;, P2, IMP2, G2, OW2, EOW2, nwP2,Dir2&#xA;, P3, IMP3, G3, OW3, EOW3, nwP3,Dir3&#xA;, P4, IMP4, G4, OW4, EOW4, nwP4,Dir4&#xA;, P5, IMP5, G5, OW5, EOW5, nwP5,Dir5&#xA;, P6, IMP6, G6, OW6, EOW6, nwP6,Dir6&#xA;, P7, IMP7, G7, OW7, EOW7, nwP7,Dir7&#xA;, P8, IMP8, G8, OW8, EOW8, nwP8,Dir8&#xA;, P9, IMP9, G9, OW9, EOW9, nwP9,Dir9&#xA;, P10, IMP10, G10, OW10, EOW10, nwP10,Dir10&#xA;, P11, IMP11, G11, OW11, EOW11, nwP11,Dir11&#xA;, P12, IMP12, G12, OW12, EOW12, nwP12,Dir12&#xA;FROM lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc prePorcentajesMercaderistaAliadoRecalc&#xA;&#xA;update prePorcentajesMercaderistaAliadoRecalc set&#xA;  prePorcentajesMercaderistaAliadoRecalc.Dir1= datosFiNGastoMercaderistaAgenciaDirecto.ene&#xA;, prePorcentajesMercaderistaAliadoRecalc.Dir2= datosFiNGastoMercaderistaAgenciaDirecto.feb&#xA;, prePorcentajesMercaderistaAliadoRecalc.Dir3= datosFiNGastoMercaderistaAgenciaDirecto.mar&#xA;, prePorcentajesMercaderistaAliadoRecalc.Dir4= datosFiNGastoMercaderistaAgenciaDirecto.abr&#xA;, prePorcentajesMercaderistaAliadoRecalc.Dir5= datosFiNGastoMercaderistaAgenciaDirecto.may&#xA;, prePorcentajesMercaderistaAliadoRecalc.Dir6= datosFiNGastoMercaderistaAgenciaDirecto.jun&#xA;, prePorcentajesMercaderistaAliadoRecalc.Dir7= datosFiNGastoMercaderistaAgenciaDirecto.jul&#xA;, prePorcentajesMercaderistaAliadoRecalc.Dir8= datosFiNGastoMercaderistaAgenciaDirecto.ago&#xA;, prePorcentajesMercaderistaAliadoRecalc.Dir9= datosFiNGastoMercaderistaAgenciaDirecto.sep&#xA;, prePorcentajesMercaderistaAliadoRecalc.Dir10= datosFiNGastoMercaderistaAgenciaDirecto.oct&#xA;, prePorcentajesMercaderistaAliadoRecalc.Dir11= datosFiNGastoMercaderistaAgenciaDirecto.nov&#xA;, prePorcentajesMercaderistaAliadoRecalc.Dir12= datosFiNGastoMercaderistaAgenciaDirecto.dic&#xA;&#xA;FROM lkrdstr.dbo.datosFiNGastoMercaderistaAgenciaDirecto datosFiNGastoMercaderistaAgenciaDirecto, lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc prePorcentajesMercaderistaAliadoRecalc&#xA;WHERE datosFiNGastoMercaderistaAgenciaDirecto.Aliado = prePorcentajesMercaderistaAliadoRecalc.Aliado &#xA;AND datosFiNGastoMercaderistaAgenciaDirecto.ano = prePorcentajesMercaderistaAliadoRecalc.ano &#xA;AND datosFiNGastoMercaderistaAgenciaDirecto.Categoria = prePorcentajesMercaderistaAliadoRecalc.Categoria &#xA;AND datosFiNGastoMercaderistaAgenciaDirecto.idVersion = prePorcentajesMercaderistaAliadoRecalc.idVersion &#xA;AND prePorcentajesMercaderistaAliadoRecalc.SalesOffice = datosFiNGastoMercaderistaAgenciaDirecto.idAgencia&#xA;&#xA;-- (impacto driver mes)--&#xA;UPDATE prePorcentajesMercaderistaAliadoRecalc set&#xA;  prePorcentajesMercaderistaAliadoRecalc.IMP1&#x9;= driverDetalleValoresNservMercImpact.ene&#xA;, prePorcentajesMercaderistaAliadoRecalc.IMP2&#x9;= driverDetalleValoresNservMercImpact.feb&#xA;, prePorcentajesMercaderistaAliadoRecalc.IMP3&#x9;= driverDetalleValoresNservMercImpact.mar&#xA;, prePorcentajesMercaderistaAliadoRecalc.IMP4&#x9;= driverDetalleValoresNservMercImpact.abr&#xA;, prePorcentajesMercaderistaAliadoRecalc.IMP5&#x9;= driverDetalleValoresNservMercImpact.may&#xA;, prePorcentajesMercaderistaAliadoRecalc.IMP6&#x9;= driverDetalleValoresNservMercImpact.jun&#xA;, prePorcentajesMercaderistaAliadoRecalc.IMP7&#x9;= driverDetalleValoresNservMercImpact.jul&#xA;, prePorcentajesMercaderistaAliadoRecalc.IMP8&#x9;= driverDetalleValoresNservMercImpact.ago&#xA;, prePorcentajesMercaderistaAliadoRecalc.IMP9&#x9;= driverDetalleValoresNservMercImpact.sep&#xA;, prePorcentajesMercaderistaAliadoRecalc.IMP10&#x9;= driverDetalleValoresNservMercImpact.oct&#xA;, prePorcentajesMercaderistaAliadoRecalc.IMP11&#x9;= driverDetalleValoresNservMercImpact.nov&#xA;, prePorcentajesMercaderistaAliadoRecalc.IMP12&#x9;= driverDetalleValoresNservMercImpact.dic&#xA;FROM lkrdstr.dbo.driverDetalleValoresNservMercImpact driverDetalleValoresNservMercImpact&#xA;   , lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc prePorcentajesMercaderistaAliadoRecalc&#xA;WHERE driverDetalleValoresNservMercImpact.Aliado = prePorcentajesMercaderistaAliadoRecalc.Aliado &#xA;AND driverDetalleValoresNservMercImpact.ano = prePorcentajesMercaderistaAliadoRecalc.ano &#xA;AND driverDetalleValoresNservMercImpact.Categoria = prePorcentajesMercaderistaAliadoRecalc.Categoria &#xA;AND driverDetalleValoresNservMercImpact.idVersion = prePorcentajesMercaderistaAliadoRecalc.idVersion &#xA;AND driverDetalleValoresNservMercImpact.SalesOffice = prePorcentajesMercaderistaAliadoRecalc.SalesOffice&#xA;&#xA;update prePorcentajesMercaderistaAliadoRecalc set  prePorcentajesMercaderistaAliadoRecalc.IMP1=1, prePorcentajesMercaderistaAliadoRecalc.IMP2=1, prePorcentajesMercaderistaAliadoRecalc.IMP3=1, prePorcentajesMercaderistaAliadoRecalc.IMP4=1, prePorcentajesMercaderistaAliadoRecalc.IMP5=1, prePorcentajesMercaderistaAliadoRecalc.IMP6=1, prePorcentajesMercaderistaAliadoRecalc.IMP7=1, prePorcentajesMercaderistaAliadoRecalc.IMP8=1, prePorcentajesMercaderistaAliadoRecalc.IMP9=1, prePorcentajesMercaderistaAliadoRecalc.IMP10=1, prePorcentajesMercaderistaAliadoRecalc.IMP11=1, prePorcentajesMercaderistaAliadoRecalc.IMP12=1&#xA;FROM lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc prePorcentajesMercaderistaAliadoRecalc&#xA;WHERE (prePorcentajesMercaderistaAliadoRecalc.SalesOffice='00') OR (prePorcentajesMercaderistaAliadoRecalc.SalesOffice='')&#xA;&#xA;-- Distri 1 gasto y ow&#xA;update prePorcentajesMercaderistaAliadoRecalc set&#xA;  prePorcentajesMercaderistaAliadoRecalc.G1&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa1&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.ene&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa1&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P1&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP1&#x9;) end&#xA;, prePorcentajesMercaderistaAliadoRecalc.G2&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa2&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.feb&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa2&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P2&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP2&#x9;) end&#xA;, prePorcentajesMercaderistaAliadoRecalc.G3&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa3&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.mar&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa3&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P3&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP3&#x9;) end&#xA;, prePorcentajesMercaderistaAliadoRecalc.G4&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa4&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.abr&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa4&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P4&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP4&#x9;) end&#xA;, prePorcentajesMercaderistaAliadoRecalc.G5&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa5&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.may&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa5&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P5&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP5&#x9;) end&#xA;, prePorcentajesMercaderistaAliadoRecalc.G6&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa6&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.jun&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa6&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P6&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP6&#x9;) end&#xA;, prePorcentajesMercaderistaAliadoRecalc.G7&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa7&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.jul&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa7&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P7&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP7&#x9;) end&#xA;, prePorcentajesMercaderistaAliadoRecalc.G8&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa8&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.ago&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa8&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P8&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP8&#x9;) end&#xA;, prePorcentajesMercaderistaAliadoRecalc.G9&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa9&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.sep&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa9&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P9&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP9&#x9;) end&#xA;, prePorcentajesMercaderistaAliadoRecalc.G10&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa10&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.oct&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa10&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P10&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP10&#x9;) end&#xA;, prePorcentajesMercaderistaAliadoRecalc.G11&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa11&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.nov&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa11&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P11&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP11&#x9;) end&#xA;, prePorcentajesMercaderistaAliadoRecalc.G12&#x9;= case prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa12&#x9;when 0 then 0 else (datosFiNGastoMercaderistaAgencia.dic&#x9;/ prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.tParticipa12&#x9;) * (prePorcentajesMercaderistaAliadoRecalc.P12&#x9;*prePorcentajesMercaderistaAliadoRecalc.IMP12&#x9;) end&#xA;&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW1    = case prePorcentajesMercaderistaAliadoRecalc.IMP1&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.ene&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P1&#x9;/ case tParticipa1&#x9;when 0 then 1 else tParticipa1&#x9; end&#x9;end&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW2    = case prePorcentajesMercaderistaAliadoRecalc.IMP2&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.feb&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P2&#x9;/ case tParticipa2&#x9;when 0 then 1 else tParticipa2&#x9; end&#x9;end&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW3    = case prePorcentajesMercaderistaAliadoRecalc.IMP3&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.mar&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P3&#x9;/ case tParticipa3&#x9;when 0 then 1 else tParticipa3&#x9; end&#x9;end&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW4    = case prePorcentajesMercaderistaAliadoRecalc.IMP4&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.abr&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P4&#x9;/ case tParticipa4&#x9;when 0 then 1 else tParticipa4&#x9; end&#x9;end&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW5    = case prePorcentajesMercaderistaAliadoRecalc.IMP5&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.may&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P5&#x9;/ case tParticipa5&#x9;when 0 then 1 else tParticipa5&#x9; end&#x9;end&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW6    = case prePorcentajesMercaderistaAliadoRecalc.IMP6&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.jun&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P6&#x9;/ case tParticipa6&#x9;when 0 then 1 else tParticipa6&#x9; end&#x9;end&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW7    = case prePorcentajesMercaderistaAliadoRecalc.IMP7&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.jul&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P7&#x9;/ case tParticipa7&#x9;when 0 then 1 else tParticipa7&#x9; end&#x9;end&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW8    = case prePorcentajesMercaderistaAliadoRecalc.IMP8&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.ago&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P8&#x9;/ case tParticipa8&#x9;when 0 then 1 else tParticipa8&#x9; end&#x9;end&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW9    = case prePorcentajesMercaderistaAliadoRecalc.IMP9&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.sep&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P9&#x9;/ case tParticipa9&#x9;when 0 then 1 else tParticipa9&#x9; end&#x9;end&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW10   = case prePorcentajesMercaderistaAliadoRecalc.IMP10&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.oct&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P10&#x9;/ case tParticipa10 when 0 then 1 else tParticipa10&#x9; end&#x9;end&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW11   = case prePorcentajesMercaderistaAliadoRecalc.IMP11&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.nov&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P11&#x9;/ case tParticipa11 when 0 then 1 else tParticipa11&#x9; end&#x9;end&#xA;, prePorcentajesMercaderistaAliadoRecalc.OW12   = case prePorcentajesMercaderistaAliadoRecalc.IMP12&#x9;when 1 then 0 else  datosFiNGastoMercaderistaAgencia.dic&#x9;*&#x9;prePorcentajesMercaderistaAliadoRecalc.P12&#x9;/ case tParticipa12 when 0 then 1 else tParticipa12&#x9; end&#x9;end&#xA;&#xA;FROM lkrdstr.dbo.datosFiNGastoMercaderistaAgencia datosFiNGastoMercaderistaAgencia&#xA;   , lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc prePorcentajesMercaderistaAliadoRecalc&#xA;   , lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan&#xA;WHERE prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.ano = prePorcentajesMercaderistaAliadoRecalc.ano &#xA;  AND prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.idVersion = prePorcentajesMercaderistaAliadoRecalc.idVersion &#xA;  AND prePorcentajesMercaderistaAliadoRecalcTotPorcParticipan.SalesOffice = prePorcentajesMercaderistaAliadoRecalc.SalesOffice &#xA;  AND datosFiNGastoMercaderistaAgencia.ano = prePorcentajesMercaderistaAliadoRecalc.ano &#xA;  AND datosFiNGastoMercaderistaAgencia.idVersion = prePorcentajesMercaderistaAliadoRecalc.idVersion &#xA;  AND prePorcentajesMercaderistaAliadoRecalc.SalesOffice = datosFiNGastoMercaderistaAgencia.idAgencia&#xA;&#xA;&#xA;&#xA;&#xA;  --- Explo ow&#xA;&#xA;  update prePorcentajesMercaderistaAliadoRecalc set &#xA;    prePorcentajesMercaderistaAliadoRecalc.EOW1&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG1&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW1&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG1&#x9;&#x9;* prePorcentajesMercaderistaAliadoRecalc.G1&#x9;&#x9;end&#xA;,   prePorcentajesMercaderistaAliadoRecalc.EOW2&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG2&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW2&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG2&#x9;&#x9;* prePorcentajesMercaderistaAliadoRecalc.G2&#x9;&#x9;end&#xA;,   prePorcentajesMercaderistaAliadoRecalc.EOW3&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG3&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW3&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG3&#x9;&#x9;* prePorcentajesMercaderistaAliadoRecalc.G3&#x9;&#x9;end&#xA;,   prePorcentajesMercaderistaAliadoRecalc.EOW4&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG4&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW4&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG4&#x9;&#x9;* prePorcentajesMercaderistaAliadoRecalc.G4&#x9;&#x9;end&#xA;,   prePorcentajesMercaderistaAliadoRecalc.EOW5&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG5&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW5&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG5&#x9;&#x9;* prePorcentajesMercaderistaAliadoRecalc.G5&#x9;&#x9;end&#xA;,   prePorcentajesMercaderistaAliadoRecalc.EOW6&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG6&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW6&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG6&#x9;&#x9;* prePorcentajesMercaderistaAliadoRecalc.G6&#x9;&#x9;end&#xA;,   prePorcentajesMercaderistaAliadoRecalc.EOW7&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG7&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW7&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG7&#x9;&#x9;* prePorcentajesMercaderistaAliadoRecalc.G7&#x9;&#x9;end&#xA;,   prePorcentajesMercaderistaAliadoRecalc.EOW8&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG8&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW8&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG8&#x9;&#x9;* prePorcentajesMercaderistaAliadoRecalc.G8&#x9;&#x9;end&#xA;,   prePorcentajesMercaderistaAliadoRecalc.EOW9&#x9;&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG9&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW9&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG9&#x9;&#x9;* prePorcentajesMercaderistaAliadoRecalc.G9&#x9;&#x9;end&#xA;,   prePorcentajesMercaderistaAliadoRecalc.EOW10&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG10&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW10&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG10&#x9;* prePorcentajesMercaderistaAliadoRecalc.G10&#x9;end&#xA;,   prePorcentajesMercaderistaAliadoRecalc.EOW11&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG11&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW11&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG11&#x9;* prePorcentajesMercaderistaAliadoRecalc.G11&#x9;end&#xA;,   prePorcentajesMercaderistaAliadoRecalc.EOW12&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstCat.tG12&#x9;when 0 then 0 else prePorcentajesMercaderistaAliadoRecalcTGstCat.tOW12&#x9;/ prePorcentajesMercaderistaAliadoRecalcTGstCat.tG12&#x9;* prePorcentajesMercaderistaAliadoRecalc.G12&#x9;end&#xA;FROM lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc prePorcentajesMercaderistaAliadoRecalc&#xA;   , lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalcTGstCat prePorcentajesMercaderistaAliadoRecalcTGstCat&#xA;WHERE prePorcentajesMercaderistaAliadoRecalcTGstCat.Aliado = prePorcentajesMercaderistaAliadoRecalc.Aliado &#xA;AND prePorcentajesMercaderistaAliadoRecalcTGstCat.ano = prePorcentajesMercaderistaAliadoRecalc.ano &#xA;AND prePorcentajesMercaderistaAliadoRecalcTGstCat.Categoria = prePorcentajesMercaderistaAliadoRecalc.Categoria &#xA;AND prePorcentajesMercaderistaAliadoRecalcTGstCat.idVersion = prePorcentajesMercaderistaAliadoRecalc.idVersion &#xA;&#xA;--*************&#xA;---- (ExploDir)--&#xA;--*************&#xA;update prePorcentajesMercaderistaAliadoRecalc set&#xA;  prePorcentajesMercaderistaAliadoRecalc.EOW1&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW1&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir1u&#x9;&#x9;*prePorcentajesMercaderistaAliadoRecalc.P1&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir1&#xA;, prePorcentajesMercaderistaAliadoRecalc.EOW2&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW2&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir2u&#x9;&#x9;*prePorcentajesMercaderistaAliadoRecalc.P2&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir2&#xA;, prePorcentajesMercaderistaAliadoRecalc.EOW3&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW3&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir3u&#x9;&#x9;*prePorcentajesMercaderistaAliadoRecalc.P3&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir3&#xA;, prePorcentajesMercaderistaAliadoRecalc.EOW4&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW4&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir4u&#x9;&#x9;*prePorcentajesMercaderistaAliadoRecalc.P4&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir4&#xA;, prePorcentajesMercaderistaAliadoRecalc.EOW5&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW5&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir5u&#x9;&#x9;*prePorcentajesMercaderistaAliadoRecalc.P5&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir5&#xA;, prePorcentajesMercaderistaAliadoRecalc.EOW6&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW6&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir6u&#x9;&#x9;*prePorcentajesMercaderistaAliadoRecalc.P6&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir6&#xA;, prePorcentajesMercaderistaAliadoRecalc.EOW7&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW7&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir7u&#x9;&#x9;*prePorcentajesMercaderistaAliadoRecalc.P7&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir7&#xA;, prePorcentajesMercaderistaAliadoRecalc.EOW8&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW8&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir8u&#x9;&#x9;*prePorcentajesMercaderistaAliadoRecalc.P8&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir7&#xA;, prePorcentajesMercaderistaAliadoRecalc.EOW9&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW9&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir9u&#x9;&#x9;*prePorcentajesMercaderistaAliadoRecalc.P9&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir9&#xA;, prePorcentajesMercaderistaAliadoRecalc.EOW10&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW10&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir10u&#x9;*prePorcentajesMercaderistaAliadoRecalc.P10&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir10&#xA;, prePorcentajesMercaderistaAliadoRecalc.EOW11&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW11&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir11u&#x9;*prePorcentajesMercaderistaAliadoRecalc.P11&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir11&#xA;, prePorcentajesMercaderistaAliadoRecalc.EOW12&#x9;= prePorcentajesMercaderistaAliadoRecalc.EOW12&#x9;+(prePorcentajesMercaderistaAliadoRecalcFactorDirecto.Dir12u&#x9;*prePorcentajesMercaderistaAliadoRecalc.P12&#x9;)-prePorcentajesMercaderistaAliadoRecalc.Dir12&#xA;&#xA;FROM lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc prePorcentajesMercaderistaAliadoRecalc, lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalcFactorDirecto prePorcentajesMercaderistaAliadoRecalcFactorDirecto&#xA;WHERE prePorcentajesMercaderistaAliadoRecalcFactorDirecto.ano = prePorcentajesMercaderistaAliadoRecalc.ano AND prePorcentajesMercaderistaAliadoRecalcFactorDirecto.idVersion = prePorcentajesMercaderistaAliadoRecalc.idVersion &#xA;AND prePorcentajesMercaderistaAliadoRecalcFactorDirecto.SalesOffice = prePorcentajesMercaderistaAliadoRecalc.SalesOffice&#xA;&#xA;--- nw porcent&#xA;update  prePorcentajesMercaderistaAliadoRecalc set&#xA; prePorcentajesMercaderistaAliadoRecalc.nwP1&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG1&#x9;&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G1&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW1&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG1+tEOW1&#x9;)&#x9;end&#xA;,prePorcentajesMercaderistaAliadoRecalc.nwP2&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG2&#x9;&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G2&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW2&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG2+tEOW2&#x9;)&#x9;end&#xA;,prePorcentajesMercaderistaAliadoRecalc.nwP3&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG3&#x9;&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G3&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW3&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG3+tEOW3&#x9;)&#x9;end&#xA;,prePorcentajesMercaderistaAliadoRecalc.nwP4&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG4&#x9;&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G4&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW4&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG4+tEOW4&#x9;)&#x9;end&#xA;,prePorcentajesMercaderistaAliadoRecalc.nwP5&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG5&#x9;&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G5&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW5&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG5+tEOW5&#x9;)&#x9;end&#xA;,prePorcentajesMercaderistaAliadoRecalc.nwP6&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG6&#x9;&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G6&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW6&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG6+tEOW6&#x9;)&#x9;end&#xA;,prePorcentajesMercaderistaAliadoRecalc.nwP7&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG7&#x9;&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G7&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW7&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG7+tEOW7&#x9;)&#x9;end&#xA;,prePorcentajesMercaderistaAliadoRecalc.nwP8&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG8&#x9;&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G8&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW8&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG8+tEOW8&#x9;)&#x9;end&#xA;,prePorcentajesMercaderistaAliadoRecalc.nwP9&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG9&#x9;&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G9&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW9&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG9+tEOW9&#x9;)&#x9;end&#xA;,prePorcentajesMercaderistaAliadoRecalc.nwP10&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG10&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G10&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW10&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG10+tEOW10)&#x9;end&#xA;,prePorcentajesMercaderistaAliadoRecalc.nwP11&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG11&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G11&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW11&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG11+tEOW11)&#x9;end&#xA;,prePorcentajesMercaderistaAliadoRecalc.nwP12&#x9;= case prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG12&#x9;when 0 then 0 else (prePorcentajesMercaderistaAliadoRecalc.G12&#x9;+prePorcentajesMercaderistaAliadoRecalc.EOW12&#x9;)/(prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.tG12+tEOW12)&#x9;end&#xA;&#xA;FROM lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc prePorcentajesMercaderistaAliadoRecalc&#xA;, lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalcTGstVerOficina prePorcentajesMercaderistaAliadoRecalcTGstVerOficina&#xA;WHERE prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.ano = prePorcentajesMercaderistaAliadoRecalc.ano &#xA;AND prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.idVersion = prePorcentajesMercaderistaAliadoRecalc.idVersion&#xA;AND prePorcentajesMercaderistaAliadoRecalcTGstVerOficina.SalesOffice = prePorcentajesMercaderistaAliadoRecalc.SalesOffice&#xA;&#xA;update prePorcentajesMercaderistaAliadoRecalc set &#xA;  prePorcentajesMercaderistaAliadoRecalc.nwP1=&#x9;prePorcentajesMercaderistaAliadoRecalc.P1&#xA;, prePorcentajesMercaderistaAliadoRecalc.nwP2=&#x9;prePorcentajesMercaderistaAliadoRecalc.P2&#xA;, prePorcentajesMercaderistaAliadoRecalc.nwP3=&#x9;prePorcentajesMercaderistaAliadoRecalc.P3&#xA;, prePorcentajesMercaderistaAliadoRecalc.nwP4=&#x9;prePorcentajesMercaderistaAliadoRecalc.P4&#xA;, prePorcentajesMercaderistaAliadoRecalc.nwP5=&#x9;prePorcentajesMercaderistaAliadoRecalc.P5&#xA;, prePorcentajesMercaderistaAliadoRecalc.nwP6=&#x9;prePorcentajesMercaderistaAliadoRecalc.P6&#xA;, prePorcentajesMercaderistaAliadoRecalc.nwP7=&#x9;prePorcentajesMercaderistaAliadoRecalc.P7&#xA;, prePorcentajesMercaderistaAliadoRecalc.nwP8=&#x9;prePorcentajesMercaderistaAliadoRecalc.P8&#xA;, prePorcentajesMercaderistaAliadoRecalc.nwP9=&#x9;prePorcentajesMercaderistaAliadoRecalc.P9&#xA;, prePorcentajesMercaderistaAliadoRecalc.nwP10=&#x9;prePorcentajesMercaderistaAliadoRecalc.P10&#xA;, prePorcentajesMercaderistaAliadoRecalc.nwP11=&#x9;prePorcentajesMercaderistaAliadoRecalc.P11&#xA;, prePorcentajesMercaderistaAliadoRecalc.nwP12=&#x9;prePorcentajesMercaderistaAliadoRecalc.P12&#xA;&#xA;FROM lkrdstr.dbo.prePorcentajesMercaderistaAliadoRecalc prePorcentajesMercaderistaAliadoRecalc&#xA;WHERE (prePorcentajesMercaderistaAliadoRecalc.SalesOffice='') OR (prePorcentajesMercaderistaAliadoRecalc.SalesOffice='00')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tarea Ejecutar SQL"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{60D415ED-59B3-4EE0-ACF7-BEF88B5E4D36}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea Ejecutar SQL"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{9FDF82CD-DAD8-42D1-8ABD-94517736CB97}"
          SQLTask:SqlStatementSource="USE [lukerFin]&#xA;GO&#xA;truncate table [dbo].[datosFi]&#xA;go&#xA;insert into [dbo].[datosFi]&#xA;SELECT *&#xA;  FROM [dbo].[datosFiMo18]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\tcc expl 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A4708532-C846-4991-8205-7F83F57E9C54}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="tcc expl 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[datosFiN_tabcucomTmp]    Script Date: 2/22/2017 4:51:38 PM ******/&#xA;DROP TABLE [dbo].[datosFiN_tabcucomTmp]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[datosFiN_tabcucomTmp]    Script Date: 2/22/2017 4:51:38 PM ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;&#xA;CREATE TABLE [dbo].[datosFiN_tabcucomTmp](&#xA;&#x9;[ano] [int] NULL,&#xA;&#x9;[idPais] [varchar](2) NULL,&#xA;&#x9;[idVersion] [varchar](15) NULL,&#xA;&#x9;[idComponente] [varchar](15) NULL,&#xA;&#x9;[consDistri] [varchar](6) NULL,&#xA;&#x9;[consecutivo] [int] NULL,&#xA;&#x9;[idCentro] [varchar](10) NULL,&#xA;&#x9;[idCuenta] [varchar](10) NULL,&#xA;&#x9;[idSociedad] [varchar](10) NULL,&#xA;&#x9;[idDivision] [varchar](2) NULL,&#xA;&#x9;[idNegocio] [varchar](20) NULL,&#xA;&#x9;[idEFin] [varchar](10) NULL,&#xA;&#x9;[B_asico_D_uplicaanexo] [varchar](1) NULL,&#xA;&#x9;[idRubro] [varchar](15) NULL,&#xA;&#x9;[idDriver] [varchar](10) NULL,&#xA;&#x9;[ene] [float] NULL,&#xA;&#x9;[feb] [float] NULL,&#xA;&#x9;[mar] [float] NULL,&#xA;&#x9;[abr] [float] NULL,&#xA;&#x9;[may] [float] NULL,&#xA;&#x9;[jun] [float] NULL,&#xA;&#x9;[jul] [float] NULL,&#xA;&#x9;[ago] [float] NULL,&#xA;&#x9;[sep] [float] NULL,&#xA;&#x9;[oct] [float] NULL,&#xA;&#x9;[nov] [float] NULL,&#xA;&#x9;[dic] [float] NULL,&#xA;&#x9;[idOrgVenta] [varchar](4) NULL,&#xA;&#x9;[idAgencia] [varchar](2) NULL,&#xA;&#x9;[idCanal] [varchar](2) NULL,&#xA;&#x9;[idCustomerGroup] [varchar](2) NULL,&#xA;&#x9;[Aliado] [varchar](40) NULL,&#xA;&#x9;[Categoria] [varchar](40) NULL,&#xA;&#x9;[Marca] [varchar](40) NULL,&#xA;&#x9;[ProductHierarchy] [varchar](18) NULL,&#xA;&#x9;[pagador] [varchar](10) NULL,&#xA;&#x9;[idReferencia] [varchar](18) NULL,&#xA;&#x9;[idDestino] [varchar](20) NULL,&#xA;&#x9;[idAsignacionDirecta] [varchar](11) NULL,&#xA;&#x9;[fvd1] [varchar](1) NULL,&#xA;&#x9;[fvd2] [varchar](1) NULL,&#xA;&#x9;[fvd3] [varchar](1) NULL,&#xA;&#x9;[fvd4] [varchar](1) NULL,&#xA;&#x9;[fvd5] [varchar](1) NULL,&#xA;&#x9;[idCanalViejo] [varchar](2) NULL&#xA;) ON [PRIMARY]&#xA;&#xA;GO&#xA;&#xA;&#xA;USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[datosFiN_tabcucom]    Script Date: 07/06/2016 15:22:30 ******/&#xA;IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[datosFiN_tabcucom]') AND type in (N'U'))&#xA;DROP TABLE [dbo].[datosFiN_tabcucom]&#xA;GO&#xA;&#xA;USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[datosFiN_tabcucom]    Script Date: 07/06/2016 15:22:30 ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;&#xA;SET ANSI_PADDING ON&#xA;GO&#xA;&#xA;CREATE TABLE [dbo].[datosFiN_tabcucom](&#xA;&#x9;[ano] [int] NULL,&#xA;&#x9;[idPais] [varchar](2) NULL,&#xA;&#x9;[idVersion] [varchar](15) NULL,&#xA;&#x9;[idComponente] [varchar](15) NULL,&#xA;&#x9;[consDistri] [varchar](6) NULL,&#xA;&#x9;[consecutivo] [int] NULL,&#xA;&#x9;[idCentro] [varchar](10) NULL,&#xA;&#x9;[idCuenta] [varchar](10) NULL,&#xA;&#x9;[idSociedad] [varchar](10) NULL,&#xA;&#x9;[idDivision] [varchar](2) NULL,&#xA;&#x9;[idNegocio] [varchar](20) NULL,&#xA;&#x9;[idEFin] [varchar](10) NULL,&#xA;&#x9;[B_asico_D_uplicaanexo] [varchar](1) NULL,&#xA;&#x9;[idRubro] [varchar](15) NULL,&#xA;&#x9;[idDriver] [varchar](10) NULL,&#xA;&#x9;[ene] [float] NULL,&#xA;&#x9;[feb] [float] NULL,&#xA;&#x9;[mar] [float] NULL,&#xA;&#x9;[abr] [float] NULL,&#xA;&#x9;[may] [float] NULL,&#xA;&#x9;[jun] [float] NULL,&#xA;&#x9;[jul] [float] NULL,&#xA;&#x9;[ago] [float] NULL,&#xA;&#x9;[sep] [float] NULL,&#xA;&#x9;[oct] [float] NULL,&#xA;&#x9;[nov] [float] NULL,&#xA;&#x9;[dic] [float] NULL,&#xA;&#x9;[idOrgVenta] [varchar](4) NULL,&#xA;&#x9;[idAgencia] [varchar](2) NULL,&#xA;&#x9;[idCanal] [varchar](2) NULL,&#xA;&#x9;[idCustomerGroup] [varchar](2) NULL,&#xA;&#x9;[Aliado] [varchar](40) NULL,&#xA;&#x9;[Categoria] [varchar](40) NULL,&#xA;&#x9;[Marca] [varchar](40) NULL,&#xA;&#x9;[ProductHierarchy] [varchar](18) NULL,&#xA;&#x9;[pagador] [varchar](10) NULL,&#xA;&#x9;[idReferencia] [varchar](18) NULL,&#xA;&#x9;[idDestino] [varchar](20) NULL,&#xA;&#x9;[idAsignacionDirecta] [varchar](11) NULL,&#xA;&#x9;[fvd1] [varchar](1) NULL,&#xA;&#x9;[fvd2] [varchar](1) NULL,&#xA;&#x9;[fvd3] [varchar](1) NULL,&#xA;&#x9;[fvd4] [varchar](1) NULL,&#xA;&#x9;[fvd5] [varchar](1) NULL&#xA;&#x9;,[idCanalViejo] [varchar](2) NULL&#xA;) ON [PRIMARY]&#xA;&#xA;GO&#xA;&#xA;SET ANSI_PADDING OFF&#xA;GO&#xA;&#xA;insert into  [dbo].[datosFiN_tabcucom]&#xA;SELECT datosFiN.*&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDriver='tabcucom')&#xA;&#xA;---Explosion&#xA;delete dbo.datosFiN WHERE (datosFiN.idDriver='tabcucom')&#xA;&#xA;&#xA;insert into dbo.datosFiN_tabcucomTmp&#xA;SELECT datosFiN_tabcucom.ano, datosFiN_tabcucom.idPais, datosFiN_tabcucom.idVersion&#xA;, datosFiN_tabcucom.idComponente&#xA;, 1 as 'consDistri'&#xA;, datosFiN_tabcucom.consecutivo, datosFiN_tabcucom.idCentro, datosFiN_tabcucom.idCuenta, datosFiN_tabcucom.idSociedad, datosFiN_tabcucom.idDivision, datosFiN_tabcucom.idNegocio, datosFiN_tabcucom.idEFin, datosFiN_tabcucom.B_asico_D_uplicaanexo, datosFiN_tabcucom.idRubro&#xA;, 'valVenta' as 'idDriver'&#xA;, (datosFiN_tabcucom.ene* prePorcentajesCompensacionAliadoRecalc.nwP1)&#xA;, (datosFiN_tabcucom.feb* prePorcentajesCompensacionAliadoRecalc.nwP2)&#xA;, (datosFiN_tabcucom.mar* prePorcentajesCompensacionAliadoRecalc.nwP3)&#xA;, (datosFiN_tabcucom.abr* prePorcentajesCompensacionAliadoRecalc.nwP4)&#xA;, (datosFiN_tabcucom.may* prePorcentajesCompensacionAliadoRecalc.nwP5)&#xA;, (datosFiN_tabcucom.jun* prePorcentajesCompensacionAliadoRecalc.nwP6)&#xA;, (datosFiN_tabcucom.jul* prePorcentajesCompensacionAliadoRecalc.nwP7)&#xA;, (datosFiN_tabcucom.ago* prePorcentajesCompensacionAliadoRecalc.nwP8)&#xA;, (datosFiN_tabcucom.sep* prePorcentajesCompensacionAliadoRecalc.nwP9)&#xA;, (datosFiN_tabcucom.oct* prePorcentajesCompensacionAliadoRecalc.nwP10)&#xA;, (datosFiN_tabcucom.nov* prePorcentajesCompensacionAliadoRecalc.nwP11)&#xA;, (datosFiN_tabcucom.dic* prePorcentajesCompensacionAliadoRecalc.nwP12)&#xA;, '' as 'idOrgVenta'&#xA;, datosFiN_tabcucom.idAgencia, datosFiN_tabcucom.idCanal, datosFiN_tabcucom.idCustomerGroup&#xA;, prePorcentajesCompensacionAliadoRecalc.Aliado&#xA;, prePorcentajesCompensacionAliadoRecalc.Categoria, datosFiN_tabcucom.Marca, datosFiN_tabcucom.ProductHierarchy, datosFiN_tabcucom.pagador, datosFiN_tabcucom.idReferencia, datosFiN_tabcucom.idDestino&#xA;, left(datosFiN_tabcucom.idAsignacionDirecta,1)+'0'+right(left(datosFiN_tabcucom.idAsignacionDirecta,6),4)+'1'+right(datosFiN_tabcucom.idAsignacionDirecta,4)&#xA;, datosFiN_tabcucom.fvd1, datosFiN_tabcucom.fvd2, datosFiN_tabcucom.fvd3, datosFiN_tabcucom.fvd4, datosFiN_tabcucom.fvd5&#xA;, idCanalViejo&#xA;FROM lkrdstr.dbo.datosFiN_tabcucom datosFiN_tabcucom&#xA;, lkrdstr.dbo.prePorcentajesCompensacionAliadoRecalc prePorcentajesCompensacionAliadoRecalc&#xA;WHERE &#xA;    prePorcentajesCompensacionAliadoRecalc.ano = datosFiN_tabcucom.ano &#xA;AND prePorcentajesCompensacionAliadoRecalc.idVersion = datosFiN_tabcucom.idVersion &#xA;AND datosFiN_tabcucom.idAgencia = prePorcentajesCompensacionAliadoRecalc.SalesOffice &#xA;AND datosFiN_tabcucom.idCustomerGroup = prePorcentajesCompensacionAliadoRecalc.CustomerGroup &#xA;AND datosFiN_tabcucom.idAgencia = prePorcentajesCompensacionAliadoRecalc.SalesOffice &#xA;AND datosFiN_tabcucom.idDestino = prePorcentajesCompensacionAliadoRecalc.idDestino &#xA;AND datosFiN_tabcucom.pagador = prePorcentajesCompensacionAliadoRecalc.pagador &#xA;AND (datosFiN_tabcucom.idComponente Like 'g%') &#xA;AND (datosFiN_tabcucom.idDriver='tabCuCom')&#xA;AND (datosFiN_tabcucom.Categoria='') &#xA;AND (datosFiN_tabcucom.idNegocio='V.COMERCIAL')&#xA;&#xA;update datosFiN_tabcucomTmp set datosFiN_tabcucomTmp.idCanal= centroPais.distriChannel&#xA;FROM lukerFin.dbo.centroPais centroPais, lkrdstr.dbo.datosFiN_tabcucomTmp datosFiN_tabcucomTmp&#xA;WHERE centroPais.idCentro = datosFiN_tabcucomTmp.idCentro &#xA;AND centroPais.idPais = datosFiN_tabcucomTmp.idPais &#xA;AND ((centroPais.distriChannel&lt;&gt;'') AND (datosFiN_tabcucomTmp.idCanal=' ') &#xA;AND (datosFiN_tabcucomTmp.idCustomerGroup=''))&#xA;&#xA;&#xA;update datosFiN set&#xA;datosFiN.idDestino= codificacionRubrosEstadosFinancieros.idDestino&#xA;FROM lukerFin.dbo.centroPais centroPais, lukerFin.dbo.codificacionRubrosEstadosFinancieros codificacionRubrosEstadosFinancieros&#xA;, lkrdstr.dbo.datosFiN_tabcucomTmp datosFiN, lukerFin.dbo.pucPais pucPais&#xA;WHERE pucPais.idCuenta = datosFiN.idCuenta AND pucPais.idPais = datosFiN.idPais AND centroPais.idCentro = datosFiN.idCentro &#xA;AND centroPais.idPais = datosFiN.idPais AND datosFiN.idRubro = codificacionRubrosEstadosFinancieros.rubro &#xA;AND pucPais.idRubroEva_2 = codificacionRubrosEstadosFinancieros.cdagrpeeva &#xA;AND centroPais.grpo_adc111 = codificacionRubrosEstadosFinancieros.componente1 &#xA;AND pucPais.cdagrpers11_2 = codificacionRubrosEstadosFinancieros.componente2 &#xA;AND ((datosFiN.consDistri='1') AND (codificacionRubrosEstadosFinancieros.idDestino='sinFS        ') &#xA;AND (codificacionRubrosEstadosFinancieros.combinacionCodificacion='grpo_adc11_cdagrpers11'))&#xA;&#xA;update datosFiN set&#xA; datosFiN.idAsignacionDirecta= &#xA;   case datosFiN.idNegocio when 'Servicios' then '0' when 'Corporativo' then '0'  else '1' end + &#xA;   case datosFiN.idOrgVenta when '' then '0' else '1' end +&#xA;   case datosFiN.idAgencia when '' then '0' else '1' end +&#xA;   case datosFiN.idCanal when '' then '0' else '1' end +&#xA;   case datosFiN.idCustomerGroup when '' then '0' else '1' end +&#xA;   case datosFiN.Aliado when '' then '0' else '1' end +&#xA;   case datosFiN.Categoria when '' then '0' else '1' end +&#xA;   case datosFiN.ProductHierarchy when '' then '0' else '1' end +&#xA;   case datosFiN.pagador when '' then '0' else '1' end +&#xA;   case datosFiN.idDestino when '' then '0' else '1' end +&#xA;   case datosFiN.Marca when '' then '0' else '1' end&#xA;FROM lkrdstr.dbo.datosFiN_tabcucomTmp datosFiN&#xA;where  (datosFiN.consDistri='1') &#xA;&#xA;----------------&#xA;insert into dbo.datosFiN&#xA;SELECT datosFiN_tabcucomTmp.ano, datosFiN_tabcucomTmp.idPais, datosFiN_tabcucomTmp.idVersion, datosFiN_tabcucomTmp.idComponente, datosFiN_tabcucomTmp.consDistri, datosFiN_tabcucomTmp.consecutivo, datosFiN_tabcucomTmp.idCentro, datosFiN_tabcucomTmp.idCuenta, datosFiN_tabcucomTmp.idSociedad, datosFiN_tabcucomTmp.idDivision, datosFiN_tabcucomTmp.idNegocio, datosFiN_tabcucomTmp.idEFin, datosFiN_tabcucomTmp.B_asico_D_uplicaanexo, datosFiN_tabcucomTmp.idRubro, datosFiN_tabcucomTmp.idDriver&#xA;, Sum(datosFiN_tabcucomTmp.ene) AS 'Sum of ene'&#xA;, Sum(datosFiN_tabcucomTmp.feb) AS 'Sum of feb'&#xA;, Sum(datosFiN_tabcucomTmp.mar) AS 'Sum of mar'&#xA;, Sum(datosFiN_tabcucomTmp.abr) AS 'Sum of abr'&#xA;, Sum(datosFiN_tabcucomTmp.may) AS 'Sum of may'&#xA;, Sum(datosFiN_tabcucomTmp.jun) AS 'Sum of jun'&#xA;, Sum(datosFiN_tabcucomTmp.jul) AS 'Sum of jul'&#xA;, Sum(datosFiN_tabcucomTmp.ago) AS 'Sum of ago'&#xA;, Sum(datosFiN_tabcucomTmp.sep) AS 'Sum of sep'&#xA;, Sum(datosFiN_tabcucomTmp.oct) AS 'Sum of oct'&#xA;, Sum(datosFiN_tabcucomTmp.nov) AS 'Sum of nov'&#xA;, Sum(datosFiN_tabcucomTmp.dic) AS 'Sum of dic'&#xA;, datosFiN_tabcucomTmp.idOrgVenta, datosFiN_tabcucomTmp.idAgencia, datosFiN_tabcucomTmp.idCanal, datosFiN_tabcucomTmp.idCustomerGroup, datosFiN_tabcucomTmp.Aliado, datosFiN_tabcucomTmp.Categoria, datosFiN_tabcucomTmp.Marca, datosFiN_tabcucomTmp.ProductHierarchy, datosFiN_tabcucomTmp.pagador, datosFiN_tabcucomTmp.idReferencia, datosFiN_tabcucomTmp.idDestino, datosFiN_tabcucomTmp.idAsignacionDirecta, datosFiN_tabcucomTmp.fvd1, datosFiN_tabcucomTmp.fvd2, datosFiN_tabcucomTmp.fvd3, datosFiN_tabcucomTmp.fvd4, datosFiN_tabcucomTmp.fvd5, datosFiN_tabcucomTmp.idCanalViejo&#xA;FROM lkrdstr.dbo.datosFiN_tabcucomTmp datosFiN_tabcucomTmp&#xA;GROUP BY datosFiN_tabcucomTmp.ano, datosFiN_tabcucomTmp.idPais, datosFiN_tabcucomTmp.idVersion, datosFiN_tabcucomTmp.idComponente, datosFiN_tabcucomTmp.consDistri, datosFiN_tabcucomTmp.consecutivo, datosFiN_tabcucomTmp.idCentro, datosFiN_tabcucomTmp.idCuenta, datosFiN_tabcucomTmp.idSociedad, datosFiN_tabcucomTmp.idDivision, datosFiN_tabcucomTmp.idNegocio, datosFiN_tabcucomTmp.idEFin, datosFiN_tabcucomTmp.B_asico_D_uplicaanexo, datosFiN_tabcucomTmp.idRubro, datosFiN_tabcucomTmp.idDriver, datosFiN_tabcucomTmp.idOrgVenta, datosFiN_tabcucomTmp.idAgencia, datosFiN_tabcucomTmp.idCanal, datosFiN_tabcucomTmp.idCustomerGroup, datosFiN_tabcucomTmp.Aliado, datosFiN_tabcucomTmp.Categoria, datosFiN_tabcucomTmp.Marca, datosFiN_tabcucomTmp.ProductHierarchy, datosFiN_tabcucomTmp.pagador, datosFiN_tabcucomTmp.idReferencia, datosFiN_tabcucomTmp.idDestino, datosFiN_tabcucomTmp.idAsignacionDirecta, datosFiN_tabcucomTmp.fvd1, datosFiN_tabcucomTmp.fvd2, datosFiN_tabcucomTmp.fvd3, datosFiN_tabcucomTmp.fvd4, datosFiN_tabcucomTmp.fvd5, datosFiN_tabcucomTmp.idCanalViejo&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\tmp dafiTmp"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{7518344C-5B1B-4A77-8584-12074114FE6E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="tmp dafiTmp"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="&#xA;insert into lkrdstr.dbo.driverDetallePorcentajeN&#xA;SELECT driverDetallePorcentajeN.ano, driverDetallePorcentajeN.idVersion, driverDetallePorcentajeN.llaveDriver, driverDetallePorcentajeN.idNegocio, driverDetallePorcentajeN.SalesOrganization, driverDetallePorcentajeN.SalesOffice, driverDetallePorcentajeN.DistributionChannel, driverDetallePorcentajeN.CustomerGroup, driverDetallePorcentajeN.Aliado, driverDetallePorcentajeN.Categoria, driverDetallePorcentajeN.ProductHierarchy, driverDetallePorcentajeN.pagador, driverDetallePorcentajeN.Marca&#xA;, 'tabTieMerc'&#xA;, driverDetallePorcentajeN.ene, driverDetallePorcentajeN.feb, driverDetallePorcentajeN.mar, driverDetallePorcentajeN.abr, driverDetallePorcentajeN.may, driverDetallePorcentajeN.jun, driverDetallePorcentajeN.jul, driverDetallePorcentajeN.ago, driverDetallePorcentajeN.sep, driverDetallePorcentajeN.oct, driverDetallePorcentajeN.nov, driverDetallePorcentajeN.dic, driverDetallePorcentajeN.idDestino&#xA;FROM lkrdstr.dbo.driverDetallePorcentajeN driverDetallePorcentajeN&#xA;WHERE (driverDetallePorcentajeN.baseDriver='SalidAlmV')&#xA;and driverDetallePorcentajeN.idVersion &lt;&gt;'Real'&#xA;&#xA;&#xA;USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[DatosFiTmpN]    Script Date: 02/15/2016 14:52:18 ******/&#xA;IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DatosFiTmpN]') AND type in (N'U'))&#xA;DROP TABLE [dbo].[DatosFiTmpN]&#xA;GO&#xA;&#xA;USE [lkrdstr]&#xA;GO&#xA;&#xA;/****** Object:  Table [dbo].[DatosFiTmpN]    Script Date: 02/15/2016 14:52:18 ******/&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;&#xA;SET ANSI_PADDING ON&#xA;GO&#xA;&#xA;CREATE TABLE [dbo].[DatosFiTmpN](&#xA;&#x9;[ano] [int] NULL,&#xA;&#x9;[idPais] [varchar](2) NULL,&#xA;&#x9;[idVersion] [varchar](15) NULL,&#xA;&#x9;[idComponente] [varchar](15) NULL,&#xA;&#x9;[consDistri] [varchar](6) NULL,&#xA;&#x9;[consecutivo] [int] NULL,&#xA;&#x9;[idCentro] [varchar](10) NULL,&#xA;&#x9;[idCuenta] [varchar](10) NULL,&#xA;&#x9;[idSociedad] [varchar](10) NULL,&#xA;&#x9;[idDivision] [varchar](2) NULL,&#xA;&#x9;[idNegocio] [varchar](20) NULL,&#xA;&#x9;[idEFin] [varchar](10) NULL,&#xA;&#x9;[B_asico_D_uplicaanexo] [varchar](1) NULL,&#xA;&#x9;[idRubro] [varchar](15) NULL,&#xA;&#x9;[idDriver] [varchar](10) NULL,&#xA;&#x9;[ene] [float] NULL,&#xA;&#x9;[feb] [float] NULL,&#xA;&#x9;[mar] [float] NULL,&#xA;&#x9;[abr] [float] NULL,&#xA;&#x9;[may] [float] NULL,&#xA;&#x9;[jun] [float] NULL,&#xA;&#x9;[jul] [float] NULL,&#xA;&#x9;[ago] [float] NULL,&#xA;&#x9;[sep] [float] NULL,&#xA;&#x9;[oct] [float] NULL,&#xA;&#x9;[nov] [float] NULL,&#xA;&#x9;[dic] [float] NULL,&#xA;&#x9;[SalesOrganization] [varchar](4) NULL,&#xA;&#x9;[SalesOffice] [varchar](2) NULL,&#xA;&#x9;[DistributionChannel] [varchar](2) NULL,&#xA;&#x9;[CustomerGroup] [varchar](2) NULL,&#xA;&#x9;[Aliado] [nvarchar](40) NULL,&#xA;&#x9;[Categoria] [nvarchar](40) NULL,&#xA;                [Marca] [varchar](40) NULL,&#xA;&#x9;[ProductHierarchy] [varchar](18) NULL,&#xA;&#x9;[pagador] [varchar](10) NULL,&#xA;&#x9;[idReferencia] [varchar](18) NULL,&#xA;&#x9;[idDestino] [varchar](20) NULL,&#xA;&#x9;[idAsignacionDirecta] [varchar](11) NULL,&#xA;&#x9;[fvd1] [varchar](1) NULL,&#xA;&#x9;[fvd2] [varchar](1) NULL,&#xA;&#x9;[fvd3] [varchar](1) NULL,&#xA;&#x9;[fvd4] [varchar](1) NULL,&#xA;&#x9;[fvd5] [varchar](1) NULL&#xA;&#x9;,[idCanalViejo] [varchar](2) NULL&#xA;) ON [PRIMARY]&#xA;&#xA;GO&#xA;&#xA;SET ANSI_PADDING OFF&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\tmp DriDetVal"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F904A885-1160-47AB-B5D3-AADA69D8883A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="tmp DriDetVal"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="USE [lkrdstr]&#xA;GO&#xA;&#xA;&#xA;truncateTABLE [dbo].[tmpDriverDetalleValoresN]&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Unifica dest  y Directo a"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0961C020-D815-411F-B3B3-C02E0CB20515}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Unifica dest  y Directo a"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{16B4CD77-9DC9-4C39-AFD0-5A1F89D90390}"
          SQLTask:SqlStatementSource="DECLARE @x_ano int, @x_version nvarchar(20),@x_mes int&#xA;SELECT @x_ano =( SELECT z_prog_cntrol.vrble_vlue FROM [lukerFin].dbo.z_prog_cntrol z_prog_cntrol &#xA;WHERE (z_prog_cntrol.prgram_nme='NwStrctra') AND (z_prog_cntrol.vrble_nme='NwStrAno') )&#xA;&#xA;update datosFiN set&#xA; datosFiN.idDestino=''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idNegocio='V.GLOBAL            ')&#xA;and  datosFiN.idDestino&lt;&gt;'cacao'&#xA;update datosFiN set&#xA;  datosFiN.idDestino= ''&#xA;, datosFiN.Aliado= 'TEAM         '&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino='TEAM         ')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set&#xA;   datosFiN.idOrgVenta= '1010'&#xA;,  datosFiN.idDestino= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino='Marcas       ')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set &#xA;  datosFiN.Aliado= 'CASA LUKER'&#xA;, datosFiN.idDestino= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino='sinJgbniTeam ')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set &#xA; datosFiN.idDestino= ''&#xA;, datosFiN.idCanal= '11'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino in ('sn14MarDis','sinCadena') )&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set &#xA;  datosFiN.idDestino= ''&#xA;, datosFiN.Aliado= 'CASA LUKER'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino='MarcasLK     ')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set &#xA;  datosFiN.idDestino= 'sinAseo'&#xA;, datosFiN.Aliado= 'CASA LUKER'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino='MarcasLKnoAse')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFi set&#xA; datosFi.Aliado= zProductHierarchyNodeN5Mar.Aliado&#xA;FROM  lkrdstr.dbo.datosFiN datosFi&#xA;   , lukerFin.dbo.SQLukerFinConfigOrdEstad SQLukerFinConfigOrdEstad&#xA;   , lkrdstr.dbo.zProductHierarchyNodeN5_PRODHN1 zProductHierarchyNodeN5Mar&#xA;WHERE  (datosFi.idComponente Like 'go%') &#xA;AND (left(right(rtrim(datosFi.idComponente),11),10)=SQLukerFinConfigOrdEstad.idOrden) &#xA;AND (rtrim(SQLukerFinConfigOrdEstad.idProdHierch)=zProductHierarchyNodeN5Mar.PRODHN1)&#xA;and (datosFi.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;&#xA;update datosFiN set &#xA; datosFiN.idDestino= ''&#xA;, datosFiN.idCanal= '14'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino='cadenas      ')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set&#xA; datosFiN.idDestino= 'Cacao        '&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino='elaboradCacao')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set&#xA;datosFiN.Aliado= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.Categoria&lt;&gt;'') &#xA;AND (datosFiN.Aliado&lt;&gt;'')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;&#xA;update datosFiN set&#xA;datosFiN.idDestino= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDestino Not In ('','mayoCaha')) &#xA;AND (datosFiN.Categoria&lt;&gt;'')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;AND (datosFiN.idComponente not Like 'go%') &#xA;&#xA;update datosFiN set&#xA; datosFiN.idCanal= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idCustomerGroup='00')&#xA;&#xA;&#xA;update datosFiN set&#xA; datosFiN.idOrgVenta= centroPais.idAreaSap&#xA; , datosFiN.Categoria=''&#xA;FROM lukerFin.dbo.centroPais centroPais, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE centroPais.idCentro = datosFiN.idCentro AND centroPais.idPais = datosFiN.idPais &#xA;AND ((datosFiN.idDriver='KilosMvCAV') &#xA;AND centroPais.idAreaSap in  (&#xA;SELECT DISTINCT centroPais.idAreaSap&#xA;FROM lukerFin.dbo.centroPais centroPais&#xA;WHERE (centroPais.idCentro Like 'LC32%') &#xA;   AND (centroPais.idAreaSap&lt;&gt;'          ')&#xA;   --AND (datosFiN.idVersion='real           ') &#xA;))&#xA;&#xA;&#xA;update datosFiN set&#xA;datosFiN.idOrgVenta= '1010'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDriver='KilosMvCAV') &#xA;AND (datosFiN.idOrgVenta='')&#xA;&#xA;&#xA;update datosFiN set&#xA; datosFiN.Aliado= centroPais.grpo_adc112&#xA;FROM lukerFin.dbo.centroPais centroPais, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE centroPais.idCentro = datosFiN.idCentro &#xA;AND centroPais.idPais = datosFiN.idPais &#xA;AND ((centroPais.grpo_adc112 in ('CASA LUKER','TEAM','JGB')))&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set&#xA; datosFiN.idDriver= 'ValVenta'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDriver='tabCuCom  ')&#xA;AND (datosFiN.Categoria&lt;&gt;'')&#xA;&#xA;/**&#xA;update datosFiN set&#xA; datosFiN.idCanal= canalesVenta.idDistributionChannel&#xA; , datosFiN.idCustomerGroup= ''&#xA;FROM lukerFin.dbo.canalesVenta canalesVenta&#xA;, lukerFin.dbo.centroPais centroPais&#xA;, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE centroPais.idCentro = datosFiN.idCentro &#xA;AND centroPais.idPais = datosFiN.idPais AND canalesVenta.idCanal = centroPais.idCanal &#xA;AND ((datosFiN.idDriver='tabcucom') AND (datosFiN.pagador='') &#xA;AND (centroPais.idCanal Not In ('00','')))&#xA;**/&#xA;/**&#xA;update datosFiN set&#xA; datosFiN.idOrgVenta=&#xA; case datosFiN.idAgencia when '' then&#xA;    case  datosFiN.idCanal when '' then case pagador when '' then 'tbc0' else 'tbc4' end else 'tbc1' end&#xA; else &#xA;   case  datosFiN.idCanal when '' then 'tbc2' else 'tbc3' end&#xA; end   &#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDriver='tabCuCom')&#xA;**/&#xA;&#xA;update datosFiN set&#xA; datosFiN.idCanal= ''&#xA; FROM lkrdstr.dbo.datosFiN datosFiN&#xA;, lkrdstr.dbo.unificaDistribucionPorGrupoDeClientes unificaDistribucionPorGrupoDeClientes&#xA;WHERE datosFiN.idCustomerGroup = unificaDistribucionPorGrupoDeClientes.CustomerGroup&#xA;and (datosFiN.idDriver&lt;&gt;'tabCuCom')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;--- tabTieMerc customerGroup y districhanes sin ambiguedad --&#xA;update datosFiN set&#xA;  datosFiN.idCustomerGroup= customerGroup.CustomerGroup&#xA;, datosFiN.idCanal= customerGroup.distriChannel&#xA;FROM lkrdstr.dbo.customerGroup customerGroup&#xA;    , lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE datosFiN.idCanalViejo = customerGroup.idCanalViejo &#xA;AND ((datosFiN.idDriver='tabTieMerc') &#xA;AND (datosFiN.idCanalViejo&lt;&gt;' '))&#xA;&#xA;&#xA;---- confirmar Aliado y marca&#xA;update datosFiN set&#xA;   datosFiN.Marca= ''&#xA;-- , datosFiN.Aliado= categoriaAliadoTX.Aliado&#xA;FROM lkrdstr.dbo.categoriaAliadoTX categoriaAliadoTX, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE datosFiN.Categoria = categoriaAliadoTX.Categoria &#xA;AND ((datosFiN.idDriver='tabTieMerc'))&#xA;select * from lkrdstr.dbo.categoriaAliadoTX &#xA;&#xA;update datosFiN set&#xA;  datosFiN.idCustomerGroup= ''&#xA;, datosFiN.idDestino= 'MAYO'&#xA;, datosFiN.idCanal=''&#xA;--  datosFiN.idAsignacionDirecta= left(idAsignacionDirecta,1)+ '1'+ right(left(idAsignacionDirecta,4),2)+ '0'+ right(idAsignacionDirecta,6)&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE --(datosFiN.idVersion='real') AND &#xA; (datosFiN.idCanalViejo='04')&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;update datosFiN set&#xA;  datosFiN.idCustomerGroup= ''&#xA;, datosFiN.idDestino= 'DSAG'&#xA;, datosFiN.idCanal=''&#xA;--  datosFiN.idAsignacionDirecta= left(idAsignacionDirecta,1)+ '1'+ right(left(idAsignacionDirecta,4),2)+ '0'+ right(idAsignacionDirecta,6)&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE --(datosFiN.idVersion='real') AND &#xA;(datosFiN.idCanalViejo in ('08','Ag'))&#xA;and (datosFiN.idDriver&lt;&gt;'tabTieMerc')&#xA;&#xA;&#xA;update datosFiN set&#xA; datosFiN.idDestino= 'servMerc'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idDriver='tabTieMerc')&#xA;AND (datosFiN.idAgencia='') &#xA;AND (datosFiN.idCanal=' ') &#xA;AND (datosFiN.idCustomerGroup='')&#xA;&#xA;update datosFiN set&#xA; datosFiN.idCanal= ''&#xA;FROM lkrdstr.dbo.customerGroupMultiCanal customerGroupMultiCanal&#xA;, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE datosFiN.idCustomerGroup = customerGroupMultiCanal.CustomerGroup &#xA;AND ((datosFiN.idVersion='real           ') &#xA;AND (datosFiN.idCanal='11'))&#xA;&#xA;update datosFiN set&#xA;datosFiN.idCustomerGroup= centroPais.idCustomerGroup&#xA;FROM lukerFin.dbo.centroPais centroPais, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE centroPais.idCentro = datosFiN.idCentro AND centroPais.idPais = datosFiN.idPais AND ((datosFiN.idCustomerGroup='') &#xA;AND (centroPais.idCustomerGroup&lt;&gt;'') AND (datosFiN.idCanal In (' ','00')) AND (datosFiN.idDestino='') AND (datosFiN.pagador=''))&#xA;&#xA;&#xA;update datosFiN set datosFiN.idCanal= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idCustomerGroup='07')&#xA;&#xA;update datosFiN set&#xA; datosFiN.idDestino= 'Invemerk'&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idRubro Like '%MR') &#xA;AND (datosFiN.idComponente='gxotros-LKR0') AND (datosFiN.idDestino='')&#xA;&#xA;update datosFiN set&#xA; datosFiN.idCustomerGroup= centroPais.idCustomerGroup&#xA;FROM lukerFin.dbo.centroPais centroPais, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE centroPais.idCentro = datosFiN.idCentro &#xA;AND centroPais.idPais = datosFiN.idPais AND ((datosFiN.idVersion in('Version1','Real')) &#xA;AND (datosFiN.idDestino='Invetrade') AND (datosFiN.idCustomerGroup='') &#xA;AND (centroPais.idCustomerGroup&lt;&gt;'') AND (datosFiN.idCanal=' '))&#xA;&#xA;update datosFiN set&#xA;   datosFiN.idCustomerGroup= centroPais.idCustomerGroup&#xA; , datosFiN.idDestino=''&#xA;FROM lukerFin.dbo.centroPais centroPais, lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE centroPais.idCentro = datosFiN.idCentro &#xA;AND centroPais.idPais = datosFiN.idPais AND ((datosFiN.idVersion in('Version1','Real')) &#xA;AND (datosFiN.idDestino='sinDstrCha14') AND (datosFiN.idCustomerGroup='') &#xA;AND (centroPais.idCustomerGroup&lt;&gt;'') AND (datosFiN.idCanal=' '))&#xA;&#xA;update datosFiN set&#xA; datosFiN.idOrgVenta= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN, lukerFin.dbo.pucPais pucPais, lukerFin.dbo.rubros_grp_nopat rubros_grp_nopat&#xA;WHERE rubros_grp_nopat.B_asico_D_uplicaanexo = datosFiN.B_asico_D_uplicaanexo &#xA;AND rubros_grp_nopat.idRubro = datosFiN.idRubro &#xA;AND pucPais.idCuenta = datosFiN.idCuenta &#xA;AND pucPais.idPais = datosFiN.idPais &#xA;AND ((datosFiN.idCentro='DC33010100') &#xA;AND (pucPais.nombreCuenta='SERVICIOS TRANSPORTE, FLETES Y ACARREOS - LETRA             ') &#xA;OR (datosFiN.idCentro='DC33010100') &#xA;AND (pucPais.nombreCuenta='SERVICIOS  CARGUES Y DESCARGUES                             '))&#xA;&#xA;update datosFiN set&#xA; datosFiN.idOrgVenta= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idOrgVenta='1010') &#xA;AND (datosFiN.idDriver='KilosMvCAV')&#xA;&#xA;update datosFiN set&#xA; datosFiN.Marca= zProductHierarchyNodeN5.Marca&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;, HBAVENNAL.dbo.zProductHierarchyNodeN5 zProductHierarchyNodeN5&#xA;WHERE datosFiN.ProductHierarchy = zProductHierarchyNodeN5.ProductHierarchyNode &#xA;AND ((datosFiN.ProductHierarchy&lt;&gt;'') AND (datosFiN.Marca&lt;&gt;'') AND (datosFiN.Marca&lt;&gt;zProductHierarchyNodeN5.Marca))&#xA;&#xA;update datosFiN set&#xA;  datosFiN.idDestino= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.idCustomerGroup&lt;&gt;'') &#xA;AND (datosFiN.idDestino='sinDstrCha14')&#xA;&#xA;/**&#xA;update datosFiN set&#xA; datosFiN.idDestino= ''&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;WHERE (datosFiN.ano=2018) &#xA;AND (datosFiN.idDestino='sinDstrCha14') &#xA;AND (datosFiN.idCanal&lt;&gt;' ')&#xA;**/&#xA;&#xA;update datosFiN set&#xA;datosFiN.idCanal= ''&#xA;, datosFiN.idDestino= left(pptoDistributionChannel.nombreCanal,4)&#xA;FROM lkrdstr.dbo.datosFiN datosFiN, HBAVENNAL.dbo.pptoDistributionChannel pptoDistributionChannel&#xA;WHERE pptoDistributionChannel.idCanal = datosFiN.idCanal &#xA;AND ((datosFiN.idDriver='tabcucom') AND (datosFiN.idCustomerGroup='') AND (datosFiN.idCanal In ('12','27','26','14')))&#xA;&#xA;update datosFiN set&#xA; datosFiN.idAsignacionDirecta= &#xA;   case datosFiN.idNegocio when 'Servicios' then '0' when 'Corporativo' then '0'  else '1' end + &#xA;   case datosFiN.idOrgVenta when '' then '0' else '1' end +&#xA;   case datosFiN.idAgencia when '' then '0' else '1' end +&#xA;   case datosFiN.idCanal when '' then '0' else '1' end +&#xA;   case datosFiN.idCustomerGroup when '' then '0' else '1' end +&#xA;   case datosFiN.Aliado when '' then '0' else '1' end +&#xA;   case datosFiN.Categoria when '' then '0' else '1' end +&#xA;   case datosFiN.ProductHierarchy when '' then '0' else '1' end +&#xA;   case datosFiN.pagador when '' then '0' else '1' end +&#xA;   case datosFiN.idDestino when '' then '0' else '1' end +&#xA;   case datosFiN.Marca when '' then '0' else '1' end&#xA;FROM lkrdstr.dbo.datosFiN datosFiN&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{9510780A-A782-43FF-AEDC-13040DC00466}"
      DTS:From="Package\tmp DriDetVal"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\base drv valVenta saliV - REAL" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{D161F472-F2E7-403F-AA72-4AEEA51CE081}"
      DTS:From="Package\00 1 2 pos inv"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\00 1 3 tabCuCom" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{80C6AD98-4EA5-4B21-AF4A-F75D48CD0F74}"
      DTS:From="Package\tmp dafiTmp"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\explo sin destino" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{561D7758-C027-42EE-8233-3FCEF46C33C5}"
      DTS:From="Package\destinos"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\crea daFin" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 14]"
      DTS:CreationName=""
      DTS:DTSID="{E47AC811-1D95-4707-849E-2D72503E2278}"
      DTS:From="Package\00 2 Drivers totales y Porcentajes con destino 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 14"
      DTS:To="Package\tmp dafiTmp" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 15]"
      DTS:CreationName=""
      DTS:DTSID="{3A770FBA-E02C-4797-81E5-5F25033642FE}"
      DTS:From="Package\preDistri Mercad Explo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 15"
      DTS:To="Package\datosFiN 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 17]"
      DTS:CreationName=""
      DTS:DTSID="{F0191294-9115-452F-BE6F-80B88FB07B12}"
      DTS:From="Package\datosFiN 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 17"
      DTS:To="Package\canalv a customerg" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 27]"
      DTS:CreationName=""
      DTS:DTSID="{169E0798-8C99-449F-9E4B-59594DECE2B1}"
      DTS:From="Package\00 1 3 tabCuCom"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 27"
      DTS:To="Package\00 2 Drivers totales y Porcentajes con destino 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 28]"
      DTS:CreationName=""
      DTS:DTSID="{102B1DA9-DD69-4919-BCFE-883C0F28B51A}"
      DTS:From="Package\Unifica dest  y Directo a"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 28"
      DTS:To="Package\Hereda ver7(CM)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 29]"
      DTS:CreationName=""
      DTS:DTSID="{BBDB5743-ECAE-4269-A80C-5046E422397D}"
      DTS:From="Package\tcc expl 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 29"
      DTS:To="Package\00 1 1 Drivers totales y Porcentajes con destino" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 36]"
      DTS:CreationName=""
      DTS:DTSID="{FF44B249-2BB5-4795-B296-25F2868C080B}"
      DTS:From="Package\explo sin destino"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 36"
      DTS:To="Package\Delta tabcucom" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 37]"
      DTS:CreationName=""
      DTS:DTSID="{51C8532F-E666-496A-81BD-345978E7E399}"
      DTS:From="Package\Hereda ver7(CM)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 37"
      DTS:To="Package\Destino invemerk" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 45]"
      DTS:CreationName=""
      DTS:DTSID="{D82F4605-46E0-4F03-BB0E-F39212ABC231}"
      DTS:From="Package\pre ttc porcentajes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 45"
      DTS:To="Package\tcc expl 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 46]"
      DTS:CreationName=""
      DTS:DTSID="{A702624F-C72A-4D50-99B3-510662A02292}"
      DTS:From="Package\Destino invemerk"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 46"
      DTS:To="Package\Destino invetrade" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 47]"
      DTS:CreationName=""
      DTS:DTSID="{77E4F2A8-A191-4E8A-AED3-2B0B349A496F}"
      DTS:From="Package\Destino invetrade"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 47"
      DTS:To="Package\pre ttc porcentajes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{4E0CCDD4-7342-4182-BDF4-B6DDBE121541}"
      DTS:From="Package\crea daFin"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\datosFiN" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{21C91AA8-5680-4C95-B193-1CB0355CE5DA}"
      DTS:From="Package\datosFiN"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\PreDistri Mercaderista Driver" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{45A2FCAC-2FD8-418D-893B-452010919FD6}"
      DTS:From="Package\canalv a customerg"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Unifica dest  y Directo a" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{2913AFD4-E411-47CC-AEF1-0388AC695CC1}"
      DTS:From="Package\00 1 1 Drivers totales y Porcentajes con destino"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\00 1 2 pos inv" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{962FC25C-21C9-4218-9BEB-0DE690BB5172}"
      DTS:From="Package\PreDistri Mercaderista Driver"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\preDistri Mercad Explo" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción]"
      DTS:CreationName=""
      DTS:DTSID="{D5CB9697-AFBD-4F48-955E-F29478EAF08F}"
      DTS:From="Package\init"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción"
      DTS:To="Package\tmp DriDetVal" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 1]"
      DTS:CreationName=""
      DTS:DTSID="{C5C6BD8E-1629-4133-8098-768A522F7F5B}"
      DTS:From="Package\base drv valVenta saliV - REAL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 1"
      DTS:To="Package\destinos" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 2]"
      DTS:CreationName=""
      DTS:DTSID="{DD57D2E9-6A9E-45FC-AF80-17A4DC21068F}"
      DTS:From="Package\Delta tabcucom"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 2"
      DTS:To="Package\Exploreal" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 3]"
      DTS:CreationName=""
      DTS:DTSID="{7362E795-C4E2-49C4-880E-DD0811659B0D}"
      DTS:From="Package\Tarea Ejecutar SQL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 3"
      DTS:To="Package\init" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
        <NodeLayout
          Size="144,56"
          Id="Package\00 1 1 Drivers totales y Porcentajes con destino"
          TopLeft="640.718330495303,770.625192235984" />
        <NodeLayout
          Size="136,44"
          Id="Package\00 1 2 pos inv"
          TopLeft="643.737198419832,693.5685884624" />
        <NodeLayout
          Size="136,44"
          Id="Package\00 1 3 tabCuCom"
          TopLeft="644.718330495303,627.832739405796" />
        <NodeLayout
          Size="144,56"
          Id="Package\00 2 Drivers totales y Porcentajes con destino 1"
          TopLeft="640.718330495303,551.644060160513" />
        <NodeLayout
          Size="129.6,50.4"
          Id="Package\Delta tabcucom"
          TopLeft="644.718330495303,321.115313876407" />
        <NodeLayout
          Size="136,44"
          Id="Package\Destino invemerk"
          TopLeft="323.273587221727,963.093560286463" />
        <NodeLayout
          Size="136,44"
          Id="Package\Destino invetrade"
          TopLeft="528.448789660271,1060.40809854602" />
        <NodeLayout
          Size="136,44"
          Id="Package\explo sin destino"
          TopLeft="644.718330495303,416.75615780832" />
        <NodeLayout
          Size="256.8,196.8"
          Id="Package\Exploreal"
          TopLeft="1061.71430379517,275.294121507955" />
        <NodeLayout
          Size="136,44"
          Id="Package\init"
          TopLeft="66.3948735096475,40.2476095412398" />
        <NodeLayout
          Size="136,44"
          Id="Package\pre ttc porcentajes"
          TopLeft="650.060648866007,935.656490158241" />
        <NodeLayout
          Size="169.6,41.6"
          Id="Package\Tarea Ejecutar SQL"
          TopLeft="324.571434098847,44.6588241557349" />
        <NodeLayout
          Size="136,44"
          Id="Package\tcc expl 1"
          TopLeft="644.718330495303,846.285569594475" />
        <NodeLayout
          Size="136,44"
          Id="Package\tmp dafiTmp"
          TopLeft="644.718330495303,486.700663934097" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="712.114556910398,693.5685884624">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-21.8113207547169"
              Start="0,0"
              End="0,-14.3113207547169">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-14.3113207547169" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="712.718330495303,486.700663934097">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-25.9445061257773"
              Start="0,0"
              End="0,-18.4445061257773">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-18.4445061257773" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="203.2,358">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="129.6,-12.8"
              Start="0,0"
              End="122.1,-12.8">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="60.8,0" />
                  <mssgle:CubicBezierSegment
                    Point1="60.8,0"
                    Point2="64.8,0"
                    Point3="64.8,-4" />
                  <mssgle:LineSegment
                    End="64.8,-8.80000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="64.8,-8.80000000000001"
                    Point2="64.8,-12.8"
                    Point3="68.8,-12.8" />
                  <mssgle:LineSegment
                    End="122.1,-12.8" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 14]"
          TopLeft="712.605122948134,551.644060160513">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-21.0188679245283"
              Start="0,0"
              End="0,-13.5188679245283">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-13.5188679245283" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 27]"
          TopLeft="712.605122948134,627.832739405796">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-20.7547169811321,-20.3018867924528"
              Start="0,0"
              End="-20.7547169811321,-12.8018867924528">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-6.15094339622647" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-6.15094339622647"
                    Point2="0,-10.1509433962265"
                    Point3="-4,-10.1509433962265" />
                  <mssgle:LineSegment
                    End="-16.7547169811321,-10.1509433962265" />
                  <mssgle:CubicBezierSegment
                    Point1="-16.7547169811321,-10.1509433962265"
                    Point2="-20.7547169811321,-10.1509433962265"
                    Point3="-20.7547169811321,-14.1509433962265" />
                  <mssgle:LineSegment
                    End="-20.7547169811321,-12.8018867924528" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 29]"
          TopLeft="712.605122948134,846.285569594475">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-19.7735849056603"
              Start="0,0"
              End="0,-12.2735849056603">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-12.2735849056603" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 36]"
          TopLeft="711.118330495303,416.75615780832">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-45.2408439319128"
              Start="0,0"
              End="0,-37.7408439319128">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-37.7408439319128" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 37]"
          TopLeft="400.8,870.4">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.52641277827331,92.6935602864627"
              Start="0,0"
              End="-9.52641277827331,85.1935602864627">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.3467801432313" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.3467801432313"
                    Point2="0,46.3467801432313"
                    Point3="-4,46.3467801432313" />
                  <mssgle:LineSegment
                    End="-5.52641277827331,46.3467801432313" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.52641277827331,46.3467801432313"
                    Point2="-9.52641277827331,46.3467801432313"
                    Point3="-9.52641277827331,50.3467801432313" />
                  <mssgle:LineSegment
                    End="-9.52641277827331,85.1935602864627" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 45]"
          TopLeft="715.389489680655,935.656490158241">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-45.3709205637656"
              Start="0,0"
              End="0,-37.8709205637656">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-37.8709205637656" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 46]"
          TopLeft="391.273587221727,1007.09356028646">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="183.841869105211,53.3145382595548"
              Start="0,0"
              End="183.841869105211,45.8145382595548">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6167610608988" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.6167610608988"
                    Point2="0,31.6167610608988"
                    Point3="4,31.6167610608988" />
                  <mssgle:LineSegment
                    End="179.841869105211,31.6167610608988" />
                  <mssgle:CubicBezierSegment
                    Point1="179.841869105211,31.6167610608988"
                    Point2="183.841869105211,31.6167610608988"
                    Point3="183.841869105211,35.6167610608988" />
                  <mssgle:LineSegment
                    End="183.841869105211,45.8145382595548" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 47]"
          TopLeft="617.782122993604,1060.40809854602">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="100.278525872403,-80.7516083877767"
              Start="0,0"
              End="100.278525872403,-73.2516083877767">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-28.864026669444" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-28.864026669444"
                    Point2="0,-32.864026669444"
                    Point3="4,-32.864026669444" />
                  <mssgle:LineSegment
                    End="96.2785258724026,-32.864026669444" />
                  <mssgle:CubicBezierSegment
                    Point1="96.2785258724026,-32.864026669444"
                    Point2="100.278525872403,-32.864026669444"
                    Point3="100.278525872403,-36.864026669444" />
                  <mssgle:LineSegment
                    End="100.278525872403,-73.2516083877767" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="712.114556910398,770.625192235984">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,-33.132075471698"
              Start="0,0"
              End="0,-25.632075471698">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-25.632075471698" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción]"
          TopLeft="132.397436754824,84.2476095412398">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,90.1523904587602"
              Start="0,0"
              End="0,82.6523904587602">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,82.6523904587602" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 2]"
          TopLeft="774.318330495303,346.315313876407">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="287.39597329987,27.3788076315479"
              Start="0,0"
              End="279.89597329987,27.3788076315479">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="139.697986649935,0" />
                  <mssgle:CubicBezierSegment
                    Point1="139.697986649935,0"
                    Point2="143.697986649935,0"
                    Point3="143.697986649935,4" />
                  <mssgle:LineSegment
                    End="143.697986649935,23.3788076315479" />
                  <mssgle:CubicBezierSegment
                    Point1="143.697986649935,23.3788076315479"
                    Point2="143.697986649935,27.3788076315479"
                    Point3="147.697986649935,27.3788076315479" />
                  <mssgle:LineSegment
                    End="279.89597329987,27.3788076315479" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 3]"
          TopLeft="324.571434098847,63.8532168484873">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-122.1765605892,0"
              Start="0,0"
              End="-114.6765605892,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-114.6765605892,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="136,44"
          Id="Package\destinos"
          TopLeft="30.8894879436052,191.079909837004" />
        <NodeLayout
          Size="136,44"
          Id="Package\base drv valVenta saliV - REAL"
          TopLeft="29.4609164907053,102.763595993715" />
        <NodeLayout
          Size="136,44"
          Id="Package\tmp DriDetVal"
          TopLeft="26.6037735849056,29.9056603773585" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="96.0323450378055,73.9056603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.8579356163563"
              Start="0,0"
              End="0,21.3579356163563">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.3579356163563" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 1]"
          TopLeft="98.1752022171553,146.763595993715">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.316313843289"
              Start="0,0"
              End="0,36.816313843289">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.816313843289" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <GroupLayout
          Text="Base Real Valventa"
          ParentId="Package"
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="214.4,278.4"
          Size="214.4,322.4"
          Id="7c910ce4-2ff3-4af4-a43e-14325211deda"
          TopLeft="35.8504022544836,100.782354277475">
          <GroupLayout.ChildrenIds>
            <s:String>Package\destinos</s:String>
            <s:String>Package\base drv valVenta saliV - REAL</s:String>
            <s:String>Package\tmp DriDetVal</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 1]</s:String>
            <s:String>Package.PrecedenceConstraints[Restricción 1]</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
        <NodeLayout
          Size="136,44"
          Id="Package\preDistri Mercad Explo"
          TopLeft="36.9811320754717,240.584905660377" />
        <NodeLayout
          Size="136,44"
          Id="Package\Hereda ver7(CM)"
          TopLeft="36.9811320754717,523.905660377358" />
        <NodeLayout
          Size="136,44"
          Id="Package\PreDistri Mercaderista Driver"
          TopLeft="36.9811320754717,161.679245283019" />
        <NodeLayout
          Size="136,44"
          Id="Package\datosFiN 1"
          TopLeft="36.9811320754717,309.377358490566" />
        <NodeLayout
          Size="136,44"
          Id="Package\Unifica dest  y Directo a"
          TopLeft="34.9811320754717,458.433962264151" />
        <NodeLayout
          Size="136,44"
          Id="Package\canalv a customerg"
          TopLeft="36.9433962264151,381.754716981132" />
        <NodeLayout
          Size="136,44"
          Id="Package\crea daFin"
          TopLeft="36.9811320754717,20.7358490566038" />
        <NodeLayout
          Size="136,44"
          Id="Package\datosFiN"
          TopLeft="36.9811320754717,92.622641509434" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 28]"
          TopLeft="82.1132075471699,502.358490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.7547169811321,21.5471698113207"
              Start="0,0"
              End="22.7547169811321,14.0471698113207">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.1509433962264" />
                  <mssgle:LineSegment
                    End="22.7547169811321,16.1509433962264" />
                  <mssgle:LineSegment
                    End="22.7547169811321,14.0471698113207" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="84.1132075471699,136.547169811321">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.7547169811321,25.1320754716981"
              Start="0,0"
              End="20.7547169811321,17.6320754716981">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.8301886792453" />
                  <mssgle:LineSegment
                    End="20.7547169811321,18.8301886792453" />
                  <mssgle:LineSegment
                    End="20.7547169811321,17.6320754716981" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="104.867924528302,64.6603773584906">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.9622641509434"
              Start="0,0"
              End="0,20.4622641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4622641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="84.1132075471699,205.603773584906">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.7547169811321,34.9811320754717"
              Start="0,0"
              End="20.7547169811321,27.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.2264150943396" />
                  <mssgle:LineSegment
                    End="20.7547169811321,26.2264150943396" />
                  <mssgle:LineSegment
                    End="20.7547169811321,27.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 15]"
          TopLeft="84.1132075471699,284.509433962264">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.7547169811321,24.8679245283019"
              Start="0,0"
              End="20.7547169811321,17.3679245283019">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6415094339623" />
                  <mssgle:LineSegment
                    End="20.7547169811321,18.6415094339623" />
                  <mssgle:LineSegment
                    End="20.7547169811321,17.3679245283019" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 17]"
          TopLeft="104.867924528302,353.301886792453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-0.0377358490566166,28.4528301886792"
              Start="0,0"
              End="-0.0377358490566166,20.9528301886792">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.2264150943396" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,14.2264150943396" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,20.9528301886792" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="104.830188679245,425.679245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1.96226415094338,32.754716981132"
              Start="0,0"
              End="-1.96226415094338,25.254716981132">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.3773584905661" />
                  <mssgle:LineSegment
                    End="-1.96226415094338,16.3773584905661" />
                  <mssgle:LineSegment
                    End="-1.96226415094338,25.254716981132" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <GroupLayout
          Text="datosFi N"
          ParentId="Package"
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="206.4,594.4"
          Size="206.4,638.4"
          Id="3912bb6b-a377-47fb-bb2a-5752231bf4c7"
          TopLeft="295.947441897853,258.381684436208">
          <GroupLayout.ChildrenIds>
            <s:String>Package\preDistri Mercad Explo</s:String>
            <s:String>Package\Hereda ver7(CM)</s:String>
            <s:String>Package\PreDistri Mercaderista Driver</s:String>
            <s:String>Package\datosFiN 1</s:String>
            <s:String>Package\Unifica dest  y Directo a</s:String>
            <s:String>Package\canalv a customerg</s:String>
            <s:String>Package\crea daFin</s:String>
            <s:String>Package\datosFiN</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 28]</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 6]</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 5]</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 9]</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 15]</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 17]</s:String>
            <s:String>Package.PrecedenceConstraints[Constraint 7]</s:String>
          </GroupLayout.ChildrenIds>
        </GroupLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>